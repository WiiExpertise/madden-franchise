{"version":3,"file":"index.mjs","sources":["../src/Constants.js","../node_modules/bit-buffer/bit-buffer.js","../src/services/utilService.js","../src/FranchiseEnumValue.js","../src/FranchiseEnum.js","../node_modules/node-xml-stream-parser/dist/parser.js","../node_modules/node-xml-stream-parser/dist/index.js","../src/services/schemaGenerator.js","../node_modules/fast-xml-parser/src/util.js","../node_modules/fast-xml-parser/src/validator.js","../node_modules/fast-xml-parser/src/xmlparser/OptionsBuilder.js","../node_modules/fast-xml-parser/src/xmlparser/xmlNode.js","../node_modules/fast-xml-parser/src/xmlparser/DocTypeReader.js","../node_modules/strnum/strnum.js","../node_modules/fast-xml-parser/src/ignoreAttributes.js","../node_modules/fast-xml-parser/src/xmlparser/OrderedObjParser.js","../node_modules/fast-xml-parser/src/xmlparser/node2json.js","../node_modules/fast-xml-parser/src/xmlparser/XMLParser.js","../src/services/schemaGeneratorV2.js","../src/FranchiseSchema.js","../src/FranchiseFileTable2Field.js","../src/FranchiseFileTable3Field.js","../src/FranchiseFileField.js","../src/FranchiseFileRecord.js","../src/FranchiseFileSettings.js","../src/FranchiseFileTable.js","../src/strategies/common/CommonAlgorithms.js","../src/strategies/common/file/CommonFileStrategy.js","../src/strategies/common/file/FranchiseFileStrategy.js","../src/strategies/franchise/m19/M19FileStrategy.js","../src/strategies/common/table/FranchiseTableStrategy.js","../src/strategies/common/header/m19/M19TableHeaderStrategy.js","../src/strategies/franchise/m19/M19TableStrategy.js","../src/strategies/common/table2Field/FranchiseTable2FieldStrategy.js","../src/strategies/franchise/m19/M19Table2FieldStrategy.js","../src/services/TDB2Converter.js","../src/strategies/common/table3Field/FranchiseTable3FieldStrategy.js","../src/strategies/franchise/m24/M24Table3FieldStrategy.js","../src/strategies/franchise/m19/M19Strategy.js","../src/strategies/franchise/m20/M20FileStrategy.js","../src/strategies/common/header/m20/M20TableHeaderStrategy.js","../src/strategies/franchise/m20/M20TableStrategy.js","../src/strategies/franchise/m20/M20Table2FieldStrategy.js","../src/strategies/franchise/m20/M20Strategy.js","../src/strategies/common/header/m24/M24TableHeaderStrategy.js","../src/strategies/franchise/m24/M24TableStrategy.js","../src/strategies/franchise/m24/M24Strategy.js","../src/services/isonProcessor.js","../src/strategies/common/table3Field/FranchiseIsonTable3FieldStrategy.js","../src/strategies/franchise/m25/M25Table3FieldStrategy.js","../src/strategies/franchise/m25/M25Strategy.js","../src/strategies/common/table3Field/FranchiseZstdTable3FieldStrategy.js","../src/strategies/franchise/m26/M26Table3FieldStrategy.js","../src/strategies/franchise/m26/M26Strategy.js","../src/strategies/common/file/FTCFileStrategy.js","../src/strategies/franchise-common/m19/M19FTCFileStrategy.js","../src/strategies/common/table/FTCTableStrategy.js","../src/strategies/franchise-common/m19/M19FTCTableStrategy.js","../src/strategies/common/table2Field/FTCTable2FieldStrategy.js","../src/strategies/franchise-common/m19/M19FTCTable2FieldStrategy.js","../src/strategies/franchise-common/m19/M19FTCStrategy.js","../src/strategies/franchise-common/m20/M20FTCFileStrategy.js","../src/strategies/franchise-common/m20/M20FTCTableStrategy.js","../src/strategies/franchise-common/m20/M20FTCTable2FieldStrategy.js","../src/strategies/franchise-common/m20/M20FTCStrategy.js","../src/strategies/StrategyPicker.js","../src/services/schemaPicker.js","../src/FranchiseFile.js","../src/index.js"],"sourcesContent":["export const FORMAT = {\r\n    'FRANCHISE': 'franchise',\r\n    'FRANCHISE_COMMON': 'franchise-common'\r\n};\r\nexport default {\r\n    FORMAT\r\n};\r\n","(function (root) {\n\n/**********************************************************\n *\n * BitView\n *\n * BitView provides a similar interface to the standard\n * DataView, but with support for bit-level reads / writes.\n *\n **********************************************************/\nvar BitView = function (source, byteOffset, byteLength) {\n\tvar isBuffer = source instanceof ArrayBuffer ||\n\t\t(typeof Buffer !== 'undefined' && source instanceof Buffer);\n\n\tif (!isBuffer) {\n\t\tthrow new Error('Must specify a valid ArrayBuffer or Buffer.');\n\t}\n\n\tbyteOffset = byteOffset || 0;\n\tbyteLength = byteLength || source.byteLength /* ArrayBuffer */ || source.length /* Buffer */;\n\n\tthis._view = new Uint8Array(source.buffer || source, byteOffset, byteLength);\n\n\tthis.bigEndian = false;\n};\n\n// Used to massage fp values so we can operate on them\n// at the bit level.\nBitView._scratch = new DataView(new ArrayBuffer(8));\n\nObject.defineProperty(BitView.prototype, 'buffer', {\n\tget: function () { return typeof Buffer !== 'undefined' ?  Buffer.from(this._view.buffer) : this._view.buffer; },\n\tenumerable: true,\n\tconfigurable: false\n});\n\nObject.defineProperty(BitView.prototype, 'byteLength', {\n\tget: function () { return this._view.length; },\n\tenumerable: true,\n\tconfigurable: false\n});\n\nBitView.prototype._setBit = function (offset, on) {\n\tif (on) {\n\t\tthis._view[offset >> 3] |= 1 << (offset & 7);\n\t} else {\n\t\tthis._view[offset >> 3] &= ~(1 << (offset & 7));\n\t}\n};\n\nBitView.prototype.getBits = function (offset, bits, signed) {\n\tvar available = (this._view.length * 8 - offset);\n\n\tif (bits > available) {\n\t\tthrow new Error('Cannot get ' + bits + ' bit(s) from offset ' + offset + ', ' + available + ' available');\n\t}\n\n\tvar value = 0;\n\tfor (var i = 0; i < bits;) {\n\t\tvar remaining = bits - i;\n\t\tvar bitOffset = offset & 7;\n\t\tvar currentByte = this._view[offset >> 3];\n\n\t\t// the max number of bits we can read from the current byte\n\t\tvar read = Math.min(remaining, 8 - bitOffset);\n\n\t\tvar mask, readBits;\n\t\tif (this.bigEndian) {\n\t\t\t// create a mask with the correct bit width\n\t\t\tmask = ~(0xFF << read);\n\t\t\t// shift the bits we want to the start of the byte and mask of the rest\n\t\t\treadBits = (currentByte >> (8 - read - bitOffset)) & mask;\n\n\t\t\tvalue <<= read;\n\t\t\tvalue |= readBits;\n\t\t} else {\n\t\t\t// create a mask with the correct bit width\n\t\t\tmask = ~(0xFF << read);\n\t\t\t// shift the bits we want to the start of the byte and mask off the rest\n\t\t\treadBits = (currentByte >> bitOffset) & mask;\n\n\t\t\tvalue |= readBits << i;\n\t\t}\n\n\t\toffset += read;\n\t\ti += read;\n\t}\n\n\tif (signed) {\n\t\t// If we're not working with a full 32 bits, check the\n\t\t// imaginary MSB for this bit count and convert to a\n\t\t// valid 32-bit signed value if set.\n\t\tif (bits !== 32 && value & (1 << (bits - 1))) {\n\t\t\tvalue |= -1 ^ ((1 << bits) - 1);\n\t\t}\n\n\t\treturn value;\n\t}\n\n\treturn value >>> 0;\n};\n\nBitView.prototype.setBits = function (offset, value, bits) {\n\tvar available = (this._view.length * 8 - offset);\n\n\tif (bits > available) {\n\t\tthrow new Error('Cannot set ' + bits + ' bit(s) from offset ' + offset + ', ' + available + ' available');\n\t}\n\n\tfor (var i = 0; i < bits;) {\n\t\tvar remaining = bits - i;\n\t\tvar bitOffset = offset & 7;\n\t\tvar byteOffset = offset >> 3;\n\t\tvar wrote = Math.min(remaining, 8 - bitOffset);\n\n\t\tvar mask, writeBits, destMask;\n\t\tif (this.bigEndian) {\n\t\t\t// create a mask with the correct bit width\n\t\t\tmask = ~(~0 << wrote);\n\t\t\t// shift the bits we want to the start of the byte and mask of the rest\n\t\t\twriteBits = (value >> (bits - i - wrote)) & mask;\n\n\t\t\tvar destShift = 8 - bitOffset - wrote;\n\t\t\t// destination mask to zero all the bits we're changing first\n\t\t\tdestMask = ~(mask << destShift);\n\n\t\t\tthis._view[byteOffset] =\n\t\t\t\t(this._view[byteOffset] & destMask)\n\t\t\t\t| (writeBits << destShift);\n\n\t\t} else {\n\t\t\t// create a mask with the correct bit width\n\t\t\tmask = ~(0xFF << wrote);\n\t\t\t// shift the bits we want to the start of the byte and mask of the rest\n\t\t\twriteBits = value & mask;\n\t\t\tvalue >>= wrote;\n\n\t\t\t// destination mask to zero all the bits we're changing first\n\t\t\tdestMask = ~(mask << bitOffset);\n\n\t\t\tthis._view[byteOffset] =\n\t\t\t\t(this._view[byteOffset] & destMask)\n\t\t\t\t| (writeBits << bitOffset);\n\t\t}\n\n\t\toffset += wrote;\n\t\ti += wrote;\n\t}\n};\n\nBitView.prototype.getBoolean = function (offset) {\n\treturn this.getBits(offset, 1, false) !== 0;\n};\nBitView.prototype.getInt8 = function (offset) {\n\treturn this.getBits(offset, 8, true);\n};\nBitView.prototype.getUint8 = function (offset) {\n\treturn this.getBits(offset, 8, false);\n};\nBitView.prototype.getInt16 = function (offset) {\n\treturn this.getBits(offset, 16, true);\n};\nBitView.prototype.getUint16 = function (offset) {\n\treturn this.getBits(offset, 16, false);\n};\nBitView.prototype.getInt32 = function (offset) {\n\treturn this.getBits(offset, 32, true);\n};\nBitView.prototype.getUint32 = function (offset) {\n\treturn this.getBits(offset, 32, false);\n};\nBitView.prototype.getFloat32 = function (offset) {\n\tBitView._scratch.setUint32(0, this.getUint32(offset));\n\treturn BitView._scratch.getFloat32(0);\n};\nBitView.prototype.getFloat64 = function (offset) {\n\tBitView._scratch.setUint32(0, this.getUint32(offset));\n\t// DataView offset is in bytes.\n\tBitView._scratch.setUint32(4, this.getUint32(offset+32));\n\treturn BitView._scratch.getFloat64(0);\n};\n\nBitView.prototype.setBoolean = function (offset, value) {\n\tthis.setBits(offset, value ? 1 : 0, 1);\n};\nBitView.prototype.setInt8  =\nBitView.prototype.setUint8 = function (offset, value) {\n\tthis.setBits(offset, value, 8);\n};\nBitView.prototype.setInt16  =\nBitView.prototype.setUint16 = function (offset, value) {\n\tthis.setBits(offset, value, 16);\n};\nBitView.prototype.setInt32  =\nBitView.prototype.setUint32 = function (offset, value) {\n\tthis.setBits(offset, value, 32);\n};\nBitView.prototype.setFloat32 = function (offset, value) {\n\tBitView._scratch.setFloat32(0, value);\n\tthis.setBits(offset, BitView._scratch.getUint32(0), 32);\n};\nBitView.prototype.setFloat64 = function (offset, value) {\n\tBitView._scratch.setFloat64(0, value);\n\tthis.setBits(offset, BitView._scratch.getUint32(0), 32);\n\tthis.setBits(offset+32, BitView._scratch.getUint32(4), 32);\n};\nBitView.prototype.getArrayBuffer = function (offset, byteLength) {\n\tvar buffer = new Uint8Array(byteLength);\n\tfor (var i = 0; i < byteLength; i++) {\n\t\tbuffer[i] = this.getUint8(offset + (i * 8));\n\t}\n\treturn buffer;\n};\n\n/**********************************************************\n *\n * BitStream\n *\n * Small wrapper for a BitView to maintain your position,\n * as well as to handle reading / writing of string data\n * to the underlying buffer.\n *\n **********************************************************/\nvar reader = function (name, size) {\n\treturn function () {\n\t\tif (this._index + size > this._length) {\n\t\t\tthrow new Error('Trying to read past the end of the stream');\n\t\t}\n\t\tvar val = this._view[name](this._index);\n\t\tthis._index += size;\n\t\treturn val;\n\t};\n};\n\nvar writer = function (name, size) {\n\treturn function (value) {\n\t\tthis._view[name](this._index, value);\n\t\tthis._index += size;\n\t};\n};\n\nfunction readASCIIString(stream, bytes) {\n\treturn readString(stream, bytes, false);\n}\n\nfunction readUTF8String(stream, bytes) {\n\treturn readString(stream, bytes, true);\n}\n\nfunction readString(stream, bytes, utf8) {\n\tif (bytes === 0) {\n\t\treturn '';\n\t}\n\tvar i = 0;\n\tvar chars = [];\n\tvar append = true;\n\tvar fixedLength = !!bytes;\n\tif (!bytes) {\n\t\tbytes = Math.floor((stream._length - stream._index) / 8);\n\t}\n\n\t// Read while we still have space available, or until we've\n\t// hit the fixed byte length passed in.\n\twhile (i < bytes) {\n\t\tvar c = stream.readUint8();\n\n\t\t// Stop appending chars once we hit 0x00\n\t\tif (c === 0x00) {\n\t\t\tappend = false;\n\n\t\t\t// If we don't have a fixed length to read, break out now.\n\t\t\tif (!fixedLength) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (append) {\n\t\t\tchars.push(c);\n\t\t}\n\n\t\ti++;\n\t}\n\n\tvar string = String.fromCharCode.apply(null, chars);\n\tif (utf8) {\n\t\ttry {\n\t\t\treturn decodeURIComponent(escape(string)); // https://stackoverflow.com/a/17192845\n\t\t} catch (e) {\n\t\t\treturn string;\n\t\t}\n\t} else {\n\t\treturn string;\n\t}\n}\n\nfunction writeASCIIString(stream, string, bytes) {\n\tvar length = bytes || string.length + 1;  // + 1 for NULL\n\n\tfor (var i = 0; i < length; i++) {\n\t\tstream.writeUint8(i < string.length ? string.charCodeAt(i) : 0x00);\n\t}\n}\n\nfunction writeUTF8String(stream, string, bytes) {\n\tvar byteArray = stringToByteArray(string);\n\n\tvar length = bytes || byteArray.length + 1;  // + 1 for NULL\n\tfor (var i = 0; i < length; i++) {\n\t\tstream.writeUint8(i < byteArray.length ? byteArray[i] : 0x00);\n\t}\n}\n\nfunction stringToByteArray(str) { // https://gist.github.com/volodymyr-mykhailyk/2923227\n\tvar b = [], i, unicode;\n\tfor (i = 0; i < str.length; i++) {\n\t\tunicode = str.charCodeAt(i);\n\t\t// 0x00000000 - 0x0000007f -> 0xxxxxxx\n\t\tif (unicode <= 0x7f) {\n\t\t\tb.push(unicode);\n\t\t\t// 0x00000080 - 0x000007ff -> 110xxxxx 10xxxxxx\n\t\t} else if (unicode <= 0x7ff) {\n\t\t\tb.push((unicode >> 6) | 0xc0);\n\t\t\tb.push((unicode & 0x3F) | 0x80);\n\t\t\t// 0x00000800 - 0x0000ffff -> 1110xxxx 10xxxxxx 10xxxxxx\n\t\t} else if (unicode <= 0xffff) {\n\t\t\tb.push((unicode >> 12) | 0xe0);\n\t\t\tb.push(((unicode >> 6) & 0x3f) | 0x80);\n\t\t\tb.push((unicode & 0x3f) | 0x80);\n\t\t\t// 0x00010000 - 0x001fffff -> 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n\t\t} else {\n\t\t\tb.push((unicode >> 18) | 0xf0);\n\t\t\tb.push(((unicode >> 12) & 0x3f) | 0x80);\n\t\t\tb.push(((unicode >> 6) & 0x3f) | 0x80);\n\t\t\tb.push((unicode & 0x3f) | 0x80);\n\t\t}\n\t}\n\n\treturn b;\n}\n\nvar BitStream = function (source, byteOffset, byteLength) {\n\tvar isBuffer = source instanceof ArrayBuffer ||\n\t\t(typeof Buffer !== 'undefined' && source instanceof Buffer);\n\n\tif (!(source instanceof BitView) && !isBuffer) {\n\t\tthrow new Error('Must specify a valid BitView, ArrayBuffer or Buffer');\n\t}\n\n\tif (isBuffer) {\n\t\tthis._view = new BitView(source, byteOffset, byteLength);\n\t} else {\n\t\tthis._view = source;\n\t}\n\n\tthis._index = 0;\n\tthis._startIndex = 0;\n\tthis._length = this._view.byteLength * 8;\n};\n\nObject.defineProperty(BitStream.prototype, 'index', {\n\tget: function () { return this._index - this._startIndex; },\n\tset: function (val) { this._index = val + this._startIndex; },\n\tenumerable: true,\n\tconfigurable: true\n});\n\nObject.defineProperty(BitStream.prototype, 'length', {\n\tget: function () { return this._length - this._startIndex; },\n\tset: function (val) { this._length = val + this._startIndex; },\n\tenumerable  : true,\n\tconfigurable: true\n});\n\nObject.defineProperty(BitStream.prototype, 'bitsLeft', {\n\tget: function () { return this._length - this._index; },\n\tenumerable  : true,\n\tconfigurable: true\n});\n\nObject.defineProperty(BitStream.prototype, 'byteIndex', {\n\t// Ceil the returned value, over compensating for the amount of\n\t// bits written to the stream.\n\tget: function () { return Math.ceil(this._index / 8); },\n\tset: function (val) { this._index = val * 8; },\n\tenumerable: true,\n\tconfigurable: true\n});\n\nObject.defineProperty(BitStream.prototype, 'buffer', {\n\tget: function () { return this._view.buffer; },\n\tenumerable: true,\n\tconfigurable: false\n});\n\nObject.defineProperty(BitStream.prototype, 'view', {\n\tget: function () { return this._view; },\n\tenumerable: true,\n\tconfigurable: false\n});\n\nObject.defineProperty(BitStream.prototype, 'bigEndian', {\n\tget: function () { return this._view.bigEndian; },\n\tset: function (val) { this._view.bigEndian = val; },\n\tenumerable: true,\n\tconfigurable: false\n});\n\nBitStream.prototype.readBits = function (bits, signed) {\n\tvar val = this._view.getBits(this._index, bits, signed);\n\tthis._index += bits;\n\treturn val;\n};\n\nBitStream.prototype.writeBits = function (value, bits) {\n\tthis._view.setBits(this._index, value, bits);\n\tthis._index += bits;\n};\n\nBitStream.prototype.readBoolean = reader('getBoolean', 1);\nBitStream.prototype.readInt8 = reader('getInt8', 8);\nBitStream.prototype.readUint8 = reader('getUint8', 8);\nBitStream.prototype.readInt16 = reader('getInt16', 16);\nBitStream.prototype.readUint16 = reader('getUint16', 16);\nBitStream.prototype.readInt32 = reader('getInt32', 32);\nBitStream.prototype.readUint32 = reader('getUint32', 32);\nBitStream.prototype.readFloat32 = reader('getFloat32', 32);\nBitStream.prototype.readFloat64 = reader('getFloat64', 64);\n\nBitStream.prototype.writeBoolean = writer('setBoolean', 1);\nBitStream.prototype.writeInt8 = writer('setInt8', 8);\nBitStream.prototype.writeUint8 = writer('setUint8', 8);\nBitStream.prototype.writeInt16 = writer('setInt16', 16);\nBitStream.prototype.writeUint16 = writer('setUint16', 16);\nBitStream.prototype.writeInt32 = writer('setInt32', 32);\nBitStream.prototype.writeUint32 = writer('setUint32', 32);\nBitStream.prototype.writeFloat32 = writer('setFloat32', 32);\nBitStream.prototype.writeFloat64 = writer('setFloat64', 64);\n\nBitStream.prototype.readASCIIString = function (bytes) {\n\treturn readASCIIString(this, bytes);\n};\n\nBitStream.prototype.readUTF8String = function (bytes) {\n\treturn readUTF8String(this, bytes);\n};\n\nBitStream.prototype.writeASCIIString = function (string, bytes) {\n\twriteASCIIString(this, string, bytes);\n};\n\nBitStream.prototype.writeUTF8String = function (string, bytes) {\n\twriteUTF8String(this, string, bytes);\n};\nBitStream.prototype.readBitStream = function(bitLength) {\n\tvar slice = new BitStream(this._view);\n\tslice._startIndex = this._index;\n\tslice._index = this._index;\n\tslice.length = bitLength;\n\tthis._index += bitLength;\n\treturn slice;\n};\n\nBitStream.prototype.writeBitStream = function(stream, length) {\n\tif (!length) {\n\t\tlength = stream.bitsLeft;\n\t}\n\n\tvar bitsToWrite;\n\twhile (length > 0) {\n\t\tbitsToWrite = Math.min(length, 32);\n\t\tthis.writeBits(stream.readBits(bitsToWrite), bitsToWrite);\n\t\tlength -= bitsToWrite;\n\t}\n};\n\nBitStream.prototype.readArrayBuffer = function(byteLength) {\n\tvar buffer = this._view.getArrayBuffer(this._index, byteLength);\n\tthis._index += (byteLength * 8);\n\treturn buffer;\n};\n\nBitStream.prototype.writeArrayBuffer = function(buffer, byteLength) {\n\tthis.writeBitStream(new BitStream(buffer), byteLength * 8);\n};\n\n// AMD / RequireJS\nif (typeof define !== 'undefined' && define.amd) {\n\tdefine(function () {\n\t\treturn {\n\t\t\tBitView: BitView,\n\t\t\tBitStream: BitStream\n\t\t};\n\t});\n}\n// Node.js\nelse if (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = {\n\t\tBitView: BitView,\n\t\tBitStream: BitStream\n\t};\n}\n\n}(this));\n","import { BitView } from 'bit-buffer';\r\nlet utilService = {};\r\nutilService.intersection = function (arrayOfArrays) {\r\n    return arrayOfArrays\r\n        .reduce((acc, array, index) => {\r\n        if (index === 0)\r\n            return array;\r\n        return array.filter((value) => acc.includes(value));\r\n    }, [])\r\n        .filter((value, index, self) => self.indexOf(value) === index) // Make values unique\r\n    ;\r\n};\r\nutilService.dec2bin = function (dec, len) {\r\n    const bin = (dec >>> 0).toString(2);\r\n    if (len)\r\n        return bin.padStart(len, '0');\r\n    return bin;\r\n};\r\nutilService.bin2dec = function (binary) {\r\n    if (!utilService.isString(binary)) {\r\n        throw new Error(`Argument invalid - must be of type string. You passed in a ${typeof binary}.`);\r\n    }\r\n    else if (!utilService.stringOnlyContainsBinaryDigits(binary)) {\r\n        throw new Error(`Argument invalid - string must only contain binary digits.`);\r\n    }\r\n    return parseInt(binary, 2);\r\n};\r\nutilService.bin2Float = function (binary) {\r\n    if (!utilService.isString(binary)) {\r\n        throw new Error(`Argument invalid - must be of type string. You passed in a ${typeof binary}.`);\r\n    }\r\n    else if (!utilService.stringOnlyContainsBinaryDigits(binary)) {\r\n        throw new Error(`Argument invalid - string must only contain binary digits.`);\r\n    }\r\n    const buffer = Buffer.from(utilService.bin2hex(binary), 'hex');\r\n    if (buffer.length >= 4) {\r\n        return buffer.readFloatBE(0);\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n};\r\nutilService.float2Bin = function (float) {\r\n    const getHex = i => ('00' + i.toString(16)).slice(-2);\r\n    var view = new DataView(new ArrayBuffer(4)), result;\r\n    view.setFloat32(0, float);\r\n    result = Array\r\n        .apply(null, { length: 4 })\r\n        .map((_, i) => getHex(view.getUint8(i)))\r\n        .join('');\r\n    return utilService.hex2bin(result).padStart(32, '0');\r\n};\r\nutilService.uintToInt = function (uint, nbit) {\r\n    nbit = +nbit || 32;\r\n    if (nbit > 32)\r\n        throw new RangeError('uintToInt only supports ints up to 32 bits');\r\n    uint <<= 32 - nbit;\r\n    uint >>= 32 - nbit;\r\n    return uint;\r\n};\r\nutilService.hex2bin = function (hex) {\r\n    return (parseInt(hex, 16).toString(2)).padStart(8, '0');\r\n};\r\nutilService.bin2hex = function (bin) {\r\n    return parseInt(bin, 2).toString(16).padStart(2, '0').toUpperCase();\r\n};\r\nutilService.chunk = function (str, n) {\r\n    var ret = [];\r\n    var i;\r\n    var len;\r\n    for (i = 0, len = str.length; i < len; i += n) {\r\n        ret.push(str.substr(i, n));\r\n    }\r\n    return ret;\r\n};\r\nutilService.binaryBlockToHexBlock = function (binary) {\r\n    const byteArray = utilService.chunk(binary, 8);\r\n    let bytes = [];\r\n    byteArray.forEach((byte) => {\r\n        const hex = utilService.bin2hex(byte);\r\n        if (hex) {\r\n            bytes.push(hex);\r\n        }\r\n    });\r\n    return bytes;\r\n};\r\nutilService.binaryBlockToDecimalBlock = function (binary) {\r\n    const byteArray = utilService.chunk(binary, 8);\r\n    let bytes = [];\r\n    byteArray.forEach((byte) => {\r\n        const dec = utilService.bin2dec(byte);\r\n        if (dec !== null && dec !== undefined) {\r\n            bytes.push(dec);\r\n        }\r\n    });\r\n    return bytes;\r\n};\r\nutilService.getBitArray = function (data) {\r\n    let arr = [...data];\r\n    try {\r\n        const bits = arr.map((decimal) => {\r\n            return (decimal).toString(2).padStart(8, '0');\r\n        }).reduce((prev, curr, idx) => {\r\n            return prev + curr;\r\n        });\r\n        return bits;\r\n    }\r\n    catch (err) {\r\n        return null;\r\n    }\r\n};\r\nutilService.replaceAt = function (oldValue, index, value) {\r\n    if (index < 0) {\r\n        throw new Error('Index must be a positive number.');\r\n    }\r\n    return oldValue.substr(0, index) + value + oldValue.substr(index + value.length);\r\n};\r\nutilService.byteArrayToLong = function (byteArray, reverse) {\r\n    let newByteArray;\r\n    if (Buffer.isBuffer(byteArray)) {\r\n        newByteArray = Buffer.from(byteArray);\r\n    }\r\n    else {\r\n        newByteArray = byteArray.slice();\r\n    }\r\n    if (reverse) {\r\n        newByteArray = newByteArray.reverse();\r\n    }\r\n    var value = 0;\r\n    for (var i = newByteArray.length - 1; i >= 0; i--) {\r\n        value = (value * 256) + newByteArray[i];\r\n    }\r\n    return value;\r\n};\r\nutilService.show = function (element) {\r\n    element.classList.remove('hidden');\r\n};\r\nutilService.hide = function (element) {\r\n    element.classList.add('hidden');\r\n};\r\nutilService.arrayMove = function (arr, old_index, new_index) {\r\n    if (new_index >= arr.length) {\r\n        var k = new_index - arr.length + 1;\r\n        while (k--) {\r\n            arr.push(undefined);\r\n        }\r\n    }\r\n    arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\r\n    return arr;\r\n};\r\nutilService.removeChildNodes = function (node) {\r\n    while (node.firstChild) {\r\n        node.removeChild(node.firstChild);\r\n    }\r\n};\r\nutilService.isString = function (str) {\r\n    return (typeof str === 'string' || str instanceof String);\r\n};\r\nutilService.stringOnlyContainsBinaryDigits = function (str) {\r\n    return /[a-zA-Z2-9]/.test(str) === false;\r\n};\r\nutilService.readDWordAt = function (index, data, le) {\r\n    if (index < 3) {\r\n        throw new Error('Error: index must be equal to or greater than 3.');\r\n    }\r\n    else if (index >= data.length) {\r\n        throw new Error('Error: index must not be greater than the passed in data array length.');\r\n    }\r\n    if (le) {\r\n        return utilService.toUint32(data[index - 3] | data[index - 2] << 8 | data[index - 1] << 16 | data[index] << 24);\r\n    }\r\n    return utilService.toUint32(data[index] | data[index - 1] << 8 | data[index - 2] << 16 | data[index - 3] << 24);\r\n};\r\nutilService.toUint32 = function (x) {\r\n    return utilService.modulo(utilService.toInteger(x), Math.pow(2, 32));\r\n};\r\nutilService.modulo = function (a, b) {\r\n    return a - Math.floor(a / b) * b;\r\n};\r\nutilService.toInteger = function (x) {\r\n    x = Number(x);\r\n    return x < 0 ? Math.ceil(x) : Math.floor(x);\r\n};\r\nutilService.getReferenceData = function (value) {\r\n    return {\r\n        'tableId': utilService.bin2dec(value.substring(0, 15)),\r\n        'rowNumber': utilService.bin2dec(value.substring(15))\r\n    };\r\n};\r\nutilService.getReferenceDataFromBuffer = (buf) => {\r\n    let bv = new BitView(buf, buf.byteOffset);\r\n    bv.bigEndian = true;\r\n    return utilService.getReferenceDataFromBitview(bv);\r\n};\r\nutilService.getReferenceDataFromBitview = (bv, start = 0) => {\r\n    return {\r\n        tableId: bv.getBits(start, 15),\r\n        rowNumber: bv.getBits(start + 15, 17)\r\n    };\r\n};\r\nutilService.getBinaryReferenceData = function (tableId, rowNumber) {\r\n    const referenceBinary = utilService.dec2bin(tableId, 15);\r\n    const recordIndexBinary = utilService.dec2bin(rowNumber, 17);\r\n    return referenceBinary + recordIndexBinary;\r\n};\r\nexport default utilService;\r\n","import utilService from \"./services/utilService.js\";\r\nclass FranchiseEnumValue {\r\n    /** @param {string} name @param {number} index @param {string} value @param {string?} [unformattedValue] */\r\n    constructor(name, index, value, unformattedValue) {\r\n        /** @private */\r\n        this._name = name;\r\n        /** @private */\r\n        this._index = typeof (index) === 'number' ? index : parseInt(index);\r\n        /** @private */\r\n        this._value = typeof (value) === 'number' ? value : parseInt(value);\r\n        /** @private */\r\n        this._unformattedValue = unformattedValue ? unformattedValue : parseFormattedValue(parseInt(value));\r\n    }\r\n    ;\r\n    get name() {\r\n        return this._name;\r\n    }\r\n    ;\r\n    get index() {\r\n        return this._index;\r\n    }\r\n    ;\r\n    get value() {\r\n        return this._value;\r\n    }\r\n    ;\r\n    /** @returns {string?} */\r\n    get unformattedValue() {\r\n        return this._unformattedValue;\r\n    }\r\n    ;\r\n    /** @param {number} length */\r\n    setMemberLength(length) {\r\n        if (this.value < 0) {\r\n            this._unformattedValue = '1' + this._unformattedValue.padStart(length - 1, '0');\r\n        }\r\n        else {\r\n            this._unformattedValue = this._unformattedValue.padStart(length, '0');\r\n        }\r\n    }\r\n    ;\r\n}\r\n;\r\nfunction parseFormattedValue(value) {\r\n    if (value < 0) {\r\n        return utilService.dec2bin((value * -1) - 1);\r\n    }\r\n    return utilService.dec2bin(value);\r\n}\r\n;\r\nexport default FranchiseEnumValue;\r\n","import FranchiseEnumValue from \"./FranchiseEnumValue.js\";\r\nclass FranchiseEnum {\r\n    /** @param {string | FranchiseEnum} name @param {number} assetId @param {boolean} isRecordPersistent */\r\n    constructor(name, assetId, isRecordPersistent) {\r\n        if (typeof name === 'object') {\r\n            const theEnum = name;\r\n            /** @private */\r\n            this._name = theEnum._name;\r\n            /** @private */\r\n            this._assetId = theEnum._assetId;\r\n            /** @private */\r\n            this._isRecordPersistent = theEnum._isRecordPersistent;\r\n            /** @private */\r\n            this._members = [];\r\n            for (let i = 0; i < theEnum._members.length; i++) {\r\n                const member = theEnum._members[i];\r\n                this.addMember(member._name, member._index, member._value, member._unformattedValue);\r\n            }\r\n            this._maxLength = this._members[0].unformattedValue.length;\r\n        }\r\n        else {\r\n            this._name = name;\r\n            this._assetId = assetId;\r\n            this._isRecordPersistent = isRecordPersistent;\r\n            this._members = [];\r\n            this._maxLength = -1;\r\n        }\r\n    }\r\n    ;\r\n    /** @returns {string} */\r\n    get name() {\r\n        return this._name;\r\n    }\r\n    ;\r\n    /** @returns {number} */\r\n    get assetId() {\r\n        return this._assetId;\r\n    }\r\n    ;\r\n    /** @returns {boolean} */\r\n    get isRecordPersistent() {\r\n        return this._isRecordPersistent;\r\n    }\r\n    ;\r\n    /** @returns {Array<FranchiseEnumValue>} */\r\n    get members() {\r\n        return this._members;\r\n    }\r\n    /** @param {string} name @param {number} index @param {string} value @param {string?} [unformattedValue] */\r\n    addMember(name, index, value, unformattedValue) {\r\n        this._members.push(new FranchiseEnumValue(name, index, value, unformattedValue));\r\n    }\r\n    ;\r\n    /** @param {string} value @returns {FranchiseEnumValue?} */\r\n    getMemberByValue(value) {\r\n        const matches = this._members.filter((member) => { return member.name !== 'First_' && member.name !== 'Last_' && member.value === value; });\r\n        if (matches.length === 0) {\r\n            throw new Error(`Argument is not a valid enum value for this field. You passed in ${value}. Field name: ${this.name}`);\r\n        }\r\n        const matchesNoUnderscore = matches.find((member) => { return member.name[member.name.length - 1] !== '_'; });\r\n        return matchesNoUnderscore ? matchesNoUnderscore : matches[0];\r\n    }\r\n    ;\r\n    /** @param {string} value @returns {FranchiseEnumValue?} */\r\n    getMemberByUnformattedValue(value) {\r\n        if (value.length > this._maxLength) {\r\n            const valueToCutOff = value.substring(0, value.length - this._maxLength);\r\n            // if the user passes in 100000, but the enum's max value is only 5 digits...we need to throw an error.\r\n            const cutOffContainsData = /[a-zA-Z1-9]/.test(valueToCutOff);\r\n            if (cutOffContainsData) {\r\n                throw new Error(`Argument is not a valid enum value for this field. You passed in ${value}. Field name: ${this.name}`);\r\n            }\r\n            value = value.substring(value.length - this._maxLength);\r\n        }\r\n        const matches = this._members.filter((member) => { return member.name !== 'First_' && member.name !== 'Last_' && member.unformattedValue === value; });\r\n        if (matches.length === 0) {\r\n            throw new Error(`Argument is not a valid enum value for this field. You passed in ${value}. Field name: ${this.name}`);\r\n        }\r\n        const matchesNoUnderscore = matches.find((member) => { return member.name[member.name.length - 1] !== '_'; });\r\n        return matchesNoUnderscore ? matchesNoUnderscore : matches[0];\r\n    }\r\n    ;\r\n    /** @param {string} name @returns {FranchiseEnumValue?} */\r\n    getMemberByName(name) {\r\n        return this._members.find((member) => { return member.name.toLowerCase() === name.toLowerCase(); });\r\n    }\r\n    ;\r\n    setMemberLength() {\r\n        if (this._members.length === 0) {\r\n            return;\r\n        }\r\n        const maxValue = this._members.reduce((accum, currentVal) => {\r\n            return (accum.value > currentVal.value ? accum : currentVal);\r\n        });\r\n        const hasNegativeNumbers = this._members.find((member) => { return member.value < 0; });\r\n        this._maxLength = hasNegativeNumbers ? maxValue.unformattedValue.length + 1 : maxValue.unformattedValue.length;\r\n        this._members.forEach((member) => {\r\n            member.setMemberLength(this._maxLength);\r\n        });\r\n    }\r\n    ;\r\n}\r\n;\r\nexport default FranchiseEnum;\r\n","\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EVENTS = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _stream = require(\"stream\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n/**\n * A fast XML parser for NodeJS using Writable streams.\n *\n * What this is:\n * Simple and fast XML parser purley written for NodeJS. No extra production dependencies.\n * A handy way parse ATOM/RSS/RDF feeds and such. No validation is made on the document that is parsed.\n *\n * Motivation\n * There is already quite a few parsers out there. I just wanted a parser that was as tiny and fast as possible to handle easy parsing of\n * RSS/ATOM/RDF feeds using streams, no fancy stuff needed. If you want more functionality you should check out other recommended parsers (see below)\n *\n * Usage\n * Just #pipe() a <stream.Readable> and you are ready to listen for events.\n * You can also use the #write() method to write directly to the parser.\n *\n * The source is written using ES2015, babel is used to translate to the dist.\n *\n * Other recommended parsers for node that are great:\n * https://github.com/isaacs/sax-js\n * https://github.com/xmppjs/ltx\n *\n * Events:\n * - text\n * - instruction\n * - opentag\n * - closetag\n * - cdata\n *\n * Comments are ignored, so there is no events for them.\n *\n */\nvar Parser = function (_Writable) {\n  _inherits(Parser, _Writable);\n\n  function Parser() {\n    _classCallCheck(this, Parser);\n\n    var _this = _possibleConstructorReturn(this, (Parser.__proto__ || Object.getPrototypeOf(Parser)).call(this));\n\n    _this.state = STATE.TEXT;\n    _this.buffer = \"\";\n    _this.pos = 0;\n    _this.tagType = TAG_TYPE.NONE;\n    return _this;\n  }\n\n  _createClass(Parser, [{\n    key: \"_write\",\n    value: function _write(chunk, encoding, done) {\n      chunk = typeof chunk !== \"string\" ? chunk.toString() : chunk;\n      for (var i = 0; i < chunk.length; i++) {\n        var c = chunk[i];\n        var prev = this.buffer[this.pos - 1];\n        this.buffer += c;\n        this.pos++;\n\n        switch (this.state) {\n          case STATE.TEXT:\n            if (c === \"<\") this._onStartNewTag();\n            break;\n\n          case STATE.TAG_NAME:\n            if (prev === \"<\" && c === \"?\") {\n              this._onStartInstruction();\n            }\n            if (prev === \"<\" && c === \"/\") {\n              this._onCloseTagStart();\n            }\n            if (this.buffer[this.pos - 3] === \"<\" && prev === \"!\" && c === \"[\") {\n              this._onCDATAStart();\n            }\n            if (this.buffer[this.pos - 3] === \"<\" && prev === \"!\" && c === \"-\") {\n              this._onCommentStart();\n            }\n            if (c === \">\") {\n              if (prev === \"/\") {\n                this.tagType = TAG_TYPE.SELF_CLOSING;\n              }\n              this._onTagCompleted();\n            }\n            break;\n\n          case STATE.INSTRUCTION:\n            if (prev === \"?\" && c === \">\") this._onEndInstruction();\n            break;\n\n          case STATE.CDATA:\n            if (this.buffer[this.pos - 3] === \"]\" && prev === \"]\" && c === \">\") this._onCDATAEnd();\n            break;\n\n          case STATE.IGNORE_COMMENT:\n            if (this.buffer[this.pos - 3] === \"-\" && prev === \"-\" && c === \">\") this._onCommentEnd();\n            break;\n        }\n      }\n      done();\n    }\n  }, {\n    key: \"_endRecording\",\n    value: function _endRecording() {\n      var rec = this.buffer.slice(1, this.pos - 1);\n      this.buffer = this.buffer.slice(-1); // Keep last item in buffer for prev comparison in main loop.\n      this.pos = 1; // Reset the position (since the buffer was reset)\n      return rec;\n    }\n  }, {\n    key: \"_onStartNewTag\",\n    value: function _onStartNewTag() {\n      var text = this._endRecording().trim();\n      if (text) {\n        this.emit(EVENTS.TEXT, text);\n      }\n      this.state = STATE.TAG_NAME;\n      this.tagType = TAG_TYPE.OPENING;\n    }\n  }, {\n    key: \"_onTagCompleted\",\n    value: function _onTagCompleted() {\n      var tag = this._endRecording();\n\n      var _parseTagString2 = this._parseTagString(tag),\n          name = _parseTagString2.name,\n          attributes = _parseTagString2.attributes;\n\n      if (name === null) {\n        this.emit(EVENTS.ERROR, new Error(\"Failed to parse name for tag\" + tag));\n      }\n\n      if (this.tagType && this.tagType == TAG_TYPE.OPENING) {\n        this.emit(EVENTS.OPEN_TAG, name, attributes);\n      }\n\n      if (this.tagType && this.tagType === TAG_TYPE.CLOSING) {\n        this.emit(EVENTS.CLOSE_TAG, name, attributes);\n      }\n      if (this.tagType && this.tagType === TAG_TYPE.SELF_CLOSING) {\n        if (Object.keys(attributes).length === 0 && attributes.constructor === Object) {\n          attributes = { ___selfClosing___: true };\n        }\n        this.emit(EVENTS.OPEN_TAG, name, attributes);\n        this.emit(EVENTS.CLOSE_TAG, name, attributes);\n      }\n\n      this.state = STATE.TEXT;\n      this.tagType = TAG_TYPE.NONE;\n    }\n  }, {\n    key: \"_onCloseTagStart\",\n    value: function _onCloseTagStart() {\n      this._endRecording();\n      this.tagType = TAG_TYPE.CLOSING;\n    }\n  }, {\n    key: \"_onStartInstruction\",\n    value: function _onStartInstruction() {\n      this._endRecording();\n      this.state = STATE.INSTRUCTION;\n    }\n  }, {\n    key: \"_onEndInstruction\",\n    value: function _onEndInstruction() {\n      this.pos -= 1; // Move position back 1 step since instruction ends with '?>'\n      var inst = this._endRecording();\n\n      var _parseTagString3 = this._parseTagString(inst),\n          name = _parseTagString3.name,\n          attributes = _parseTagString3.attributes;\n\n      if (name === null) {\n        this.emit(EVENTS.ERROR, new Error(\"Failed to parse name for inst\" + inst));\n      }\n      this.emit(EVENTS.INSTRUCTION, name, attributes);\n      this.state = STATE.TEXT;\n    }\n  }, {\n    key: \"_onCDATAStart\",\n    value: function _onCDATAStart() {\n      this._endRecording();\n      this.state = STATE.CDATA;\n    }\n  }, {\n    key: \"_onCDATAEnd\",\n    value: function _onCDATAEnd() {\n      var text = this._endRecording(); // Will return CDATA[XXX] we regexp out the actual text in the CDATA.\n      text = text.slice(text.indexOf(\"[\") + 1, text.lastIndexOf(\"]>\") - 1);\n      this.state = STATE.TEXT;\n\n      this.emit(EVENTS.CDATA, text);\n    }\n  }, {\n    key: \"_onCommentStart\",\n    value: function _onCommentStart() {\n      this.state = STATE.IGNORE_COMMENT;\n    }\n  }, {\n    key: \"_onCommentEnd\",\n    value: function _onCommentEnd() {\n      this._endRecording();\n      this.state = STATE.TEXT;\n    }\n\n    /**\n     * Helper to parse a tag string 'xml version=\"2.0\" encoding=\"utf-8\"' with regexp.\n     * @param  {string} str the tag string.\n     * @return {object}     {name, attributes}\n     */\n  }, {\n    key: \"_parseTagString\",\n    value: function _parseTagString(str) {\n      // parse name\n\n      var name = void 0;\n      var parsedString = /^([a-zäöüßÄÖÜA-Z0-9:_\\-.\\/]+?)(\\s|$)/.exec(str);\n      if (parsedString && parsedString.length > 0) {\n        name = parsedString[1];\n        var attributesString = str.substr(name.length);\n        var attributeRegexp = /([a-zäöüßÄÖÜA-Z0-9:_\\-.]+?)=\"([^\"]+?)\"/g;\n        var match = attributeRegexp.exec(attributesString);\n        var attributes = {};\n        while (match != null) {\n          attributes[match[1]] = match[2];\n          match = attributeRegexp.exec(attributesString);\n        }\n        if (name[name.length - 1] === \"/\") {\n          name = name.substr(0, name.length - 1);\n        }\n        return { name: name, attributes: attributes };\n      }\n      return { name: null, attributes: {} };\n    }\n  }]);\n\n  return Parser;\n}(_stream.Writable);\n\nexports.default = Parser;\n\nvar STATE = {\n  TEXT: 0,\n  TAG_NAME: 1,\n  INSTRUCTION: 2,\n  IGNORE_COMMENT: 4,\n  CDATA: 8\n};\n\nvar TAG_TYPE = {\n  NONE: 0,\n  OPENING: 1,\n  CLOSING: 2,\n  SELF_CLOSING: 3\n};\n\nvar EVENTS = exports.EVENTS = {\n  ERROR: \"error\",\n  TEXT: \"text\",\n  INSTRUCTION: \"instruction\",\n  OPEN_TAG: \"opentag\",\n  CLOSE_TAG: \"closetag\",\n  CDATA: \"cdata\"\n};","'use strict';\n\nvar _parser = require('./parser');\n\nvar _parser2 = _interopRequireDefault(_parser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = _parser2.default;","import fs from 'fs';\r\nimport path, { dirname } from 'path';\r\nimport zlib from 'zlib';\r\nimport { pipeline } from 'stream';\r\nimport utilService from './utilService.js';\r\nimport FranchiseEnum from '../FranchiseEnum.js';\r\nimport XmlParser from 'node-xml-stream-parser';\r\nimport { EventEmitter } from 'events';\r\nimport { fileURLToPath } from 'url';\r\n\r\nconst __filename = fileURLToPath(import.meta.url);\r\nconst __dirname = dirname(__filename);\r\n\r\nlet schemaGenerator = {};\r\nschemaGenerator.eventEmitter = new EventEmitter();\r\n/** @param {string} inputFile @param {boolean?} [showOutput] @param {string?} [outputFile] */\r\nschemaGenerator.generate = (inputFile, showOutput, outputFile) => {\r\n    const stream = fs.createReadStream(inputFile);\r\n    schemaGenerator.generateFromStream(stream, showOutput, outputFile);\r\n};\r\n/** @param {ReadableStream} stream @param {boolean?} [showOutput] @param {string?} [outputFile] */\r\nschemaGenerator.generateFromStream = (stream, showOutput, outputFile) => {\r\n    schemaGenerator.root = {};\r\n    schemaGenerator.schemas = [];\r\n    schemaGenerator.schemaMap = {};\r\n    schemaGenerator.schemaMeta = {};\r\n    schemaGenerator.enums = [];\r\n    const extraSchemas = schemaGenerator.getExtraSchemas();\r\n    schemaGenerator.xml = new XmlParser();\r\n    pipeline(stream, schemaGenerator.xml, (err) => {\r\n        if (err) {\r\n            console.error(err);\r\n            throw err;\r\n        }\r\n        schemaGenerator.enums.forEach((theEnum) => {\r\n            theEnum.setMemberLength();\r\n        });\r\n        const majorVersion = schemaGenerator.schemaMeta.dataMajorVersion;\r\n        const minorVersion = schemaGenerator.schemaMeta.dataMinorVersion;\r\n        const databaseName = schemaGenerator.schemaMeta.databaseName;\r\n        const gameYear = /Madden(\\d{2})/.exec(databaseName)[1];\r\n        addExtraSchemas();\r\n        calculateInheritedSchemas();\r\n        schemaGenerator.root = {\r\n            'meta': {\r\n                'major': parseInt(majorVersion),\r\n                'minor': parseInt(minorVersion),\r\n                'gameYear': parseInt(gameYear)\r\n            },\r\n            'schemas': schemaGenerator.schemas,\r\n            'schemaMap': schemaGenerator.schemaMap\r\n        };\r\n        if (outputFile) {\r\n            zlib.gzip(JSON.stringify(schemaGenerator.root), function (_, data) {\r\n                fs.writeFileSync(path.join(outputFile, `${majorVersion}_${minorVersion}.gz`), data);\r\n            });\r\n        }\r\n        schemaGenerator.eventEmitter.emit('schemas:done', schemaGenerator.root);\r\n    });\r\n    let currentParent = {\r\n        type: '',\r\n        ref: null\r\n    };\r\n    schemaGenerator.xml.on('opentag', (name, attrs) => {\r\n        if (name === 'FranTkData') {\r\n            schemaGenerator.schemaMeta.databaseName = attrs.databaseName;\r\n            schemaGenerator.schemaMeta.dataMajorVersion = attrs.dataMajorVersion;\r\n            schemaGenerator.schemaMeta.dataMinorVersion = attrs.dataMinorVersion;\r\n        }\r\n        else if (name === 'enum') {\r\n            let theEnum = parseEnum(attrs);\r\n            schemaGenerator.enums.push(theEnum);\r\n            currentParent = {\r\n                type: 'enum',\r\n                ref: theEnum\r\n            };\r\n        }\r\n        else if (name === 'schema') {\r\n            let schema = parseSchema(attrs);\r\n            schema.attributes = [];\r\n            schemaGenerator.schemas.push(schema);\r\n            schemaGenerator.schemaMap[schema.name] = schema;\r\n            currentParent = {\r\n                type: 'schema',\r\n                ref: schema\r\n            };\r\n        }\r\n        else if (name === 'attribute') {\r\n            if (currentParent.type === 'enum') {\r\n                currentParent.ref.addMember(attrs.name, attrs.idx, attrs.value);\r\n            }\r\n            else {\r\n                const attribute = parseAttribute(attrs);\r\n                currentParent.ref.attributes.push(attribute);\r\n            }\r\n        }\r\n    });\r\n    function parseEnum(enumAttributes) {\r\n        return new FranchiseEnum(enumAttributes.name, enumAttributes.assetId, enumAttributes.isRecordPersistent);\r\n    }\r\n    ;\r\n    function parseSchema(schemaAttributes) {\r\n        return {\r\n            'assetId': schemaAttributes.assetId,\r\n            'ownerAssetId': schemaAttributes.ownerAssetId,\r\n            'numMembers': schemaAttributes.numMembers,\r\n            'name': schemaAttributes.name,\r\n            'base': schemaAttributes.base\r\n        };\r\n    }\r\n    ;\r\n    function parseAttribute(attributeAttributes) {\r\n        return {\r\n            'index': attributeAttributes.idx,\r\n            'name': attributeAttributes.name,\r\n            'type': attributeAttributes.type,\r\n            'minValue': attributeAttributes.minValue,\r\n            'maxValue': attributeAttributes.maxValue,\r\n            'maxLength': attributeAttributes.maxLen,\r\n            'default': getDefaultValue(attributeAttributes.default),\r\n            'final': attributeAttributes.final,\r\n            'enum': getEnum(attributeAttributes.type),\r\n            'const': attributeAttributes.const\r\n        };\r\n        function getDefaultValue(defaultVal) {\r\n            if (!defaultVal) {\r\n                return undefined;\r\n            }\r\n            defaultVal = defaultVal\r\n                .replace(new RegExp('&#xD;', 'g'), '\\r')\r\n                .replace(new RegExp('&#xA;', 'g'), '\\n')\r\n                .replace(new RegExp('&amp;', 'g'), '&')\r\n                .replace(new RegExp('&gt;', 'g'), '>')\r\n                .replace(new RegExp('&lt;', 'g'), '<')\r\n                .replace(new RegExp('&quot;', 'g'), '\\\"');\r\n            return defaultVal;\r\n        }\r\n    }\r\n    ;\r\n    function addExtraSchemas() {\r\n        extraSchemas.forEach((schema) => {\r\n            if (!schemaGenerator.schemaMap[schema.name]) {\r\n                schema.attributes.filter((attrib) => {\r\n                    return attrib.enum && !(attrib.enum instanceof FranchiseEnum);\r\n                }).forEach((attrib) => {\r\n                    attrib.enum = getEnum(attrib.enum);\r\n                });\r\n                schemaGenerator.schemas.unshift(schema);\r\n            }\r\n        });\r\n    }\r\n    ;\r\n    function calculateInheritedSchemas() {\r\n        schemaGenerator.calculateInheritedSchemas(schemaGenerator.schemas);\r\n    }\r\n    ;\r\n    function getSchema(name) {\r\n        return schemaGenerator.schemas.find((schema) => { return schema.name === name; });\r\n    }\r\n    ;\r\n    function getEnum(name) {\r\n        return schemaGenerator.enums.find((theEnum) => { return theEnum.name === name; });\r\n    }\r\n    ;\r\n};\r\n/** @returns {Record<string, any>} */\r\nschemaGenerator.getExtraSchemas = () => {\r\n    const filePath = path.join(__dirname, '../../data/schemas/extra-schemas.json');\r\n    const data = fs.readFileSync(filePath, 'utf-8');\r\n    return JSON.parse(data);\r\n};\r\n/** @param {Array<TableSchema>} schemaList */\r\nschemaGenerator.calculateInheritedSchemas = (schemaList) => {\r\n    const schemasWithBase = schemaList.filter((schema) => { return schema.base && schema.base.indexOf(\"()\") === -1; });\r\n    schemasWithBase.forEach((schema) => {\r\n        if (schema.base && schema.base.indexOf('()') === -1) {\r\n            schema.originalAttributesOrder = schema.attributes;\r\n            const baseSchema = schemaList.find((schemaToSearch) => { return schemaToSearch.name === schema.base; });\r\n            if (baseSchema) {\r\n                baseSchema.attributes.forEach((baseAttribute, index) => {\r\n                    let oldIndex = schema.attributes.findIndex((schemaAttribute) => { return schemaAttribute?.name === baseAttribute?.name; });\r\n                    utilService.arrayMove(schema.attributes, oldIndex, index);\r\n                });\r\n            }\r\n        }\r\n    });\r\n};\r\nexport default schemaGenerator;\r\n","'use strict';\n\nconst nameStartChar = ':A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\nconst nameChar = nameStartChar + '\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\nexport const nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*';\nconst regexName = new RegExp('^' + nameRegexp + '$');\n\nexport function getAllMatches(string, regex) {\n  const matches = [];\n  let match = regex.exec(string);\n  while (match) {\n    const allmatches = [];\n    allmatches.startIndex = regex.lastIndex - match[0].length;\n    const len = match.length;\n    for (let index = 0; index < len; index++) {\n      allmatches.push(match[index]);\n    }\n    matches.push(allmatches);\n    match = regex.exec(string);\n  }\n  return matches;\n}\n\nexport const isName = function(string) {\n  const match = regexName.exec(string);\n  return !(match === null || typeof match === 'undefined');\n}\n\nexport function isExist(v) {\n  return typeof v !== 'undefined';\n}\n\nexport function isEmptyObject(obj) {\n  return Object.keys(obj).length === 0;\n}\n\n/**\n * Copy all the properties of a into b.\n * @param {*} target\n * @param {*} a\n */\nexport function merge(target, a, arrayMode) {\n  if (a) {\n    const keys = Object.keys(a); // will return an array of own properties\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      if (arrayMode === 'strict') {\n        target[keys[i]] = [ a[keys[i]] ];\n      } else {\n        target[keys[i]] = a[keys[i]];\n      }\n    }\n  }\n}\n/* exports.merge =function (b,a){\n  return Object.assign(b,a);\n} */\n\nexport function getValue(v) {\n  if (exports.isExist(v)) {\n    return v;\n  } else {\n    return '';\n  }\n}\n\n// const fakeCall = function(a) {return a;};\n// const fakeCallNoReturn = function() {};","'use strict';\n\nimport {getAllMatches, isName} from './util.js';\n\nconst defaultOptions = {\n  allowBooleanAttributes: false, //A tag can have attributes without any value\n  unpairedTags: []\n};\n\n//const tagsPattern = new RegExp(\"<\\\\/?([\\\\w:\\\\-_\\.]+)\\\\s*\\/?>\",\"g\");\nexport function validate(xmlData, options) {\n  options = Object.assign({}, defaultOptions, options);\n\n  //xmlData = xmlData.replace(/(\\r\\n|\\n|\\r)/gm,\"\");//make it single line\n  //xmlData = xmlData.replace(/(^\\s*<\\?xml.*?\\?>)/g,\"\");//Remove XML starting tag\n  //xmlData = xmlData.replace(/(<!DOCTYPE[\\s\\w\\\"\\.\\/\\-\\:]+(\\[.*\\])*\\s*>)/g,\"\");//Remove DOCTYPE\n  const tags = [];\n  let tagFound = false;\n\n  //indicates that the root tag has been closed (aka. depth 0 has been reached)\n  let reachedRoot = false;\n\n  if (xmlData[0] === '\\ufeff') {\n    // check for byte order mark (BOM)\n    xmlData = xmlData.substr(1);\n  }\n  \n  for (let i = 0; i < xmlData.length; i++) {\n\n    if (xmlData[i] === '<' && xmlData[i+1] === '?') {\n      i+=2;\n      i = readPI(xmlData,i);\n      if (i.err) return i;\n    }else if (xmlData[i] === '<') {\n      //starting of tag\n      //read until you reach to '>' avoiding any '>' in attribute value\n      let tagStartPos = i;\n      i++;\n      \n      if (xmlData[i] === '!') {\n        i = readCommentAndCDATA(xmlData, i);\n        continue;\n      } else {\n        let closingTag = false;\n        if (xmlData[i] === '/') {\n          //closing tag\n          closingTag = true;\n          i++;\n        }\n        //read tagname\n        let tagName = '';\n        for (; i < xmlData.length &&\n          xmlData[i] !== '>' &&\n          xmlData[i] !== ' ' &&\n          xmlData[i] !== '\\t' &&\n          xmlData[i] !== '\\n' &&\n          xmlData[i] !== '\\r'; i++\n        ) {\n          tagName += xmlData[i];\n        }\n        tagName = tagName.trim();\n        //console.log(tagName);\n\n        if (tagName[tagName.length - 1] === '/') {\n          //self closing tag without attributes\n          tagName = tagName.substring(0, tagName.length - 1);\n          //continue;\n          i--;\n        }\n        if (!validateTagName(tagName)) {\n          let msg;\n          if (tagName.trim().length === 0) {\n            msg = \"Invalid space after '<'.\";\n          } else {\n            msg = \"Tag '\"+tagName+\"' is an invalid name.\";\n          }\n          return getErrorObject('InvalidTag', msg, getLineNumberForPosition(xmlData, i));\n        }\n\n        const result = readAttributeStr(xmlData, i);\n        if (result === false) {\n          return getErrorObject('InvalidAttr', \"Attributes for '\"+tagName+\"' have open quote.\", getLineNumberForPosition(xmlData, i));\n        }\n        let attrStr = result.value;\n        i = result.index;\n\n        if (attrStr[attrStr.length - 1] === '/') {\n          //self closing tag\n          const attrStrStart = i - attrStr.length;\n          attrStr = attrStr.substring(0, attrStr.length - 1);\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid === true) {\n            tagFound = true;\n            //continue; //text may presents after self closing tag\n          } else {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, attrStrStart + isValid.err.line));\n          }\n        } else if (closingTag) {\n          if (!result.tagClosed) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' doesn't have proper closing.\", getLineNumberForPosition(xmlData, i));\n          } else if (attrStr.trim().length > 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' can't have attributes or invalid starting.\", getLineNumberForPosition(xmlData, tagStartPos));\n          } else if (tags.length === 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' has not been opened.\", getLineNumberForPosition(xmlData, tagStartPos));\n          } else {\n            const otg = tags.pop();\n            if (tagName !== otg.tagName) {\n              let openPos = getLineNumberForPosition(xmlData, otg.tagStartPos);\n              return getErrorObject('InvalidTag',\n                \"Expected closing tag '\"+otg.tagName+\"' (opened in line \"+openPos.line+\", col \"+openPos.col+\") instead of closing tag '\"+tagName+\"'.\",\n                getLineNumberForPosition(xmlData, tagStartPos));\n            }\n\n            //when there are no more tags, we reached the root level.\n            if (tags.length == 0) {\n              reachedRoot = true;\n            }\n          }\n        } else {\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid !== true) {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n\n          //if the root level has been reached before ...\n          if (reachedRoot === true) {\n            return getErrorObject('InvalidXml', 'Multiple possible root nodes found.', getLineNumberForPosition(xmlData, i));\n          } else if(options.unpairedTags.indexOf(tagName) !== -1){\n            //don't push into stack\n          } else {\n            tags.push({tagName, tagStartPos});\n          }\n          tagFound = true;\n        }\n\n        //skip tag text value\n        //It may include comments and CDATA value\n        for (i++; i < xmlData.length; i++) {\n          if (xmlData[i] === '<') {\n            if (xmlData[i + 1] === '!') {\n              //comment or CADATA\n              i++;\n              i = readCommentAndCDATA(xmlData, i);\n              continue;\n            } else if (xmlData[i+1] === '?') {\n              i = readPI(xmlData, ++i);\n              if (i.err) return i;\n            } else{\n              break;\n            }\n          } else if (xmlData[i] === '&') {\n            const afterAmp = validateAmpersand(xmlData, i);\n            if (afterAmp == -1)\n              return getErrorObject('InvalidChar', \"char '&' is not expected.\", getLineNumberForPosition(xmlData, i));\n            i = afterAmp;\n          }else{\n            if (reachedRoot === true && !isWhiteSpace(xmlData[i])) {\n              return getErrorObject('InvalidXml', \"Extra text at the end\", getLineNumberForPosition(xmlData, i));\n            }\n          }\n        } //end of reading tag text value\n        if (xmlData[i] === '<') {\n          i--;\n        }\n      }\n    } else {\n      if ( isWhiteSpace(xmlData[i])) {\n        continue;\n      }\n      return getErrorObject('InvalidChar', \"char '\"+xmlData[i]+\"' is not expected.\", getLineNumberForPosition(xmlData, i));\n    }\n  }\n\n  if (!tagFound) {\n    return getErrorObject('InvalidXml', 'Start tag expected.', 1);\n  }else if (tags.length == 1) {\n      return getErrorObject('InvalidTag', \"Unclosed tag '\"+tags[0].tagName+\"'.\", getLineNumberForPosition(xmlData, tags[0].tagStartPos));\n  }else if (tags.length > 0) {\n      return getErrorObject('InvalidXml', \"Invalid '\"+\n          JSON.stringify(tags.map(t => t.tagName), null, 4).replace(/\\r?\\n/g, '')+\n          \"' found.\", {line: 1, col: 1});\n  }\n\n  return true;\n};\n\nfunction isWhiteSpace(char){\n  return char === ' ' || char === '\\t' || char === '\\n'  || char === '\\r';\n}\n/**\n * Read Processing insstructions and skip\n * @param {*} xmlData\n * @param {*} i\n */\nfunction readPI(xmlData, i) {\n  const start = i;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] == '?' || xmlData[i] == ' ') {\n      //tagname\n      const tagname = xmlData.substr(start, i - start);\n      if (i > 5 && tagname === 'xml') {\n        return getErrorObject('InvalidXml', 'XML declaration allowed only at the start of the document.', getLineNumberForPosition(xmlData, i));\n      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {\n        //check if valid attribut string\n        i++;\n        break;\n      } else {\n        continue;\n      }\n    }\n  }\n  return i;\n}\n\nfunction readCommentAndCDATA(xmlData, i) {\n  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {\n    //comment\n    for (i += 3; i < xmlData.length; i++) {\n      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  } else if (\n    xmlData.length > i + 8 &&\n    xmlData[i + 1] === 'D' &&\n    xmlData[i + 2] === 'O' &&\n    xmlData[i + 3] === 'C' &&\n    xmlData[i + 4] === 'T' &&\n    xmlData[i + 5] === 'Y' &&\n    xmlData[i + 6] === 'P' &&\n    xmlData[i + 7] === 'E'\n  ) {\n    let angleBracketsCount = 1;\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === '<') {\n        angleBracketsCount++;\n      } else if (xmlData[i] === '>') {\n        angleBracketsCount--;\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      }\n    }\n  } else if (\n    xmlData.length > i + 9 &&\n    xmlData[i + 1] === '[' &&\n    xmlData[i + 2] === 'C' &&\n    xmlData[i + 3] === 'D' &&\n    xmlData[i + 4] === 'A' &&\n    xmlData[i + 5] === 'T' &&\n    xmlData[i + 6] === 'A' &&\n    xmlData[i + 7] === '['\n  ) {\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  }\n\n  return i;\n}\n\nconst doubleQuote = '\"';\nconst singleQuote = \"'\";\n\n/**\n * Keep reading xmlData until '<' is found outside the attribute value.\n * @param {string} xmlData\n * @param {number} i\n */\nfunction readAttributeStr(xmlData, i) {\n  let attrStr = '';\n  let startChar = '';\n  let tagClosed = false;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {\n      if (startChar === '') {\n        startChar = xmlData[i];\n      } else if (startChar !== xmlData[i]) {\n        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa\n      } else {\n        startChar = '';\n      }\n    } else if (xmlData[i] === '>') {\n      if (startChar === '') {\n        tagClosed = true;\n        break;\n      }\n    }\n    attrStr += xmlData[i];\n  }\n  if (startChar !== '') {\n    return false;\n  }\n\n  return {\n    value: attrStr,\n    index: i,\n    tagClosed: tagClosed\n  };\n}\n\n/**\n * Select all the attributes whether valid or invalid.\n */\nconst validAttrStrRegxp = new RegExp('(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*([\\'\"])(([\\\\s\\\\S])*?)\\\\5)?', 'g');\n\n//attr, =\"sd\", a=\"amit's\", a=\"sd\"b=\"saf\", ab  cd=\"\"\n\nfunction validateAttributeString(attrStr, options) {\n  //console.log(\"start:\"+attrStr+\":end\");\n\n  //if(attrStr.trim().length === 0) return true; //empty string\n\n  const matches = getAllMatches(attrStr, validAttrStrRegxp);\n  const attrNames = {};\n\n  for (let i = 0; i < matches.length; i++) {\n    if (matches[i][1].length === 0) {\n      //nospace before attribute name: a=\"sd\"b=\"saf\"\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' has no space in starting.\", getPositionFromMatch(matches[i]))\n    } else if (matches[i][3] !== undefined && matches[i][4] === undefined) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' is without value.\", getPositionFromMatch(matches[i]));\n    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {\n      //independent attribute: ab\n      return getErrorObject('InvalidAttr', \"boolean attribute '\"+matches[i][2]+\"' is not allowed.\", getPositionFromMatch(matches[i]));\n    }\n    /* else if(matches[i][6] === undefined){//attribute without value: ab=\n                    return { err: { code:\"InvalidAttr\",msg:\"attribute \" + matches[i][2] + \" has no value assigned.\"}};\n                } */\n    const attrName = matches[i][2];\n    if (!validateAttrName(attrName)) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is an invalid name.\", getPositionFromMatch(matches[i]));\n    }\n    if (!attrNames.hasOwnProperty(attrName)) {\n      //check for duplicate attribute.\n      attrNames[attrName] = 1;\n    } else {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is repeated.\", getPositionFromMatch(matches[i]));\n    }\n  }\n\n  return true;\n}\n\nfunction validateNumberAmpersand(xmlData, i) {\n  let re = /\\d/;\n  if (xmlData[i] === 'x') {\n    i++;\n    re = /[\\da-fA-F]/;\n  }\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === ';')\n      return i;\n    if (!xmlData[i].match(re))\n      break;\n  }\n  return -1;\n}\n\nfunction validateAmpersand(xmlData, i) {\n  // https://www.w3.org/TR/xml/#dt-charref\n  i++;\n  if (xmlData[i] === ';')\n    return -1;\n  if (xmlData[i] === '#') {\n    i++;\n    return validateNumberAmpersand(xmlData, i);\n  }\n  let count = 0;\n  for (; i < xmlData.length; i++, count++) {\n    if (xmlData[i].match(/\\w/) && count < 20)\n      continue;\n    if (xmlData[i] === ';')\n      break;\n    return -1;\n  }\n  return i;\n}\n\nfunction getErrorObject(code, message, lineNumber) {\n  return {\n    err: {\n      code: code,\n      msg: message,\n      line: lineNumber.line || lineNumber,\n      col: lineNumber.col,\n    },\n  };\n}\n\nfunction validateAttrName(attrName) {\n  return isName(attrName);\n}\n\n// const startsWithXML = /^xml/i;\n\nfunction validateTagName(tagname) {\n  return isName(tagname) /* && !tagname.match(startsWithXML) */;\n}\n\n//this function returns the line number for the character at the given index\nfunction getLineNumberForPosition(xmlData, index) {\n  const lines = xmlData.substring(0, index).split(/\\r?\\n/);\n  return {\n    line: lines.length,\n\n    // column number is last line's length + 1, because column numbering starts at 1:\n    col: lines[lines.length - 1].length + 1\n  };\n}\n\n//this function returns the position of the first character of match within attrStr\nfunction getPositionFromMatch(match) {\n  return match.startIndex + match[1].length;\n}\n","\nexport const defaultOptions = {\n    preserveOrder: false,\n    attributeNamePrefix: '@_',\n    attributesGroupName: false,\n    textNodeName: '#text',\n    ignoreAttributes: true,\n    removeNSPrefix: false, // remove NS from tag name or attribute name if true\n    allowBooleanAttributes: false, //a tag can have attributes without any value\n    //ignoreRootElement : false,\n    parseTagValue: true,\n    parseAttributeValue: false,\n    trimValues: true, //Trim string values of tag and attributes\n    cdataPropName: false,\n    numberParseOptions: {\n      hex: true,\n      leadingZeros: true,\n      eNotation: true\n    },\n    tagValueProcessor: function(tagName, val) {\n      return val;\n    },\n    attributeValueProcessor: function(attrName, val) {\n      return val;\n    },\n    stopNodes: [], //nested tags will not be parsed even for errors\n    alwaysCreateTextNode: false,\n    isArray: () => false,\n    commentPropName: false,\n    unpairedTags: [],\n    processEntities: true,\n    htmlEntities: false,\n    ignoreDeclaration: false,\n    ignorePiTags: false,\n    transformTagName: false,\n    transformAttributeName: false,\n    updateTag: function(tagName, jPath, attrs){\n      return tagName\n    },\n    // skipEmptyListItem: false\n    captureMetaData: false,\n};\n   \nexport const buildOptions = function(options) {\n    return Object.assign({}, defaultOptions, options);\n};\n","'use strict';\n\nlet METADATA_SYMBOL;\n\nif (typeof Symbol !== \"function\") {\n  METADATA_SYMBOL = \"@@xmlMetadata\";\n} else {\n  METADATA_SYMBOL = Symbol(\"XML Node Metadata\");\n}\n\nexport default class XmlNode{\n  constructor(tagname) {\n    this.tagname = tagname;\n    this.child = []; //nested tags, text, cdata, comments in order\n    this[\":@\"] = {}; //attributes map\n  }\n  add(key,val){\n    // this.child.push( {name : key, val: val, isCdata: isCdata });\n    if(key === \"__proto__\") key = \"#__proto__\";\n    this.child.push( {[key]: val });\n  }\n  addChild(node, startIndex) {\n    if(node.tagname === \"__proto__\") node.tagname = \"#__proto__\";\n    if(node[\":@\"] && Object.keys(node[\":@\"]).length > 0){\n      this.child.push( { [node.tagname]: node.child, [\":@\"]: node[\":@\"] });\n    }else{\n      this.child.push( { [node.tagname]: node.child });\n    }\n    // if requested, add the startIndex\n    if (startIndex !== undefined) {\n      // Note: for now we just overwrite the metadata. If we had more complex metadata,\n      // we might need to do an object append here:  metadata = { ...metadata, startIndex }\n      this.child[this.child.length - 1][METADATA_SYMBOL] = { startIndex };\n    }\n  }\n  /** symbol used for metadata */\n  static getMetaDataSymbol() {\n    return METADATA_SYMBOL;\n  }\n}\n","import {isName} from '../util.js';\n\n//TODO: handle comments\nexport default function readDocType(xmlData, i){\n    \n    const entities = {};\n    if( xmlData[i + 3] === 'O' &&\n         xmlData[i + 4] === 'C' &&\n         xmlData[i + 5] === 'T' &&\n         xmlData[i + 6] === 'Y' &&\n         xmlData[i + 7] === 'P' &&\n         xmlData[i + 8] === 'E')\n    {    \n        i = i+9;\n        let angleBracketsCount = 1;\n        let hasBody = false, comment = false;\n        let exp = \"\";\n        for(;i<xmlData.length;i++){\n            if (xmlData[i] === '<' && !comment) { //Determine the tag type\n                if( hasBody && hasSeq(xmlData, \"!ENTITY\",i)){\n                    i += 7; \n                    let entityName, val;\n                    [entityName, val,i] = readEntityExp(xmlData,i+1);\n                    if(val.indexOf(\"&\") === -1) //Parameter entities are not supported\n                        entities[ entityName ] = {\n                            regx : RegExp( `&${entityName};`,\"g\"),\n                            val: val\n                        };\n                }\n                else if( hasBody && hasSeq(xmlData, \"!ELEMENT\",i))  {\n                    i += 8;//Not supported\n                    const {index} = readElementExp(xmlData,i+1);\n                    i = index;\n                }else if( hasBody && hasSeq(xmlData, \"!ATTLIST\",i)){\n                    i += 8;//Not supported\n                    // const {index} = readAttlistExp(xmlData,i+1);\n                    // i = index;\n                }else if( hasBody && hasSeq(xmlData, \"!NOTATION\",i)) {\n                    i += 9;//Not supported\n                    const {index} = readNotationExp(xmlData,i+1);\n                    i = index;\n                }else if( hasSeq(xmlData, \"!--\",i) ) comment = true;\n                else throw new Error(`Invalid DOCTYPE`);\n\n                angleBracketsCount++;\n                exp = \"\";\n            } else if (xmlData[i] === '>') { //Read tag content\n                if(comment){\n                    if( xmlData[i - 1] === \"-\" && xmlData[i - 2] === \"-\"){\n                        comment = false;\n                        angleBracketsCount--;\n                    }\n                }else{\n                    angleBracketsCount--;\n                }\n                if (angleBracketsCount === 0) {\n                  break;\n                }\n            }else if( xmlData[i] === '['){\n                hasBody = true;\n            }else{\n                exp += xmlData[i];\n            }\n        }\n        if(angleBracketsCount !== 0){\n            throw new Error(`Unclosed DOCTYPE`);\n        }\n    }else{\n        throw new Error(`Invalid Tag instead of DOCTYPE`);\n    }\n    return {entities, i};\n}\n\nconst skipWhitespace = (data, index) => {\n    while (index < data.length && /\\s/.test(data[index])) {\n        index++;\n    }\n    return index;\n};\n\nfunction readEntityExp(xmlData, i) {    \n    //External entities are not supported\n    //    <!ENTITY ext SYSTEM \"http://normal-website.com\" >\n\n    //Parameter entities are not supported\n    //    <!ENTITY entityname \"&anotherElement;\">\n\n    //Internal entities are supported\n    //    <!ENTITY entityname \"replacement text\">\n\n    // Skip leading whitespace after <!ENTITY\n    i = skipWhitespace(xmlData, i);\n\n    // Read entity name\n    let entityName = \"\";\n    while (i < xmlData.length && !/\\s/.test(xmlData[i]) && xmlData[i] !== '\"' && xmlData[i] !== \"'\") {\n        entityName += xmlData[i];\n        i++;\n    }\n    validateEntityName(entityName);\n\n    // Skip whitespace after entity name\n    i = skipWhitespace(xmlData, i);\n\n    // Check for unsupported constructs (external entities or parameter entities)\n    if (xmlData.substring(i, i + 6).toUpperCase() === \"SYSTEM\") {\n        throw new Error(\"External entities are not supported\");\n    }else if (xmlData[i] === \"%\") {\n        throw new Error(\"Parameter entities are not supported\");\n    }\n\n    // Read entity value (internal entity)\n    let entityValue = \"\";\n    [i, entityValue] = readIdentifierVal(xmlData, i, \"entity\");\n    i--;\n    return [entityName, entityValue, i ];\n}\n\nfunction readNotationExp(xmlData, i) {\n    // Skip leading whitespace after <!NOTATION\n    i = skipWhitespace(xmlData, i);\n\n    // Read notation name\n    let notationName = \"\";\n    while (i < xmlData.length && !/\\s/.test(xmlData[i])) {\n        notationName += xmlData[i];\n        i++;\n    }\n    validateEntityName(notationName);\n\n    // Skip whitespace after notation name\n    i = skipWhitespace(xmlData, i);\n\n    // Check identifier type (SYSTEM or PUBLIC)\n    const identifierType = xmlData.substring(i, i + 6).toUpperCase();\n    if (identifierType !== \"SYSTEM\" && identifierType !== \"PUBLIC\") {\n        throw new Error(`Expected SYSTEM or PUBLIC, found \"${identifierType}\"`);\n    }\n    i += identifierType.length;\n\n    // Skip whitespace after identifier type\n    i = skipWhitespace(xmlData, i);\n\n    // Read public identifier (if PUBLIC)\n    let publicIdentifier = null;\n    let systemIdentifier = null;\n\n    if (identifierType === \"PUBLIC\") {\n        [i, publicIdentifier ] = readIdentifierVal(xmlData, i, \"publicIdentifier\");\n\n        // Skip whitespace after public identifier\n        i = skipWhitespace(xmlData, i);\n\n        // Optionally read system identifier\n        if (xmlData[i] === '\"' || xmlData[i] === \"'\") {\n            [i, systemIdentifier ] = readIdentifierVal(xmlData, i,\"systemIdentifier\");\n        }\n    } else if (identifierType === \"SYSTEM\") {\n        // Read system identifier (mandatory for SYSTEM)\n        [i, systemIdentifier ] = readIdentifierVal(xmlData, i, \"systemIdentifier\");\n\n        if (!systemIdentifier) {\n            throw new Error(\"Missing mandatory system identifier for SYSTEM notation\");\n        }\n    }\n    \n    return {notationName, publicIdentifier, systemIdentifier, index: --i};\n}\n\nfunction readIdentifierVal(xmlData, i, type) {\n    let identifierVal = \"\";\n    const startChar = xmlData[i];\n    if (startChar !== '\"' && startChar !== \"'\") {\n        throw new Error(`Expected quoted string, found \"${startChar}\"`);\n    }\n    i++;\n\n    while (i < xmlData.length && xmlData[i] !== startChar) {\n        identifierVal += xmlData[i];\n        i++;\n    }\n\n    if (xmlData[i] !== startChar) {\n        throw new Error(`Unterminated ${type} value`);\n    }\n    i++;\n    return [i, identifierVal];\n}\n\nfunction readElementExp(xmlData, i) {\n    // <!ELEMENT br EMPTY>\n    // <!ELEMENT div ANY>\n    // <!ELEMENT title (#PCDATA)>\n    // <!ELEMENT book (title, author+)>\n    // <!ELEMENT name (content-model)>\n    \n    // Skip leading whitespace after <!ELEMENT\n    i = skipWhitespace(xmlData, i);\n\n    // Read element name\n    let elementName = \"\";\n    while (i < xmlData.length && !/\\s/.test(xmlData[i])) {\n        elementName += xmlData[i];\n        i++;\n    }\n\n    // Validate element name\n    if (!validateEntityName(elementName)) {\n        throw new Error(`Invalid element name: \"${elementName}\"`);\n    }\n\n    // Skip whitespace after element name\n    i = skipWhitespace(xmlData, i);\n    let contentModel = \"\";\n    // Expect '(' to start content model\n    if(xmlData[i] === \"E\" && hasSeq(xmlData, \"MPTY\",i)) i+=4;\n    else if(xmlData[i] === \"A\" && hasSeq(xmlData, \"NY\",i)) i+=2;\n    else if (xmlData[i] === \"(\") {\n        i++; // Move past '('\n\n        // Read content model\n        while (i < xmlData.length && xmlData[i] !== \")\") {\n            contentModel += xmlData[i];\n            i++;\n        }\n        if (xmlData[i] !== \")\") {\n            throw new Error(\"Unterminated content model\");\n        }\n\n    }else{\n        throw new Error(`Invalid Element Expression, found \"${xmlData[i]}\"`);\n    }\n    \n    return {\n        elementName,\n        contentModel: contentModel.trim(),\n        index: i\n    };\n}\n\nfunction readAttlistExp(xmlData, i) {\n    // Skip leading whitespace after <!ATTLIST\n    i = skipWhitespace(xmlData, i);\n\n    // Read element name\n    let elementName = \"\";\n    while (i < xmlData.length && !/\\s/.test(xmlData[i])) {\n        elementName += xmlData[i];\n        i++;\n    }\n\n    // Validate element name\n    validateEntityName(elementName)\n\n    // Skip whitespace after element name\n    i = skipWhitespace(xmlData, i);\n\n    // Read attribute name\n    let attributeName = \"\";\n    while (i < xmlData.length && !/\\s/.test(xmlData[i])) {\n        attributeName += xmlData[i];\n        i++;\n    }\n\n    // Validate attribute name\n    if (!validateEntityName(attributeName)) {\n        throw new Error(`Invalid attribute name: \"${attributeName}\"`);\n    }\n\n    // Skip whitespace after attribute name\n    i = skipWhitespace(xmlData, i);\n\n    // Read attribute type\n    let attributeType = \"\";\n    if (xmlData.substring(i, i + 8).toUpperCase() === \"NOTATION\") {\n        attributeType = \"NOTATION\";\n        i += 8; // Move past \"NOTATION\"\n\n        // Skip whitespace after \"NOTATION\"\n        i = skipWhitespace(xmlData, i);\n\n        // Expect '(' to start the list of notations\n        if (xmlData[i] !== \"(\") {\n            throw new Error(`Expected '(', found \"${xmlData[i]}\"`);\n        }\n        i++; // Move past '('\n\n        // Read the list of allowed notations\n        let allowedNotations = [];\n        while (i < xmlData.length && xmlData[i] !== \")\") {\n            let notation = \"\";\n            while (i < xmlData.length && xmlData[i] !== \"|\" && xmlData[i] !== \")\") {\n                notation += xmlData[i];\n                i++;\n            }\n\n            // Validate notation name\n            notation = notation.trim();\n            if (!validateEntityName(notation)) {\n                throw new Error(`Invalid notation name: \"${notation}\"`);\n            }\n\n            allowedNotations.push(notation);\n\n            // Skip '|' separator or exit loop\n            if (xmlData[i] === \"|\") {\n                i++; // Move past '|'\n                i = skipWhitespace(xmlData, i); // Skip optional whitespace after '|'\n            }\n        }\n\n        if (xmlData[i] !== \")\") {\n            throw new Error(\"Unterminated list of notations\");\n        }\n        i++; // Move past ')'\n\n        // Store the allowed notations as part of the attribute type\n        attributeType += \" (\" + allowedNotations.join(\"|\") + \")\";\n    } else {\n        // Handle simple types (e.g., CDATA, ID, IDREF, etc.)\n        while (i < xmlData.length && !/\\s/.test(xmlData[i])) {\n            attributeType += xmlData[i];\n            i++;\n        }\n\n        // Validate simple attribute type\n        const validTypes = [\"CDATA\", \"ID\", \"IDREF\", \"IDREFS\", \"ENTITY\", \"ENTITIES\", \"NMTOKEN\", \"NMTOKENS\"];\n        if (!validTypes.includes(attributeType.toUpperCase())) {\n            throw new Error(`Invalid attribute type: \"${attributeType}\"`);\n        }\n    }\n\n    // Skip whitespace after attribute type\n    i = skipWhitespace(xmlData, i);\n\n    // Read default value\n    let defaultValue = \"\";\n    if (xmlData.substring(i, i + 8).toUpperCase() === \"#REQUIRED\") {\n        defaultValue = \"#REQUIRED\";\n        i += 8;\n    } else if (xmlData.substring(i, i + 7).toUpperCase() === \"#IMPLIED\") {\n        defaultValue = \"#IMPLIED\";\n        i += 7;\n    } else {\n        [i, defaultValue] = readIdentifierVal(xmlData, i, \"ATTLIST\");\n    }\n\n    return {\n        elementName,\n        attributeName,\n        attributeType,\n        defaultValue,\n        index: i\n    }\n}\n\nfunction hasSeq(data, seq,i){\n    for(let j=0;j<seq.length;j++){\n        if(seq[j]!==data[i+j+1]) return false;\n    }\n    return true;\n}\n\nfunction validateEntityName(name){\n    if (isName(name))\n\treturn name;\n    else\n        throw new Error(`Invalid entity name ${name}`);\n}\n","const hexRegex = /^[-+]?0x[a-fA-F0-9]+$/;\nconst numRegex = /^([\\-\\+])?(0*)([0-9]*(\\.[0-9]*)?)$/;\n// const octRegex = /^0x[a-z0-9]+/;\n// const binRegex = /0x[a-z0-9]+/;\n\n \nconst consider = {\n    hex :  true,\n    // oct: false,\n    leadingZeros: true,\n    decimalPoint: \"\\.\",\n    eNotation: true,\n    //skipLike: /regex/\n};\n\nexport default function toNumber(str, options = {}){\n    options = Object.assign({}, consider, options );\n    if(!str || typeof str !== \"string\" ) return str;\n    \n    let trimmedStr  = str.trim();\n    \n    if(options.skipLike !== undefined && options.skipLike.test(trimmedStr)) return str;\n    else if(str===\"0\") return 0;\n    else if (options.hex && hexRegex.test(trimmedStr)) {\n        return parse_int(trimmedStr, 16);\n    // }else if (options.oct && octRegex.test(str)) {\n    //     return Number.parseInt(val, 8);\n    }else if (trimmedStr.search(/.+[eE].+/)!== -1) { //eNotation\n        return resolveEnotation(str,trimmedStr,options);\n    // }else if (options.parseBin && binRegex.test(str)) {\n    //     return Number.parseInt(val, 2);\n    }else{\n        //separate negative sign, leading zeros, and rest number\n        const match = numRegex.exec(trimmedStr);\n        // +00.123 => [ , '+', '00', '.123', ..\n        if(match){\n            const sign = match[1] || \"\";\n            const leadingZeros = match[2];\n            let numTrimmedByZeros = trimZeros(match[3]); //complete num without leading zeros\n            const decimalAdjacentToLeadingZeros = sign ? // 0., -00., 000.\n                str[leadingZeros.length+1] === \".\" \n                : str[leadingZeros.length] === \".\";\n\n            //trim ending zeros for floating number\n            if(!options.leadingZeros //leading zeros are not allowed\n                && (leadingZeros.length > 1 \n                    || (leadingZeros.length === 1 && !decimalAdjacentToLeadingZeros))){\n                // 00, 00.3, +03.24, 03, 03.24\n                return str;\n            }\n            else{//no leading zeros or leading zeros are allowed\n                const num = Number(trimmedStr);\n                const parsedStr = String(num);\n\n                if( num === 0) return num;\n                if(parsedStr.search(/[eE]/) !== -1){ //given number is long and parsed to eNotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(trimmedStr.indexOf(\".\") !== -1){ //floating number\n                    if(parsedStr === \"0\") return num; //0.0\n                    else if(parsedStr === numTrimmedByZeros) return num; //0.456. 0.79000\n                    else if( parsedStr === `${sign}${numTrimmedByZeros}`) return num;\n                    else return str;\n                }\n                \n                let n = leadingZeros? numTrimmedByZeros : trimmedStr;\n                if(leadingZeros){\n                    // -009 => -9\n                    return (n === parsedStr) || (sign+n === parsedStr) ? num : str\n                }else  {\n                    // +9\n                    return (n === parsedStr) || (n === sign+parsedStr) ? num : str\n                }\n            }\n        }else{ //non-numeric string\n            return str;\n        }\n    }\n}\n\nconst eNotationRegx = /^([-+])?(0*)(\\d*(\\.\\d*)?[eE][-\\+]?\\d+)$/;\nfunction resolveEnotation(str,trimmedStr,options){\n    if(!options.eNotation) return str;\n    const notation = trimmedStr.match(eNotationRegx); \n    if(notation){\n        let sign = notation[1] || \"\";\n        const eChar = notation[3].indexOf(\"e\") === -1 ? \"E\" : \"e\";\n        const leadingZeros = notation[2];\n        const eAdjacentToLeadingZeros = sign ? // 0E.\n            str[leadingZeros.length+1] === eChar \n            : str[leadingZeros.length] === eChar;\n\n        if(leadingZeros.length > 1 && eAdjacentToLeadingZeros) return str;\n        else if(leadingZeros.length === 1 \n            && (notation[3].startsWith(`.${eChar}`) || notation[3][0] === eChar)){\n                return Number(trimmedStr);\n        }else if(options.leadingZeros && !eAdjacentToLeadingZeros){ //accept with leading zeros\n            //remove leading 0s\n            trimmedStr = (notation[1] || \"\") + notation[3];\n            return Number(trimmedStr);\n        }else return str;\n    }else{\n        return str;\n    }\n}\n\n/**\n * \n * @param {string} numStr without leading zeros\n * @returns \n */\nfunction trimZeros(numStr){\n    if(numStr && numStr.indexOf(\".\") !== -1){//float\n        numStr = numStr.replace(/0+$/, \"\"); //remove ending zeros\n        if(numStr === \".\")  numStr = \"0\";\n        else if(numStr[0] === \".\")  numStr = \"0\"+numStr;\n        else if(numStr[numStr.length-1] === \".\")  numStr = numStr.substring(0,numStr.length-1);\n        return numStr;\n    }\n    return numStr;\n}\n\nfunction parse_int(numStr, base){\n    //polyfill\n    if(parseInt) return parseInt(numStr, base);\n    else if(Number.parseInt) return Number.parseInt(numStr, base);\n    else if(window && window.parseInt) return window.parseInt(numStr, base);\n    else throw new Error(\"parseInt, Number.parseInt, window.parseInt are not supported\")\n}","export default function getIgnoreAttributesFn(ignoreAttributes) {\n    if (typeof ignoreAttributes === 'function') {\n        return ignoreAttributes\n    }\n    if (Array.isArray(ignoreAttributes)) {\n        return (attrName) => {\n            for (const pattern of ignoreAttributes) {\n                if (typeof pattern === 'string' && attrName === pattern) {\n                    return true\n                }\n                if (pattern instanceof RegExp && pattern.test(attrName)) {\n                    return true\n                }\n            }\n        }\n    }\n    return () => false\n}","'use strict';\n///@ts-check\n\nimport {getAllMatches, isExist} from '../util.js';\nimport xmlNode from './xmlNode.js';\nimport readDocType from './DocTypeReader.js';\nimport toNumber from \"strnum\";\nimport getIgnoreAttributesFn from \"../ignoreAttributes.js\";\n\n// const regx =\n//   '<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\\\/)(NAME)\\\\s*>))([^<]*)'\n//   .replace(/NAME/g, util.nameRegexp);\n\n//const tagsRegx = new RegExp(\"<(\\\\/?[\\\\w:\\\\-\\._]+)([^>]*)>(\\\\s*\"+cdataRegx+\")*([^<]+)?\",\"g\");\n//const tagsRegx = new RegExp(\"<(\\\\/?)((\\\\w*:)?([\\\\w:\\\\-\\._]+))([^>]*)>([^<]*)(\"+cdataRegx+\"([^<]*))*([^<]+)?\",\"g\");\n\nexport default class OrderedObjParser{\n  constructor(options){\n    this.options = options;\n    this.currentNode = null;\n    this.tagsNodeStack = [];\n    this.docTypeEntities = {};\n    this.lastEntities = {\n      \"apos\" : { regex: /&(apos|#39|#x27);/g, val : \"'\"},\n      \"gt\" : { regex: /&(gt|#62|#x3E);/g, val : \">\"},\n      \"lt\" : { regex: /&(lt|#60|#x3C);/g, val : \"<\"},\n      \"quot\" : { regex: /&(quot|#34|#x22);/g, val : \"\\\"\"},\n    };\n    this.ampEntity = { regex: /&(amp|#38|#x26);/g, val : \"&\"};\n    this.htmlEntities = {\n      \"space\": { regex: /&(nbsp|#160);/g, val: \" \" },\n      // \"lt\" : { regex: /&(lt|#60);/g, val: \"<\" },\n      // \"gt\" : { regex: /&(gt|#62);/g, val: \">\" },\n      // \"amp\" : { regex: /&(amp|#38);/g, val: \"&\" },\n      // \"quot\" : { regex: /&(quot|#34);/g, val: \"\\\"\" },\n      // \"apos\" : { regex: /&(apos|#39);/g, val: \"'\" },\n      \"cent\" : { regex: /&(cent|#162);/g, val: \"¢\" },\n      \"pound\" : { regex: /&(pound|#163);/g, val: \"£\" },\n      \"yen\" : { regex: /&(yen|#165);/g, val: \"¥\" },\n      \"euro\" : { regex: /&(euro|#8364);/g, val: \"€\" },\n      \"copyright\" : { regex: /&(copy|#169);/g, val: \"©\" },\n      \"reg\" : { regex: /&(reg|#174);/g, val: \"®\" },\n      \"inr\" : { regex: /&(inr|#8377);/g, val: \"₹\" },\n      \"num_dec\": { regex: /&#([0-9]{1,7});/g, val : (_, str) => String.fromCodePoint(Number.parseInt(str, 10)) },\n      \"num_hex\": { regex: /&#x([0-9a-fA-F]{1,6});/g, val : (_, str) => String.fromCodePoint(Number.parseInt(str, 16)) },\n    };\n    this.addExternalEntities = addExternalEntities;\n    this.parseXml = parseXml;\n    this.parseTextData = parseTextData;\n    this.resolveNameSpace = resolveNameSpace;\n    this.buildAttributesMap = buildAttributesMap;\n    this.isItStopNode = isItStopNode;\n    this.replaceEntitiesValue = replaceEntitiesValue;\n    this.readStopNodeData = readStopNodeData;\n    this.saveTextToParentTag = saveTextToParentTag;\n    this.addChild = addChild;\n    this.ignoreAttributesFn = getIgnoreAttributesFn(this.options.ignoreAttributes)\n  }\n\n}\n\nfunction addExternalEntities(externalEntities){\n  const entKeys = Object.keys(externalEntities);\n  for (let i = 0; i < entKeys.length; i++) {\n    const ent = entKeys[i];\n    this.lastEntities[ent] = {\n       regex: new RegExp(\"&\"+ent+\";\",\"g\"),\n       val : externalEntities[ent]\n    }\n  }\n}\n\n/**\n * @param {string} val\n * @param {string} tagName\n * @param {string} jPath\n * @param {boolean} dontTrim\n * @param {boolean} hasAttributes\n * @param {boolean} isLeafNode\n * @param {boolean} escapeEntities\n */\nfunction parseTextData(val, tagName, jPath, dontTrim, hasAttributes, isLeafNode, escapeEntities) {\n  if (val !== undefined) {\n    if (this.options.trimValues && !dontTrim) {\n      val = val.trim();\n    }\n    if(val.length > 0){\n      if(!escapeEntities) val = this.replaceEntitiesValue(val);\n      \n      const newval = this.options.tagValueProcessor(tagName, val, jPath, hasAttributes, isLeafNode);\n      if(newval === null || newval === undefined){\n        //don't parse\n        return val;\n      }else if(typeof newval !== typeof val || newval !== val){\n        //overwrite\n        return newval;\n      }else if(this.options.trimValues){\n        return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n      }else{\n        const trimmedVal = val.trim();\n        if(trimmedVal === val){\n          return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n        }else{\n          return val;\n        }\n      }\n    }\n  }\n}\n\nfunction resolveNameSpace(tagname) {\n  if (this.options.removeNSPrefix) {\n    const tags = tagname.split(':');\n    const prefix = tagname.charAt(0) === '/' ? '/' : '';\n    if (tags[0] === 'xmlns') {\n      return '';\n    }\n    if (tags.length === 2) {\n      tagname = prefix + tags[1];\n    }\n  }\n  return tagname;\n}\n\n//TODO: change regex to capture NS\n//const attrsRegx = new RegExp(\"([\\\\w\\\\-\\\\.\\\\:]+)\\\\s*=\\\\s*(['\\\"])((.|\\n)*?)\\\\2\",\"gm\");\nconst attrsRegx = new RegExp('([^\\\\s=]+)\\\\s*(=\\\\s*([\\'\"])([\\\\s\\\\S]*?)\\\\3)?', 'gm');\n\nfunction buildAttributesMap(attrStr, jPath, tagName) {\n  if (this.options.ignoreAttributes !== true && typeof attrStr === 'string') {\n    // attrStr = attrStr.replace(/\\r?\\n/g, ' ');\n    //attrStr = attrStr || attrStr.trim();\n\n    const matches = getAllMatches(attrStr, attrsRegx);\n    const len = matches.length; //don't make it inline\n    const attrs = {};\n    for (let i = 0; i < len; i++) {\n      const attrName = this.resolveNameSpace(matches[i][1]);\n      if (this.ignoreAttributesFn(attrName, jPath)) {\n        continue\n      }\n      let oldVal = matches[i][4];\n      let aName = this.options.attributeNamePrefix + attrName;\n      if (attrName.length) {\n        if (this.options.transformAttributeName) {\n          aName = this.options.transformAttributeName(aName);\n        }\n        if(aName === \"__proto__\") aName  = \"#__proto__\";\n        if (oldVal !== undefined) {\n          if (this.options.trimValues) {\n            oldVal = oldVal.trim();\n          }\n          oldVal = this.replaceEntitiesValue(oldVal);\n          const newVal = this.options.attributeValueProcessor(attrName, oldVal, jPath);\n          if(newVal === null || newVal === undefined){\n            //don't parse\n            attrs[aName] = oldVal;\n          }else if(typeof newVal !== typeof oldVal || newVal !== oldVal){\n            //overwrite\n            attrs[aName] = newVal;\n          }else{\n            //parse\n            attrs[aName] = parseValue(\n              oldVal,\n              this.options.parseAttributeValue,\n              this.options.numberParseOptions\n            );\n          }\n        } else if (this.options.allowBooleanAttributes) {\n          attrs[aName] = true;\n        }\n      }\n    }\n    if (!Object.keys(attrs).length) {\n      return;\n    }\n    if (this.options.attributesGroupName) {\n      const attrCollection = {};\n      attrCollection[this.options.attributesGroupName] = attrs;\n      return attrCollection;\n    }\n    return attrs\n  }\n}\n\nconst parseXml = function(xmlData) {\n  xmlData = xmlData.replace(/\\r\\n?/g, \"\\n\"); //TODO: remove this line\n  const xmlObj = new xmlNode('!xml');\n  let currentNode = xmlObj;\n  let textData = \"\";\n  let jPath = \"\";\n  for(let i=0; i< xmlData.length; i++){//for each char in XML data\n    const ch = xmlData[i];\n    if(ch === '<'){\n      // const nextIndex = i+1;\n      // const _2ndChar = xmlData[nextIndex];\n      if( xmlData[i+1] === '/') {//Closing Tag\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"Closing Tag is not closed.\")\n        let tagName = xmlData.substring(i+2,closeIndex).trim();\n\n        if(this.options.removeNSPrefix){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n          }\n        }\n\n        if(this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n\n        if(currentNode){\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        }\n\n        //check if last tag of nested tag was unpaired tag\n        const lastTagName = jPath.substring(jPath.lastIndexOf(\".\")+1);\n        if(tagName && this.options.unpairedTags.indexOf(tagName) !== -1 ){\n          throw new Error(`Unpaired tag can not be used as closing tag: </${tagName}>`);\n        }\n        let propIndex = 0\n        if(lastTagName && this.options.unpairedTags.indexOf(lastTagName) !== -1 ){\n          propIndex = jPath.lastIndexOf('.', jPath.lastIndexOf('.')-1)\n          this.tagsNodeStack.pop();\n        }else{\n          propIndex = jPath.lastIndexOf(\".\");\n        }\n        jPath = jPath.substring(0, propIndex);\n\n        currentNode = this.tagsNodeStack.pop();//avoid recursion, set the parent tag scope\n        textData = \"\";\n        i = closeIndex;\n      } else if( xmlData[i+1] === '?') {\n\n        let tagData = readTagExp(xmlData,i, false, \"?>\");\n        if(!tagData) throw new Error(\"Pi Tag is not closed.\");\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        if( (this.options.ignoreDeclaration && tagData.tagName === \"?xml\") || this.options.ignorePiTags){\n\n        }else{\n  \n          const childNode = new xmlNode(tagData.tagName);\n          childNode.add(this.options.textNodeName, \"\");\n          \n          if(tagData.tagName !== tagData.tagExp && tagData.attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagData.tagExp, jPath, tagData.tagName);\n          }\n          this.addChild(currentNode, childNode, jPath, i);\n        }\n\n\n        i = tagData.closeIndex + 1;\n      } else if(xmlData.substr(i + 1, 3) === '!--') {\n        const endIndex = findClosingIndex(xmlData, \"-->\", i+4, \"Comment is not closed.\")\n        if(this.options.commentPropName){\n          const comment = xmlData.substring(i + 4, endIndex - 2);\n\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n          currentNode.add(this.options.commentPropName, [ { [this.options.textNodeName] : comment } ]);\n        }\n        i = endIndex;\n      } else if( xmlData.substr(i + 1, 2) === '!D') {\n        const result = readDocType(xmlData, i);\n        this.docTypeEntities = result.entities;\n        i = result.i;\n      }else if(xmlData.substr(i + 1, 2) === '![') {\n        const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"CDATA is not closed.\") - 2;\n        const tagExp = xmlData.substring(i + 9,closeIndex);\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n        let val = this.parseTextData(tagExp, currentNode.tagname, jPath, true, false, true, true);\n        if(val == undefined) val = \"\";\n\n        //cdata should be set even if it is 0 length string\n        if(this.options.cdataPropName){\n          currentNode.add(this.options.cdataPropName, [ { [this.options.textNodeName] : tagExp } ]);\n        }else{\n          currentNode.add(this.options.textNodeName, val);\n        }\n        \n        i = closeIndex + 2;\n      }else {//Opening tag\n        let result = readTagExp(xmlData,i, this.options.removeNSPrefix);\n        let tagName= result.tagName;\n        const rawTagName = result.rawTagName;\n        let tagExp = result.tagExp;\n        let attrExpPresent = result.attrExpPresent;\n        let closeIndex = result.closeIndex;\n\n        if (this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n        \n        //save text as child node\n        if (currentNode && textData) {\n          if(currentNode.tagname !== '!xml'){\n            //when nested tag is found\n            textData = this.saveTextToParentTag(textData, currentNode, jPath, false);\n          }\n        }\n\n        //check if last tag was unpaired tag\n        const lastTag = currentNode;\n        if(lastTag && this.options.unpairedTags.indexOf(lastTag.tagname) !== -1 ){\n          currentNode = this.tagsNodeStack.pop();\n          jPath = jPath.substring(0, jPath.lastIndexOf(\".\"));\n        }\n        if(tagName !== xmlObj.tagname){\n          jPath += jPath ? \".\" + tagName : tagName;\n        }\n        const startIndex = i;\n        if (this.isItStopNode(this.options.stopNodes, jPath, tagName)) {\n          let tagContent = \"\";\n          //self-closing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n              tagName = tagName.substr(0, tagName.length - 1);\n              jPath = jPath.substr(0, jPath.length - 1);\n              tagExp = tagName;\n            }else{\n              tagExp = tagExp.substr(0, tagExp.length - 1);\n            }\n            i = result.closeIndex;\n          }\n          //unpaired tag\n          else if(this.options.unpairedTags.indexOf(tagName) !== -1){\n            \n            i = result.closeIndex;\n          }\n          //normal tag\n          else{\n            //read until closing tag is found\n            const result = this.readStopNodeData(xmlData, rawTagName, closeIndex + 1);\n            if(!result) throw new Error(`Unexpected end of ${rawTagName}`);\n            i = result.i;\n            tagContent = result.tagContent;\n          }\n\n          const childNode = new xmlNode(tagName);\n\n          if(tagName !== tagExp && attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n          }\n          if(tagContent) {\n            tagContent = this.parseTextData(tagContent, tagName, jPath, true, attrExpPresent, true, true);\n          }\n          \n          jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          childNode.add(this.options.textNodeName, tagContent);\n          \n          this.addChild(currentNode, childNode, jPath, startIndex);\n        }else{\n  //selfClosing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n              tagName = tagName.substr(0, tagName.length - 1);\n              jPath = jPath.substr(0, jPath.length - 1);\n              tagExp = tagName;\n            }else{\n              tagExp = tagExp.substr(0, tagExp.length - 1);\n            }\n            \n            if(this.options.transformTagName) {\n              tagName = this.options.transformTagName(tagName);\n            }\n\n            const childNode = new xmlNode(tagName);\n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            this.addChild(currentNode, childNode, jPath, startIndex);\n            jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          }\n    //opening tag\n          else{\n            const childNode = new xmlNode( tagName);\n            this.tagsNodeStack.push(currentNode);\n            \n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            this.addChild(currentNode, childNode, jPath, startIndex);\n            currentNode = childNode;\n          }\n          textData = \"\";\n          i = closeIndex;\n        }\n      }\n    }else{\n      textData += xmlData[i];\n    }\n  }\n  return xmlObj.child;\n}\n\nfunction addChild(currentNode, childNode, jPath, startIndex){\n  // unset startIndex if not requested\n  if (!this.options.captureMetaData) startIndex = undefined;\n  const result = this.options.updateTag(childNode.tagname, jPath, childNode[\":@\"])\n  if(result === false){\n  } else if(typeof result === \"string\"){\n    childNode.tagname = result\n    currentNode.addChild(childNode, startIndex);\n  }else{\n    currentNode.addChild(childNode, startIndex);\n  }\n}\n\nconst replaceEntitiesValue = function(val){\n\n  if(this.options.processEntities){\n    for(let entityName in this.docTypeEntities){\n      const entity = this.docTypeEntities[entityName];\n      val = val.replace( entity.regx, entity.val);\n    }\n    for(let entityName in this.lastEntities){\n      const entity = this.lastEntities[entityName];\n      val = val.replace( entity.regex, entity.val);\n    }\n    if(this.options.htmlEntities){\n      for(let entityName in this.htmlEntities){\n        const entity = this.htmlEntities[entityName];\n        val = val.replace( entity.regex, entity.val);\n      }\n    }\n    val = val.replace( this.ampEntity.regex, this.ampEntity.val);\n  }\n  return val;\n}\nfunction saveTextToParentTag(textData, currentNode, jPath, isLeafNode) {\n  if (textData) { //store previously collected data as textNode\n    if(isLeafNode === undefined) isLeafNode = currentNode.child.length === 0\n    \n    textData = this.parseTextData(textData,\n      currentNode.tagname,\n      jPath,\n      false,\n      currentNode[\":@\"] ? Object.keys(currentNode[\":@\"]).length !== 0 : false,\n      isLeafNode);\n\n    if (textData !== undefined && textData !== \"\")\n      currentNode.add(this.options.textNodeName, textData);\n    textData = \"\";\n  }\n  return textData;\n}\n\n//TODO: use jPath to simplify the logic\n/**\n * \n * @param {string[]} stopNodes \n * @param {string} jPath\n * @param {string} currentTagName \n */\nfunction isItStopNode(stopNodes, jPath, currentTagName){\n  const allNodesExp = \"*.\" + currentTagName;\n  for (const stopNodePath in stopNodes) {\n    const stopNodeExp = stopNodes[stopNodePath];\n    if( allNodesExp === stopNodeExp || jPath === stopNodeExp  ) return true;\n  }\n  return false;\n}\n\n/**\n * Returns the tag Expression and where it is ending handling single-double quotes situation\n * @param {string} xmlData \n * @param {number} i starting index\n * @returns \n */\nfunction tagExpWithClosingIndex(xmlData, i, closingChar = \">\"){\n  let attrBoundary;\n  let tagExp = \"\";\n  for (let index = i; index < xmlData.length; index++) {\n    let ch = xmlData[index];\n    if (attrBoundary) {\n        if (ch === attrBoundary) attrBoundary = \"\";//reset\n    } else if (ch === '\"' || ch === \"'\") {\n        attrBoundary = ch;\n    } else if (ch === closingChar[0]) {\n      if(closingChar[1]){\n        if(xmlData[index + 1] === closingChar[1]){\n          return {\n            data: tagExp,\n            index: index\n          }\n        }\n      }else{\n        return {\n          data: tagExp,\n          index: index\n        }\n      }\n    } else if (ch === '\\t') {\n      ch = \" \"\n    }\n    tagExp += ch;\n  }\n}\n\nfunction findClosingIndex(xmlData, str, i, errMsg){\n  const closingIndex = xmlData.indexOf(str, i);\n  if(closingIndex === -1){\n    throw new Error(errMsg)\n  }else{\n    return closingIndex + str.length - 1;\n  }\n}\n\nfunction readTagExp(xmlData,i, removeNSPrefix, closingChar = \">\"){\n  const result = tagExpWithClosingIndex(xmlData, i+1, closingChar);\n  if(!result) return;\n  let tagExp = result.data;\n  const closeIndex = result.index;\n  const separatorIndex = tagExp.search(/\\s/);\n  let tagName = tagExp;\n  let attrExpPresent = true;\n  if(separatorIndex !== -1){//separate tag name and attributes expression\n    tagName = tagExp.substring(0, separatorIndex);\n    tagExp = tagExp.substring(separatorIndex + 1).trimStart();\n  }\n\n  const rawTagName = tagName;\n  if(removeNSPrefix){\n    const colonIndex = tagName.indexOf(\":\");\n    if(colonIndex !== -1){\n      tagName = tagName.substr(colonIndex+1);\n      attrExpPresent = tagName !== result.data.substr(colonIndex + 1);\n    }\n  }\n\n  return {\n    tagName: tagName,\n    tagExp: tagExp,\n    closeIndex: closeIndex,\n    attrExpPresent: attrExpPresent,\n    rawTagName: rawTagName,\n  }\n}\n/**\n * find paired tag for a stop node\n * @param {string} xmlData \n * @param {string} tagName \n * @param {number} i \n */\nfunction readStopNodeData(xmlData, tagName, i){\n  const startIndex = i;\n  // Starting at 1 since we already have an open tag\n  let openTagCount = 1;\n\n  for (; i < xmlData.length; i++) {\n    if( xmlData[i] === \"<\"){ \n      if (xmlData[i+1] === \"/\") {//close tag\n          const closeIndex = findClosingIndex(xmlData, \">\", i, `${tagName} is not closed`);\n          let closeTagName = xmlData.substring(i+2,closeIndex).trim();\n          if(closeTagName === tagName){\n            openTagCount--;\n            if (openTagCount === 0) {\n              return {\n                tagContent: xmlData.substring(startIndex, i),\n                i : closeIndex\n              }\n            }\n          }\n          i=closeIndex;\n        } else if(xmlData[i+1] === '?') { \n          const closeIndex = findClosingIndex(xmlData, \"?>\", i+1, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 3) === '!--') { \n          const closeIndex = findClosingIndex(xmlData, \"-->\", i+3, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 2) === '![') { \n          const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"StopNode is not closed.\") - 2;\n          i=closeIndex;\n        } else {\n          const tagData = readTagExp(xmlData, i, '>')\n\n          if (tagData) {\n            const openTagName = tagData && tagData.tagName;\n            if (openTagName === tagName && tagData.tagExp[tagData.tagExp.length-1] !== \"/\") {\n              openTagCount++;\n            }\n            i=tagData.closeIndex;\n          }\n        }\n      }\n  }//end for loop\n}\n\nfunction parseValue(val, shouldParse, options) {\n  if (shouldParse && typeof val === 'string') {\n    //console.log(options)\n    const newval = val.trim();\n    if(newval === 'true' ) return true;\n    else if(newval === 'false' ) return false;\n    else return toNumber(val, options);\n  } else {\n    if (isExist(val)) {\n      return val;\n    } else {\n      return '';\n    }\n  }\n}\n","'use strict';\n\nimport XmlNode from './xmlNode.js';\n\nconst METADATA_SYMBOL = XmlNode.getMetaDataSymbol();\n\n/**\n * \n * @param {array} node \n * @param {any} options \n * @returns \n */\nexport default function prettify(node, options){\n  return compress( node, options);\n}\n\n/**\n * \n * @param {array} arr \n * @param {object} options \n * @param {string} jPath \n * @returns object\n */\nfunction compress(arr, options, jPath){\n  let text;\n  const compressedObj = {};\n  for (let i = 0; i < arr.length; i++) {\n    const tagObj = arr[i];\n    const property = propName(tagObj);\n    let newJpath = \"\";\n    if(jPath === undefined) newJpath = property;\n    else newJpath = jPath + \".\" + property;\n\n    if(property === options.textNodeName){\n      if(text === undefined) text = tagObj[property];\n      else text += \"\" + tagObj[property];\n    }else if(property === undefined){\n      continue;\n    }else if(tagObj[property]){\n      \n      let val = compress(tagObj[property], options, newJpath);\n      const isLeaf = isLeafTag(val, options);\n      if (tagObj[METADATA_SYMBOL] !== undefined) {\n        val[METADATA_SYMBOL] = tagObj[METADATA_SYMBOL]; // copy over metadata\n      }\n\n      if(tagObj[\":@\"]){\n        assignAttributes( val, tagObj[\":@\"], newJpath, options);\n      }else if(Object.keys(val).length === 1 && val[options.textNodeName] !== undefined && !options.alwaysCreateTextNode){\n        val = val[options.textNodeName];\n      }else if(Object.keys(val).length === 0){\n        if(options.alwaysCreateTextNode) val[options.textNodeName] = \"\";\n        else val = \"\";\n      }\n\n      if(compressedObj[property] !== undefined && compressedObj.hasOwnProperty(property)) {\n        if(!Array.isArray(compressedObj[property])) {\n            compressedObj[property] = [ compressedObj[property] ];\n        }\n        compressedObj[property].push(val);\n      }else{\n        //TODO: if a node is not an array, then check if it should be an array\n        //also determine if it is a leaf node\n        if (options.isArray(property, newJpath, isLeaf )) {\n          compressedObj[property] = [val];\n        }else{\n          compressedObj[property] = val;\n        }\n      }\n    }\n    \n  }\n  // if(text && text.length > 0) compressedObj[options.textNodeName] = text;\n  if(typeof text === \"string\"){\n    if(text.length > 0) compressedObj[options.textNodeName] = text;\n  }else if(text !== undefined) compressedObj[options.textNodeName] = text;\n  return compressedObj;\n}\n\nfunction propName(obj){\n  const keys = Object.keys(obj);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if(key !== \":@\") return key;\n  }\n}\n\nfunction assignAttributes(obj, attrMap, jpath, options){\n  if (attrMap) {\n    const keys = Object.keys(attrMap);\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      const atrrName = keys[i];\n      if (options.isArray(atrrName, jpath + \".\" + atrrName, true, true)) {\n        obj[atrrName] = [ attrMap[atrrName] ];\n      } else {\n        obj[atrrName] = attrMap[atrrName];\n      }\n    }\n  }\n}\n\nfunction isLeafTag(obj, options){\n  const { textNodeName } = options;\n  const propCount = Object.keys(obj).length;\n  \n  if (propCount === 0) {\n    return true;\n  }\n\n  if (\n    propCount === 1 &&\n    (obj[textNodeName] || typeof obj[textNodeName] === \"boolean\" || obj[textNodeName] === 0)\n  ) {\n    return true;\n  }\n\n  return false;\n}\n","import { buildOptions} from './OptionsBuilder.js';\nimport OrderedObjParser from './OrderedObjParser.js';\nimport prettify from './node2json.js';\nimport {validate} from \"../validator.js\";\nimport XmlNode from './xmlNode.js';\n\nexport default class XMLParser{\n    \n    constructor(options){\n        this.externalEntities = {};\n        this.options = buildOptions(options);\n        \n    }\n    /**\n     * Parse XML dats to JS object \n     * @param {string|Buffer} xmlData \n     * @param {boolean|Object} validationOption \n     */\n    parse(xmlData,validationOption){\n        if(typeof xmlData === \"string\"){\n        }else if( xmlData.toString){\n            xmlData = xmlData.toString();\n        }else{\n            throw new Error(\"XML data is accepted in String or Bytes[] form.\")\n        }\n        if( validationOption){\n            if(validationOption === true) validationOption = {}; //validate with default options\n            \n            const result = validate(xmlData, validationOption);\n            if (result !== true) {\n              throw Error( `${result.err.msg}:${result.err.line}:${result.err.col}` )\n            }\n          }\n        const orderedObjParser = new OrderedObjParser(this.options);\n        orderedObjParser.addExternalEntities(this.externalEntities);\n        const orderedResult = orderedObjParser.parseXml(xmlData);\n        if(this.options.preserveOrder || orderedResult === undefined) return orderedResult;\n        else return prettify(orderedResult, this.options);\n    }\n\n    /**\n     * Add Entity which is not by default supported by this library\n     * @param {string} key \n     * @param {string} value \n     */\n    addEntity(key, value){\n        if(value.indexOf(\"&\") !== -1){\n            throw new Error(\"Entity value can't have '&'\")\n        }else if(key.indexOf(\"&\") !== -1 || key.indexOf(\";\") !== -1){\n            throw new Error(\"An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'\")\n        }else if(value === \"&\"){\n            throw new Error(\"An entity with value '&' is not permitted\");\n        }else{\n            this.externalEntities[key] = value;\n        }\n    }\n\n    /**\n     * Returns a Symbol that can be used to access the metadata\n     * property on a node.\n     * \n     * If Symbol is not available in the environment, an ordinary property is used\n     * and the name of the property is here returned.\n     * \n     * The XMLMetaData property is only present when `captureMetaData`\n     * is true in the options.\n     */\n    static getMetaDataSymbol() {\n        return XmlNode.getMetaDataSymbol();\n    }\n}\n","import fs from 'fs/promises';\r\nimport path, { dirname } from 'path';\r\nimport { XMLParser } from 'fast-xml-parser';\r\nimport FranchiseEnum from '../FranchiseEnum.js';\r\nimport utilService from './utilService.js';\r\nimport { fileURLToPath } from 'url';\r\n\r\nconst __filename = fileURLToPath(import.meta.url);\r\nconst __dirname = dirname(__filename);\r\n\r\n/**\r\n * Parse FTX schema files with support for IncludeFile dependencies.\r\n * @param {{main: string, [id:string]: string}} fileMap - { main: '/abs/path/to/main.FTX', ...otherName: '/abs/path/to/other.FTX' }\r\n * @param {Object[]} [extraSchemas] - Optional array of extra schemas to include. If not included, will use defaults.\r\n * @returns {Promise<Object>} - Parsed schema object\r\n */\r\nexport async function generateSchemaV2({ fileMap, extraSchemas }) {\r\n    const parsedFiles = {};\r\n    const enums = [];\r\n    const schemas = [];\r\n    const schemaMap = {};\r\n    let schemaMeta = {};\r\n    if (!extraSchemas || extraSchemas.length === 0) {\r\n        // Load extra schemas if available\r\n        try {\r\n            const extraPath = path.join(__dirname, '../../data/schemas/extra-schemas.json');\r\n            const extraRaw = await fs.readFile(extraPath, 'utf8');\r\n            extraSchemas = JSON.parse(extraRaw);\r\n        }\r\n        catch (e) {\r\n            // ignore if not present\r\n        }\r\n    }\r\n    // Recursively parse a file and its includes (async)\r\n    async function parseFile(fileKey) {\r\n        if (parsedFiles[fileKey])\r\n            return;\r\n        const filePath = fileMap[fileKey];\r\n        if (!filePath)\r\n            throw new Error(`Missing file mapping for: ${fileKey}`);\r\n        const xml = await fs.readFile(filePath, 'utf8');\r\n        const parser = new XMLParser({ ignoreAttributes: false, attributeNamePrefix: '', allowBooleanAttributes: true, trimValues: false });\r\n        const doc = parser.parse(xml);\r\n        const root = doc.FranTkData;\r\n        if (!schemaMeta.databaseName && root.databaseName) {\r\n            schemaMeta = {\r\n                databaseName: root.databaseName,\r\n                dataMajorVersion: root.dataMajorVersion,\r\n                dataMinorVersion: root.dataMinorVersion\r\n            };\r\n        }\r\n        // Parse includes first\r\n        if (root.Includes && root.Includes.IncludeFile) {\r\n            const includes = Array.isArray(root.Includes.IncludeFile)\r\n                ? root.Includes.IncludeFile\r\n                : [root.Includes.IncludeFile];\r\n            for (const inc of includes) {\r\n                let incKey = inc.fileName.replace(/\\.FTX$/i, '');\r\n                if (!fileMap[incKey]) {\r\n                    // Try all lowercase\r\n                    incKey = incKey.toLowerCase();\r\n                    if (!fileMap[incKey]) {\r\n                        console.warn(`schemaGeneratorV2: Missing file mapping for include: ${incKey} in ${fileKey}`);\r\n                        continue; // Suppress missing include mapping\r\n                    }\r\n                }\r\n                await parseFile(incKey);\r\n            }\r\n        }\r\n        // Parse enums and schemas\r\n        if (root.schemas) {\r\n            const items = Object.entries(root.schemas)\r\n                .flatMap(([tag, val]) => Array.isArray(val) ? val.map(v => ({ tag, ...v })) : [{ tag, ...val }]);\r\n            for (const item of items) {\r\n                if (item.tag === 'enum') {\r\n                    const theEnum = new FranchiseEnum(item.name, item.assetId, item.isRecordPersistent);\r\n                    theEnum._members = [];\r\n                    if (item.attribute) {\r\n                        const members = Array.isArray(item.attribute) ? item.attribute : [item.attribute];\r\n                        for (const attr of members) {\r\n                            theEnum.addMember && theEnum.addMember(attr.name, attr.idx, attr.value);\r\n                        }\r\n                    }\r\n                    enums.push(theEnum);\r\n                }\r\n                else if (item.tag === 'schema') {\r\n                    const schema = {\r\n                        assetId: item.assetId,\r\n                        ownerAssetId: item.ownerAssetId,\r\n                        numMembers: item.numMembers,\r\n                        name: item.name,\r\n                        base: item.base,\r\n                        attributes: []\r\n                    };\r\n                    if (item.attribute) {\r\n                        const attrs = Array.isArray(item.attribute) ? item.attribute : [item.attribute];\r\n                        for (const attr of attrs) {\r\n                            schema.attributes.push(parseAttribute(attr));\r\n                        }\r\n                    }\r\n                    schemas.push(schema);\r\n                    schemaMap[schema.name] = schema;\r\n                }\r\n            }\r\n        }\r\n        parsedFiles[fileKey] = true;\r\n    }\r\n    // Attribute parsing logic (copied from schemaGenerator.js)\r\n    function parseAttribute(attributeAttributes) {\r\n        return {\r\n            index: attributeAttributes.idx,\r\n            name: attributeAttributes.name,\r\n            type: attributeAttributes.type,\r\n            minValue: attributeAttributes.minValue,\r\n            maxValue: attributeAttributes.maxValue,\r\n            maxLength: attributeAttributes.maxLen,\r\n            default: getDefaultValue(attributeAttributes.default),\r\n            final: attributeAttributes.final,\r\n            enum: getEnum(attributeAttributes.type),\r\n            const: attributeAttributes.const\r\n        };\r\n        function getDefaultValue(defaultVal) {\r\n            if (!defaultVal) {\r\n                return undefined;\r\n            }\r\n            // Only replace XML entities, do not trim or modify whitespace at all\r\n            return defaultVal\r\n                .replace(/&#xD;/g, '\\r')\r\n                .replace(/&#xA;/g, '\\n')\r\n                .replace(/&amp;/g, '&')\r\n                .replace(/&gt;/g, '>')\r\n                .replace(/&lt;/g, '<')\r\n                .replace(/&quot;/g, '\"');\r\n        }\r\n    }\r\n    function getEnum(name) {\r\n        return enums.find(theEnum => theEnum.name === name);\r\n    }\r\n    function addExtraSchemas() {\r\n        if (!Array.isArray(extraSchemas))\r\n            return;\r\n        extraSchemas.forEach((schema) => {\r\n            if (!schemaMap[schema.name]) {\r\n                schema.attributes.filter((attrib) => {\r\n                    return attrib.enum && !(attrib.enum instanceof FranchiseEnum);\r\n                }).forEach((attrib) => {\r\n                    attrib.enum = getEnum(attrib.enum);\r\n                });\r\n                schemas.unshift(schema);\r\n            }\r\n        });\r\n    }\r\n    function calculateInheritedSchemas(schemaList) {\r\n        const schemasWithBase = schemaList.filter((schema) => schema.base && schema.base.indexOf('()') === -1);\r\n        schemasWithBase.forEach((schema) => {\r\n            if (schema.base && schema.base.indexOf('()') === -1) {\r\n                schema.originalAttributesOrder = schema.attributes;\r\n                const baseSchema = schemaList.find((schemaToSearch) => schemaToSearch.name === schema.base);\r\n                if (baseSchema) {\r\n                    baseSchema.attributes.forEach((baseAttribute, index) => {\r\n                        let oldIndex = schema.attributes.findIndex((schemaAttribute) => schemaAttribute?.name === baseAttribute?.name);\r\n                        utilService.arrayMove(schema.attributes, oldIndex, index);\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n    await parseFile('main');\r\n    addExtraSchemas();\r\n    calculateInheritedSchemas(schemas);\r\n    // Set enum member lengths if needed\r\n    enums.forEach(e => e.setMemberLength && e.setMemberLength());\r\n    // Extract gameYear from databaseName\r\n    const majorVersion = schemaMeta.dataMajorVersion;\r\n    const minorVersion = schemaMeta.dataMinorVersion;\r\n    const databaseName = schemaMeta.databaseName;\r\n    const gameYearMatch = /Madden(\\d{2})/.exec(databaseName);\r\n    const gameYear = gameYearMatch ? parseInt(gameYearMatch[1]) : null;\r\n    const root = {\r\n        meta: {\r\n            major: parseInt(majorVersion),\r\n            minor: parseInt(minorVersion),\r\n            gameYear\r\n        },\r\n        schemas,\r\n        schemaMap\r\n    };\r\n    // Return the plain object\r\n    return root;\r\n}\r\n","import fs from \"fs\";\r\nimport path from \"path\";\r\nimport zlib from \"zlib\";\r\nimport FranchiseEnum from \"./FranchiseEnum.js\";\r\nimport events from \"events\";\r\nimport schemaGenerator from \"./services/schemaGenerator.js\";\r\nimport { generateSchemaV2 } from \"./services/schemaGeneratorV2.js\";\r\nconst EventEmitter = events.EventEmitter;\r\n/**\r\n   * @typedef SchemaAttribute\r\n   * @param {string} index\r\n   * @param {string} name\r\n   * @param {string} type\r\n   * @param {string} minValue\r\n   * @param {string} maxValue\r\n   * @param {string} maxLength\r\n   * @param {string} default\r\n   * @param {string} final\r\n   * @param {FranchiseEnum?} [enum]\r\n   * @param {string}\r\n*/\r\n/**\r\n   * @typedef TableSchema\r\n   * @param {number} assetId\r\n   * @param {number} ownerAssetId\r\n   * @param {number} numMembers\r\n   * @param {string} name\r\n   * @param {string} base\r\n   * @param {Array<SchemaAttribute>} attributes\r\n*/\r\nclass FranchiseSchema extends EventEmitter {\r\n    constructor(filePath, { useNewSchemaGeneration = false, extraSchemas = [], fileMap = {} } = {}) {\r\n        super();\r\n        this.schemas = [];\r\n        this.path = filePath;\r\n        this.useNewSchemaGeneration = useNewSchemaGeneration;\r\n        this.extraSchemas = extraSchemas;\r\n        this.fileMap = fileMap;\r\n    }\r\n    ;\r\n    evaluate() {\r\n        const fileExtension = path.extname(this.path).toLowerCase();\r\n        switch (fileExtension) {\r\n            case '.gz':\r\n                // const schemaFile = fs.readFileSync(this.path);\r\n                this.evaluateSchemaGzip(this.path);\r\n                break;\r\n            case '.ftx':\r\n            case '.xml':\r\n                this.evaluateSchemaXml();\r\n                break;\r\n            default:\r\n                throw new Error('Invalid schema. Please make sure your schema file is of correct format (.gz, .xml, or .ftx).');\r\n        }\r\n    }\r\n    ;\r\n    getSchema(name) {\r\n        // return this.schemas.find((schema) => { return schema.name === name; });\r\n        return this.schemaMap[name];\r\n    }\r\n    ;\r\n    getEnum(name) {\r\n        return this.enums.find((theEnum) => { return theEnum.name === name; });\r\n    }\r\n    ;\r\n    evaluateSchemaGzip(schemaPath) {\r\n        const schemaFile = fs.readFileSync(this.path);\r\n        const uncompressed = zlib.gunzipSync(schemaFile);\r\n        this.schema = JSON.parse(uncompressed.toString());\r\n        this.meta = this.schema.meta;\r\n        this.schemas = this.schema.schemas;\r\n        this.schemaMap = {};\r\n        this.enumMap = {};\r\n        for (let i = 0; i < this.schemas.length; i++) {\r\n            const schema = this.schemas[i];\r\n            this.schemaMap[schema.name] = schema;\r\n            for (let j = 0; j < schema.attributes.length; j++) {\r\n                const attribute = schema.attributes[j];\r\n                if (attribute.enum) {\r\n                    attribute.enum = new FranchiseEnum(attribute.enum);\r\n                    this.enumMap[attribute.enum.name] = attribute.enum;\r\n                }\r\n            }\r\n        }\r\n        let addedExtraSchema = false;\r\n        const extraSchemas = schemaGenerator.getExtraSchemas();\r\n        extraSchemas.forEach((schema) => {\r\n            if (!this.schemaMap[schema.name]) {\r\n                schema.attributes.forEach((attrib) => {\r\n                    if (attrib.enum) {\r\n                        attrib.enum = new FranchiseEnum(this.enumMap[attrib.enum]);\r\n                    }\r\n                });\r\n                this.schemas.unshift(schema);\r\n                this.schemaMap[schema.name] = schema;\r\n                addedExtraSchema = true;\r\n            }\r\n        });\r\n        if (addedExtraSchema) {\r\n            schemaGenerator.calculateInheritedSchemas(this.schemas);\r\n        }\r\n        this.emit('schemas:done');\r\n    }\r\n    ;\r\n    evaluateSchemaXml() {\r\n        if (this.useNewSchemaGeneration) {\r\n            generateSchemaV2({\r\n                fileMap: this.fileMap,\r\n                extraSchemas: this.extraSchemas\r\n            }).then((schema) => {\r\n                this.schema = schema;\r\n                this.meta = schema.meta;\r\n                this.schemas = schema.schemas;\r\n                this.schemaMap = schema.schemaMap;\r\n                this.emit('schemas:done');\r\n            });\r\n        }\r\n        else {\r\n            schemaGenerator.eventEmitter.on('schemas:done', (schema) => {\r\n                this.schema = schema;\r\n                this.meta = schema.meta;\r\n                this.schemas = schema.schemas;\r\n                this.schemaMap = schema.schemaMap;\r\n                this.emit('schemas:done');\r\n            });\r\n            schemaGenerator.generate(this.path);\r\n        }\r\n    }\r\n    ;\r\n}\r\n;\r\nexport default FranchiseSchema;\r\n","class FranchiseFileTable2Field {\r\n    /** @param {number} index @param {number} maxLength @param {FranchiseFileTable} parent */\r\n    constructor(index, maxLength, parent) {\r\n        /** @private */\r\n        this._value = '';\r\n        /** @type {number} */\r\n        this.rawIndex = index;\r\n        this.isChanged = false;\r\n        this.maxLength = maxLength;\r\n        /** @type {FranchiseFileField} */\r\n        this.fieldReference = null;\r\n        /** @type {number} */\r\n        this.lengthAtLastSave = null;\r\n        /** @private */\r\n        this._unformattedValue = null;\r\n        this.index = index;\r\n        this._offset = this.index;\r\n        this._parent = parent;\r\n    }\r\n    ;\r\n    get unformattedValue() {\r\n        return this._unformattedValue;\r\n    }\r\n    ;\r\n    set unformattedValue(value) {\r\n        this._unformattedValue = value;\r\n        if (this.lengthAtLastSave === null) {\r\n            this.lengthAtLastSave = getLengthOfUnformattedValue(this._unformattedValue);\r\n        }\r\n        this._value = null;\r\n        if (this._parent) {\r\n            this._parent.onEvent('change', this);\r\n        }\r\n    }\r\n    ;\r\n    get value() {\r\n        if (this._value === null) {\r\n            this._value = this._unformattedValue.toString().replace(/\\0.*$/g, '');\r\n        }\r\n        return this._value;\r\n    }\r\n    ;\r\n    set value(value) {\r\n        this._value = value;\r\n        if (value.length > this.maxLength) {\r\n            value = value.substring(0, this.maxLength);\r\n        }\r\n        this._unformattedValue = this._strategy.setUnformattedValueFromFormatted(value, this.maxLength);\r\n        if (this.lengthAtLastSave === null) {\r\n            this.lengthAtLastSave = getLengthOfUnformattedValue(this._unformattedValue);\r\n        }\r\n        this._parent.onEvent('change', this);\r\n    }\r\n    ;\r\n    get hexData() {\r\n        return this._unformattedValue;\r\n    }\r\n    ;\r\n    /** @type {Table2FieldStrategy} */\r\n    get strategy() {\r\n        return this._strategy;\r\n    }\r\n    ;\r\n    /** @param {Table2FieldStrategy} strategy */\r\n    set strategy(strategy) {\r\n        this._strategy = strategy;\r\n    }\r\n    ;\r\n    /** @returns {number} */\r\n    get offset() {\r\n        return this._offset;\r\n    }\r\n    ;\r\n    /** @param {number} offset */\r\n    set offset(offset) {\r\n        const offsetChanged = this._offset !== offset;\r\n        this._offset = offset;\r\n        this.index = offset;\r\n        if (offsetChanged && this.fieldReference) {\r\n            this.fieldReference.unformattedValue.setBits(this.fieldReference.offset.offset, offset, 32);\r\n            this.fieldReference.isChanged = true;\r\n            this.fieldReference._bubbleChangeToParent();\r\n        }\r\n    }\r\n    ;\r\n    get parent() {\r\n        return this._parent;\r\n    }\r\n    ;\r\n    /** @param {FranchiseFileTable} parent */\r\n    set parent(parent) {\r\n        this._parent = parent;\r\n    }\r\n    ;\r\n}\r\n;\r\nfunction getLengthOfUnformattedValue(value) {\r\n    return value.length;\r\n}\r\n;\r\nexport default FranchiseFileTable2Field;\r\n","class FranchiseFileTable3Field {\r\n    /** @param {number} index @param {number} maxLength @param {FranchiseFileTable} parent */\r\n    constructor(index, maxLength, parent) {\r\n        /** @private */\r\n        this._value = '';\r\n        /** @type {number} */\r\n        this.rawIndex = index;\r\n        this.isChanged = false;\r\n        this.maxLength = maxLength;\r\n        /** @type {FranchiseFileField} */\r\n        this.fieldReference = null;\r\n        /** @type {number} */\r\n        this.lengthAtLastSave = null;\r\n        /** @private */\r\n        this._unformattedValue = null;\r\n        this.index = index;\r\n        this._offset = this.index;\r\n        this._parent = parent;\r\n    }\r\n    ;\r\n    get unformattedValue() {\r\n        return this._unformattedValue;\r\n    }\r\n    ;\r\n    set unformattedValue(value) {\r\n        this._unformattedValue = value;\r\n        if (this.lengthAtLastSave === null) {\r\n            this.lengthAtLastSave = getLengthOfUnformattedValue(this._unformattedValue);\r\n        }\r\n        this._value = null;\r\n        if (this._parent) {\r\n            this._parent.onEvent('change', this);\r\n        }\r\n    }\r\n    ;\r\n    get value() {\r\n        if (this._value === null) {\r\n            this._value = this._strategy.getFormattedValueFromUnformatted(this._unformattedValue);\r\n        }\r\n        return this._value;\r\n    }\r\n    ;\r\n    set value(value) {\r\n        this._value = value;\r\n        this._unformattedValue = this._strategy.setUnformattedValueFromFormatted(value, this._unformattedValue, this.maxLength);\r\n        if (this.lengthAtLastSave === null) {\r\n            this.lengthAtLastSave = getLengthOfUnformattedValue(this._unformattedValue);\r\n        }\r\n        this._parent.onEvent('change', this);\r\n    }\r\n    ;\r\n    get hexData() {\r\n        return this._unformattedValue;\r\n    }\r\n    ;\r\n    /** @type {Table3FieldStrategy} */\r\n    get strategy() {\r\n        return this._strategy;\r\n    }\r\n    ;\r\n    /** @param {Table3FieldStrategy} strategy */\r\n    set strategy(strategy) {\r\n        this._strategy = strategy;\r\n    }\r\n    ;\r\n    /** @returns {number} */\r\n    get offset() {\r\n        return this._offset;\r\n    }\r\n    ;\r\n    /** @param {number} offset */\r\n    set offset(offset) {\r\n        this._offset = offset;\r\n        this.index = offset;\r\n        if (this.fieldReference) {\r\n            this.fieldReference.unformattedValue.setBits(this.fieldReference.offset.offset, offset, 32);\r\n        }\r\n    }\r\n    ;\r\n    get parent() {\r\n        return this._parent;\r\n    }\r\n    ;\r\n    /** @param {FranchiseFileTable} parent */\r\n    set parent(parent) {\r\n        this._parent = parent;\r\n    }\r\n    ;\r\n}\r\n;\r\nfunction getLengthOfUnformattedValue(value) {\r\n    return value.length;\r\n}\r\n;\r\nexport default FranchiseFileTable3Field;\r\n","import { BitView } from \"bit-buffer\";\r\nimport utilService from \"./services/utilService.js\";\r\nimport FranchiseFileTable2Field from \"./FranchiseFileTable2Field.js\";\r\nimport FranchiseFileTable3Field from \"./FranchiseFileTable3Field.js\";\r\nclass FranchiseFileField {\r\n    /** @param {string} key @param {Buffer} value @param {OffsetTableEntry} offset @param {FranchiseFileRecord} parent */\r\n    constructor(key, value, offset, parent) {\r\n        /** @private */\r\n        this._key = key;\r\n        /** @private */\r\n        this._recordBuffer = value;\r\n        /** @private */\r\n        this._unformattedValue = null;\r\n        /** @private */\r\n        this._offset = offset;\r\n        /** @private */\r\n        this._parent = parent;\r\n        /** @private */\r\n        this._isChanged = false;\r\n        if (offset.valueInSecondTable) {\r\n            /** @type {FranchiseFileTable2Field?} */\r\n            this.secondTableField = new FranchiseFileTable2Field(this._recordBuffer.readUInt32BE(offset.offset / 8), offset.maxLength);\r\n            this.secondTableField.fieldReference = this;\r\n        }\r\n        if (offset.valueInThirdTable) {\r\n            /** @type {FranchiseFileTable3Field?} */\r\n            this.thirdTableField = new FranchiseFileTable3Field(this._recordBuffer.readUInt32BE(offset.offset / 8), offset.maxLength);\r\n            this.thirdTableField.fieldReference = this;\r\n        }\r\n    }\r\n    ;\r\n    /** @returns {string} */\r\n    get key() {\r\n        return this._key;\r\n    }\r\n    ;\r\n    /** @returns {OffsetTableEntry} */\r\n    get offset() {\r\n        return this._offset;\r\n    }\r\n    ;\r\n    /** @returns {*} */\r\n    get value() {\r\n        if (this._unformattedValue === null) {\r\n            this._setUnformattedValueIfEmpty();\r\n        }\r\n        if (this._value === null) {\r\n            this._value = this._parseFieldValue(this._unformattedValue, this._offset);\r\n        }\r\n        return this._value;\r\n    }\r\n    ;\r\n    /** @returns {boolean} */\r\n    get isReference() {\r\n        return this._offset.isReference;\r\n    }\r\n    ;\r\n    /** @returns {RecordReference?} */\r\n    get referenceData() {\r\n        if (this._unformattedValue === null) {\r\n            this._setUnformattedValueIfEmpty();\r\n        }\r\n        if (this.isReference) {\r\n            return utilService.getReferenceDataFromBitview(this._unformattedValue, this.offset.offset);\r\n        }\r\n        return null;\r\n    }\r\n    ;\r\n    set value(value) {\r\n        if (this._unformattedValue === null) {\r\n            this._setUnformattedValueIfEmpty();\r\n        }\r\n        this._value = value;\r\n        this.isChanged = true;\r\n        if (this.offset.valueInSecondTable) {\r\n            this.secondTableField.value = value.toString();\r\n        }\r\n        else if (this.offset.valueInThirdTable) {\r\n            if (typeof value === 'object') {\r\n                const newVal = JSON.stringify(value);\r\n                this._value = newVal;\r\n                this.thirdTableField.value = newVal;\r\n            }\r\n            else {\r\n                this.thirdTableField.value = value.toString();\r\n            }\r\n        }\r\n        else {\r\n            let actualValue;\r\n            if (this.offset.isReference) {\r\n                if (!utilService.isString(value)) {\r\n                    throw new Error(`Argument must be of type string. You passed in a ${typeof unformattedValue}.`);\r\n                }\r\n                else if (!utilService.stringOnlyContainsBinaryDigits(value)) {\r\n                    throw new Error(`Argument must only contain binary digits 1 and 0. If you would like to set the value, please set the 'value' attribute instead.`);\r\n                }\r\n                const referenceData = utilService.getReferenceData(value);\r\n                this._unformattedValue.setBits(this.offset.offset, referenceData.tableId, 15);\r\n                this._unformattedValue.setBits((this.offset.offset + 15), referenceData.rowNumber, 17);\r\n            }\r\n            else if (this.offset.enum) {\r\n                try {\r\n                    let theEnum = this._getEnumFromValue(value);\r\n                    // Enums can have negative values and Madden negative numbers are not standard. We need to convert it here.\r\n                    // Ex: In Madden, binary \"1000\" = -1 for an enum with a max length of 4. But for everything else, \"1000\" = 8, so we need to get the \"real\" value here.\r\n                    const decimalEquivalent = utilService.bin2dec(theEnum.unformattedValue);\r\n                    this._unformattedValue.setBits(this.offset.offset, decimalEquivalent, this.offset.length);\r\n                    this._value = theEnum.name;\r\n                }\r\n                catch (err) {\r\n                    // if user tries entering an invalid enum value, check if it's an empty record reference (will be binary)\r\n                    if (utilService.stringOnlyContainsBinaryDigits(value)) {\r\n                        this._value = value;\r\n                        this._unformattedValue.setBits(this.offset.offset, value, this.offset.length);\r\n                    }\r\n                    else {\r\n                        this._value = null;\r\n                        throw err;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                switch (this.offset.type) {\r\n                    case 's_int':\r\n                        actualValue = parseInt(value);\r\n                        this._value = actualValue;\r\n                        this._unformattedValue.setBits(this.offset.offset, actualValue - this.offset.minValue, this.offset.length);\r\n                        break;\r\n                    default:\r\n                    case 'int':\r\n                        actualValue = parseInt(value);\r\n                        this._value = actualValue;\r\n                        if (this.offset.minValue || this.offset.maxValue) {\r\n                            // return utilService.dec2bin(formatted, offset.length);\r\n                            this._unformattedValue.setBits(this.offset.offset, actualValue, this.offset.length);\r\n                        }\r\n                        else {\r\n                            const maxValueBinary = getMaxValueBinary(this.offset);\r\n                            const maxValue = utilService.bin2dec(maxValueBinary);\r\n                            // return utilService.dec2bin(formatted + maxValue, offset.length);\r\n                            this._unformattedValue.setBits(this.offset.offset, actualValue + maxValue, this.offset.length);\r\n                        }\r\n                        break;\r\n                    case 'bool':\r\n                        // return (formatted == 1 || (formatted.toString().toLowerCase() == 'true')) ? '1' : '0';\r\n                        actualValue = (value == 1 || (value.toString().toLowerCase() == 'true'));\r\n                        this._value = actualValue;\r\n                        this._unformattedValue.setBits(this.offset.offset + (this.offset.length - 1), actualValue, 1);\r\n                        break;\r\n                    case 'float':\r\n                        actualValue = parseFloat(value);\r\n                        this._value = actualValue;\r\n                        // return utilService.float2Bin(formatted);\r\n                        // this._unformattedValue.setBits(this.offset.offset, value, this.offset.length);\r\n                        this._unformattedValue.setFloat32(this.offset.offset, actualValue);\r\n                        break;\r\n                }\r\n            }\r\n            this._parent.onEvent('change', this);\r\n        }\r\n    }\r\n    ;\r\n    /** @returns {BitView} */\r\n    get unformattedValue() {\r\n        if (this._unformattedValue === null) {\r\n            this._setUnformattedValueIfEmpty();\r\n        }\r\n        return this._unformattedValue;\r\n    }\r\n    ;\r\n    /** @param {BitView} unformattedValue */\r\n    set unformattedValue(unformattedValue) {\r\n        this.setUnformattedValueWithoutChangeEvent(unformattedValue);\r\n        this._value = null;\r\n        this._parent.onEvent('change', this);\r\n    }\r\n    ;\r\n    /** @returns {boolean} */\r\n    get isChanged() {\r\n        return this._isChanged;\r\n    }\r\n    ;\r\n    /** @param {boolean} changed */\r\n    set isChanged(changed) {\r\n        this._isChanged = changed;\r\n    }\r\n    ;\r\n    /** @param {OffsetTableEntry} offset */\r\n    getValueAs(offset) {\r\n        if (this._unformattedValue === null) {\r\n            this._setUnformattedValueIfEmpty();\r\n        }\r\n        return this._parseFieldValue(this._unformattedValue, offset);\r\n    }\r\n    _bubbleChangeToParent() {\r\n        this._parent.onEvent('change', this);\r\n    }\r\n    ;\r\n    clearCachedValues() {\r\n        this._value = null;\r\n        this._unformattedValue = null;\r\n    }\r\n    ;\r\n    _setUnformattedValueIfEmpty() {\r\n        this._value = null;\r\n        this._unformattedValue = new BitView(this._recordBuffer, this._recordBuffer.byteOffset);\r\n        this._unformattedValue.bigEndian = true;\r\n    }\r\n    ;\r\n    /** @param {BitView} unformattedValue @param {boolean} suppressErrors */\r\n    setUnformattedValueWithoutChangeEvent(unformattedValue, suppressErrors) {\r\n        if (!(unformattedValue instanceof BitView)) {\r\n            throw new Error(`Argument must be of type BitView. You passed in a(n) ${typeof unformattedValue}.`);\r\n        }\r\n        else {\r\n            this._unformattedValue = unformattedValue;\r\n            this._value = null;\r\n        }\r\n    }\r\n    /** @returns {FranchiseEnumValue?} */\r\n    _getEnumFromValue(value) {\r\n        const enumName = this.offset.enum.getMemberByName(value);\r\n        if (enumName) {\r\n            return enumName;\r\n        }\r\n        else {\r\n            const formattedEnum = this.offset.enum.getMemberByValue(value);\r\n            if (formattedEnum) {\r\n                return formattedEnum;\r\n            }\r\n            else {\r\n                const unformattedEnum = this.offset.enum.getMemberByUnformattedValue(value);\r\n                if (unformattedEnum) {\r\n                    return unformattedEnum;\r\n                }\r\n                else {\r\n                    return this.offset.enum.members[0];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    ;\r\n    /** @param {BitView} unformatted, @param {OffsetTableEntry} offset */\r\n    _parseFieldValue(unformatted, offset) {\r\n        if (offset.valueInSecondTable) {\r\n            return this.secondTableField.value;\r\n        }\r\n        else if (offset.valueInThirdTable) {\r\n            return this.thirdTableField.value;\r\n        }\r\n        else if (offset.enum) {\r\n            const enumUnformattedValue = utilService.dec2bin(unformatted.getBits(offset.offset, offset.length), offset.enum._maxLength);\r\n            try {\r\n                const theEnum = offset.enum.getMemberByUnformattedValue(enumUnformattedValue);\r\n                if (theEnum) {\r\n                    return theEnum.name;\r\n                }\r\n            }\r\n            catch (err) {\r\n                // console.log(err);\r\n            }\r\n            return enumUnformattedValue;\r\n        }\r\n        else if (offset.isReference) {\r\n            try {\r\n                const referenceData = utilService.getReferenceDataFromBitview(unformatted, offset.offset);\r\n                return utilService.getBinaryReferenceData(referenceData.tableId, referenceData.rowNumber);\r\n            }\r\n            catch (err) {\r\n                console.warn(`Tried to read ${offset.name} as a reference, but received an error.`);\r\n                // tried to read a reference, but the offset was incorrect\r\n                return unformatted.getBits(offset.offset, offset.length);\r\n            }\r\n        }\r\n        else {\r\n            switch (offset.type) {\r\n                case 's_int':\r\n                    // return utilService.bin2dec(unformatted) + offset.minValue;\r\n                    return unformatted.getBits(offset.offset, offset.length) + offset.minValue;\r\n                case 'int':\r\n                    if (offset.minValue || offset.maxValue) {\r\n                        return unformatted.getBits(offset.offset, offset.length);\r\n                    }\r\n                    else {\r\n                        // This is for int[] tables.\r\n                        const maxValueBinary = getMaxValueBinary(offset);\r\n                        const maxValue = utilService.bin2dec(maxValueBinary);\r\n                        const newValue = unformatted.getBits(offset.offset, offset.length);\r\n                        if (newValue === 0) {\r\n                            return 0;\r\n                        }\r\n                        else {\r\n                            return newValue - maxValue;\r\n                        }\r\n                    }\r\n                case 'bool':\r\n                    return unformatted.getBits(offset.offset + (offset.length - 1), 1) ? true : false;\r\n                case 'float':\r\n                    // return utilService.bin2Float(unformatted);\r\n                    return unformatted.getFloat32(offset.offset, offset.length);\r\n                default:\r\n                    return unformatted;\r\n            }\r\n        }\r\n    }\r\n    ;\r\n}\r\n;\r\nfunction getMaxValueBinary(offset) {\r\n    let maxValue = '1';\r\n    for (let j = 0; j < (offset.length - 1); j++) {\r\n        maxValue += '0';\r\n    }\r\n    return maxValue;\r\n}\r\n;\r\nexport default FranchiseFileField;\r\n","import utilService from \"./services/utilService.js\";\r\nimport FranchiseFileField from \"./FranchiseFileField.js\";\r\nclass FranchiseFileRecord {\r\n    /** @param {Buffer} data @param {number} index @param {OffsetTableEntry} offsetTable, @param {FranchiseFileTable} parent */\r\n    constructor(data, index, offsetTable, parent) {\r\n        /** @type {Buffer}  */\r\n        this._data = data;\r\n        /** @type {OffsetTableEntry} */\r\n        this._offsetTable = offsetTable;\r\n        /** @type {number} */\r\n        this.index = index;\r\n        /** @private @type {Array<FranchiseFileField>} */\r\n        this._fieldsArray = [];\r\n        /** @private @type {Record<string, FranchiseFileField>} */\r\n        this._fields = this.parseRecordFields();\r\n        this._isChanged = false;\r\n        /** @type {number} */\r\n        this.arraySize = null;\r\n        this.isEmpty = false;\r\n        /** @type {FranchiseFileTable} */\r\n        this._parent = parent;\r\n        return new Proxy(this, {\r\n            get: function (target, prop, receiver) {\r\n                return target.fields[prop] !== undefined ? target.fields[prop].value : target[prop] !== undefined ? target[prop] : null;\r\n            },\r\n            set: function (target, prop, receiver) {\r\n                if (target.fields[prop] !== undefined) {\r\n                    target.fields[prop].value = receiver;\r\n                }\r\n                else {\r\n                    target[prop] = receiver;\r\n                }\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n    ;\r\n    /** @returns {Buffer} */\r\n    get hexData() {\r\n        return this._data;\r\n    }\r\n    ;\r\n    /** @returns {Record<string, FranchiseFileField>} */\r\n    get fields() {\r\n        return this._fields;\r\n    }\r\n    ;\r\n    /** @returns {Array<FranchiseFileField>} */\r\n    get fieldsArray() {\r\n        return this._fieldsArray;\r\n    }\r\n    ;\r\n    /** @returns {Buffer} */\r\n    get data() {\r\n        return this._data;\r\n    }\r\n    ;\r\n    /** @param {Buffer} data */\r\n    set data(data) {\r\n        this._data = data;\r\n        this._fieldsArray.forEach((field) => {\r\n            const unformattedValue = data.slice(field.offset.offset, field.offset.offset + field.offset.length);\r\n            field.setUnformattedValueWithoutChangeEvent(unformattedValue);\r\n        });\r\n    }\r\n    ;\r\n    get isChanged() {\r\n        return this._isChanged;\r\n    }\r\n    ;\r\n    /** @param {boolean} changed */\r\n    set isChanged(changed) {\r\n        this._isChanged = changed;\r\n        if (changed === false) {\r\n            this.fieldsArray.forEach((field) => {\r\n                field.isChanged = false;\r\n            });\r\n        }\r\n    }\r\n    /** @param {string} key @returns {FranchiseFileField?} */\r\n    getFieldByKey(key) {\r\n        return this._fields[key];\r\n    }\r\n    ;\r\n    /** @param {string} key @returns {*?} */\r\n    getValueByKey(key) {\r\n        let field = this.getFieldByKey(key);\r\n        return field ? field.value : null;\r\n    }\r\n    ;\r\n    /** @param {string} key @returns {RecordReference?} */\r\n    getReferenceDataByKey(key) {\r\n        let field = this.getFieldByKey(key);\r\n        return field ? field.referenceData : null;\r\n    }\r\n    ;\r\n    /** @returns {Record<string, FranchiseFileField>} */\r\n    parseRecordFields() {\r\n        let fields = {};\r\n        this._fieldsArray = [];\r\n        for (let j = 0; j < this._offsetTable.length; j++) {\r\n            const offset = this._offsetTable[j];\r\n            // Push the entire record buffer to the field. No need to perform a calculation\r\n            // to subarray the buffer, BitView will take care of it in the Field.\r\n            fields[offset.name] = new FranchiseFileField(offset.name, this._data, offset, this);\r\n            this._fieldsArray.push(fields[offset.name]);\r\n        }\r\n        return fields;\r\n    }\r\n    ;\r\n    empty() {\r\n        this._parent.onEvent('empty', this);\r\n        this.isEmpty = true;\r\n    }\r\n    ;\r\n    /** @param {string} name @param {FranchiseFileField} field */\r\n    onEvent(name, field) {\r\n        if (name === 'change') {\r\n            // this._data = utilService.replaceAt(this._data, field.offset.offset, field.unformattedValue);\r\n            // NOTE: At field time, we can only change the size of arrays of references.\r\n            // I'm not sure how to change the size of non-reference arrays, or if it's even possible.\r\n            if (this.arraySize !== null && this.arraySize !== undefined) {\r\n                const referenceData = field.referenceData;\r\n                // If the field is outside of the previous array size and was edited to a valid reference,\r\n                // then reset the array size\r\n                if (field.offset.index >= this.arraySize) {\r\n                    if (field.isReference) {\r\n                        if (referenceData.tableId !== 0 || referenceData.rowNumber !== 0) {\r\n                            this.arraySize = field.offset.index + 1;\r\n                        }\r\n                    }\r\n                }\r\n                // If the value was changed to 0s, then shrink the array size to field index.\r\n                else if (field.isReference) {\r\n                    if (referenceData.tableId === 0 && referenceData.rowNumber === 0) {\r\n                        this.arraySize = field.offset.index;\r\n                    }\r\n                }\r\n            }\r\n            this._parent.onEvent('change', this);\r\n        }\r\n    }\r\n    ;\r\n}\r\n;\r\nexport default FranchiseFileRecord;\r\n","/**\r\n * @typedef {Object} SettingsParam\r\n * @param {boolean?} [saveOnChange]\r\n * @param {SchemaMetadata?} [schemaOverride]\r\n * @param {string?} [schemaDirectory]\r\n * @param {boolean?} [autoParse]\r\n * @param {boolean?} [autoUnempty]\r\n*/\r\nclass FranchiseFileSettings {\r\n    /** @param {SettingsParam} settings */\r\n    constructor(settings) {\r\n        /** @type {boolean} */\r\n        this.saveOnChange = settings && settings.saveOnChange ? settings.saveOnChange : false;\r\n        /** @type {SchemaMetadata | false} */\r\n        this.schemaOverride = settings && settings.schemaOverride ? settings.schemaOverride : false;\r\n        /** @type {string | false} */\r\n        this.schemaDirectory = settings && settings.schemaDirectory ? settings.schemaDirectory : false;\r\n        /** @type {boolean} */\r\n        this.useNewSchemaGeneration = settings?.useNewSchemaGeneration ?? false;\r\n        /** @type {Object} */\r\n        this.schemaFileMap = settings?.schemaFileMap || {};\r\n        /** @type {Object[]} */\r\n        this.extraSchemas = settings?.extraSchemas || undefined;\r\n        /** @type {boolean} */\r\n        this.autoParse = settings && (settings.autoParse !== null && settings.autoParse !== undefined) ? settings.autoParse : true;\r\n        /** @type {boolean} */\r\n        this.autoUnempty = settings && (settings.autoUnempty !== null && settings.autoUnempty !== undefined) ? settings.autoUnempty : false;\r\n        /** @type {number} */\r\n        this.gameYearOverride = settings && (settings.gameYearOverride !== null && settings.gameYearOverride !== undefined) ? settings.gameYearOverride : null;\r\n    }\r\n}\r\n;\r\nexport default FranchiseFileSettings;\r\n","import events from \"events\";\r\nimport utilService from \"./services/utilService.js\";\r\nimport FranchiseFileRecord from \"./FranchiseFileRecord.js\";\r\nimport FranchiseFileTable2Field from \"./FranchiseFileTable2Field.js\";\r\nimport FranchiseFileTable3Field from \"./FranchiseFileTable3Field.js\";\r\nimport FranchiseFileSettings from \"./FranchiseFileSettings.js\";\r\nconst EventEmitter = events.EventEmitter;\r\n/**\r\n * @typedef {Object} FranchiseFileTableHeader\r\n * @param {string} name\r\n * @param {boolean} isArray\r\n * @param {number} tableId\r\n * @param {number} tablePad1\r\n * @param {number} uniqueId\r\n * @param {number} tableUnknown1\r\n * @param {number} tableUnknown2\r\n * @param {string} data1Id\r\n * @param {number} data1Type\r\n * @param {number} data1Unknown1\r\n * @param {number} data1Flag1\r\n * @param {number} data1Flag2\r\n * @param {number} data1Flag3\r\n * @param {number} data1Flag4\r\n * @param {number} tableStoreLength\r\n * @param {string} tableStoreName\r\n * @param {number} data1Offset\r\n * @param {string} data1TableId\r\n * @param {number} data1RecordCount\r\n * @param {number} data1Pad2\r\n * @param {number} table1Length\r\n * @param {number} table2Length\r\n * @param {number} data1Pad3\r\n * @param {number} data1Pad4\r\n * @param {number} headerSize\r\n * @param {number} headerOffset\r\n * @param {number} record1SizeOffset\r\n * @param {number} record1SizeLength\r\n * @param {number} record1Size\r\n * @param {number} offsetStart\r\n * @param {string} data2Id\r\n * @param {number} table1Length2\r\n * @param {number} tableTotalLength\r\n * @param {boolean} hasSecondTable\r\n * @param {number} table1StartIndex\r\n * @param {number} table2StartIndex\r\n * @param {number} recordWords\r\n * @param {number} recordCapacity\r\n * @param {number} numMembers\r\n * @param {number} nextRecordToUse\r\n * @param {boolean} hasThirdTable\r\n */\r\n/**\r\n * @typedef {Object} OffsetTableEntry\r\n * @param {number} index\r\n * @param {number} originalIndex\r\n * @param {string} name\r\n * @param {string} type\r\n * @param {boolean} isReference\r\n * @param {boolean} valueInSecondTable\r\n * @param {boolean} valueInThirdTable\r\n * @param {boolean} isSigned\r\n * @param {number} minValue\r\n * @param {number} maxValue\r\n * @param {number} maxLength\r\n * @param {boolean} final\r\n * @param {number} indexOffset\r\n * @param {FranchiseEnum} enum\r\n * @param {boolean} const\r\n * @param {number} offset\r\n */\r\n/**\r\n * @typedef EmptyRecordEntry\r\n * @param {number} previous\r\n * @param {number} next\r\n */\r\nclass FranchiseFileTable extends EventEmitter {\r\n    constructor(data, offset, gameYear, strategy, settings) {\r\n        super();\r\n        this.index = -1;\r\n        /** @type {Buffer} */\r\n        this.data = data;\r\n        /** @type {number} */\r\n        this.lengthAtLastSave = data.length;\r\n        /** @type {number} */\r\n        this.offset = offset;\r\n        /** @type {GameStrategy} */\r\n        this.strategyBase = strategy;\r\n        /** @type {TableStrategy} */\r\n        this.strategy = this.strategyBase.table;\r\n        this.recordsRead = false;\r\n        /** @type {number} */\r\n        this._gameYear = gameYear;\r\n        /** @type {FranchiseFileTableHeader} */\r\n        this.header = this.strategy.parseHeader(this.data);\r\n        /** @type {string} */\r\n        this.name = this.header.name;\r\n        /** @type {boolean} */\r\n        this.isArray = this.header.isArray;\r\n        /** @type {Array<OffsetTableEntry>} */\r\n        this.loadedOffsets = [];\r\n        this.isChanged = false;\r\n        /** @type {Array<FranchiseFileRecord>} */\r\n        this.records = [];\r\n        /** @type {Array<FranchiseFileTable2Field>} */\r\n        this.table2Records = [];\r\n        /** @type {Array<FranchiseFileTable3Field>} */\r\n        this.table3Records = [];\r\n        /** @type {Array<number>} */\r\n        this.arraySizes = [];\r\n        /** @type {Map<EmptyRecordEntry>} */\r\n        this.emptyRecords = new Map();\r\n        /** @type {FranchiseFileSettings} */\r\n        this._settings = settings;\r\n    }\r\n    ;\r\n    /** @returns {Buffer} */\r\n    get hexData() {\r\n        this.updateBuffer();\r\n        return this.data;\r\n    }\r\n    ;\r\n    /** @param {TableSchema} schema */\r\n    set schema(schema) {\r\n        if (schema?.attributes?.length !== this.header.numMembers) {\r\n            return;\r\n        }\r\n        /** @private @type {TableSchema} */\r\n        this._schema = schema;\r\n        const modifiedHeaderAttributes = this.strategy.parseHeaderAttributesFromSchema(schema, this.data, this.header);\r\n        this.header.headerSize = modifiedHeaderAttributes.headerSize;\r\n        this.header.record1Size = modifiedHeaderAttributes.record1Size;\r\n        this.header.table1StartIndex = modifiedHeaderAttributes.table1StartIndex;\r\n        this.header.table2StartIndex = modifiedHeaderAttributes.table2StartIndex;\r\n        this.recordsRead = false;\r\n        this.offsetTable = [];\r\n        this.loadedOffsets = [];\r\n        this.records = [];\r\n        this.table2Records = [];\r\n        this.table3Records = [];\r\n        this.emptyRecords = new Map();\r\n    }\r\n    ;\r\n    /** @type {TableSchema} */\r\n    get schema() {\r\n        return this._schema;\r\n    }\r\n    ;\r\n    _generateGenericSchema() {\r\n        let attributes = [];\r\n        for (let i = 0; i < this.header.numMembers; i++) {\r\n            attributes.push({\r\n                'name': `Field_${i}`,\r\n                'type': 'int',\r\n                'minValue': 1, // set to 1 to avoid a weird case with int[] see: FranchiseFileField _parseFieldValue(...) function.\r\n                'maxValue': 1\r\n            });\r\n        }\r\n        return { attributes };\r\n    }\r\n    ;\r\n    /** @param {number} index @returns {string} */\r\n    getBinaryReferenceToRecord(index) {\r\n        return utilService.getBinaryReferenceData(this.header.tableId, index);\r\n    }\r\n    ;\r\n    updateBuffer() {\r\n        // need to check table2 & table3 data first because it may change offsets of the legit records.\r\n        let table2Data = this.strategy.getTable2BinaryData(this.table2Records, this.data.slice(this.header.table2StartIndex));\r\n        let table3Data = [];\r\n        if (this.header.table3StartIndex) {\r\n            table3Data = this.strategy.getTable3BinaryData(this.table3Records, this.data.slice(this.header.table3StartIndex));\r\n        }\r\n        // update table2 length and table total length in table header (only if records have been read)\r\n        if (this.recordsRead) {\r\n            let table2DataLength = 0;\r\n            let table3DataLength = 0;\r\n            // Get length of all table2Data sub arrays\r\n            table2Data.forEach((arr) => {\r\n                table2DataLength += arr.length;\r\n            });\r\n            table3Data.forEach((arr) => {\r\n                table3DataLength += arr.length;\r\n            });\r\n            this.header.table2Length = table2DataLength;\r\n            this.header.tableTotalLength = this.header.table1Length + this.header.table2Length;\r\n            this.header.table3Length = table3DataLength;\r\n            this.data.writeUInt32BE(this.header.table2Length, this.header.offsetStart - 44);\r\n            this.data.writeUInt32BE(this.header.table3Length, this.header.offsetStart - 40);\r\n            this.data.writeUInt32BE(this.header.tableTotalLength, this.header.offsetStart - 24);\r\n        }\r\n        const changedRecords = this.records.filter((record) => {\r\n            return record.isChanged;\r\n        });\r\n        let currentOffset = 0;\r\n        let bufferArrays = [];\r\n        // Add all of the array sizes to the buffer if the table is an array and had a change\r\n        if (this.isArray && changedRecords.length > 0) {\r\n            // Push the header data\r\n            bufferArrays.push(this.data.slice(currentOffset, this.header.headerSize));\r\n            let arraySizeBuffer = Buffer.alloc(this.header.data1RecordCount * 4);\r\n            this.arraySizes.forEach((arraySize, index) => {\r\n                arraySizeBuffer.writeUInt32BE(arraySize, (index * 4));\r\n            });\r\n            bufferArrays.push(arraySizeBuffer);\r\n            currentOffset += this.header.headerSize + this.header.data1RecordCount * 4;\r\n        }\r\n        for (let i = 0; i < changedRecords.length; i++) {\r\n            let record = changedRecords[i];\r\n            record.isChanged = false;\r\n            const recordOffset = this.header.table1StartIndex + (record.index * this.header.record1Size);\r\n            bufferArrays.push(this.data.slice(currentOffset, recordOffset));\r\n            const recordHexData = record.hexData;\r\n            bufferArrays.push(recordHexData);\r\n            currentOffset = recordOffset + recordHexData.length;\r\n        }\r\n        bufferArrays.push(this.data.slice(currentOffset, this.header.table2StartIndex));\r\n        if (!this.recordsRead && this.header.hasSecondTable && table2Data.length === 0) {\r\n            table2Data = this.data.slice(this.header.table2StartIndex);\r\n        }\r\n        bufferArrays = bufferArrays.concat(table2Data);\r\n        if (!this.recordsRead && this.header.hasThirdTable && table3Data.length === 0) {\r\n            table3Data = this.data.slice(this.header.table3StartIndex);\r\n        }\r\n        bufferArrays = bufferArrays.concat(table3Data);\r\n        this.data = Buffer.concat(bufferArrays);\r\n    }\r\n    ;\r\n    /** @param {number} index @param {boolean} resetEmptyRecordMap */\r\n    setNextRecordToUse(index, resetEmptyRecordMap) {\r\n        this._setNextRecordToUseBuffer(index);\r\n        // Recalculate the empty record map if the option is set and the\r\n        // records have already been read.\r\n        if (resetEmptyRecordMap && this.recordsRead) {\r\n            this.updateBuffer();\r\n            this.emptyRecords = this._parseEmptyRecords();\r\n        }\r\n        this.emit('change');\r\n    }\r\n    ;\r\n    /** @param {number} index */\r\n    _setNextRecordToUseBuffer(index) {\r\n        // We need to update the table header to use this row next\r\n        this.header.nextRecordToUse = index;\r\n        // And finally update the buffer to reflect this change\r\n        this.data.writeUInt32BE(index, this.header.offsetStart - 4);\r\n    }\r\n    ;\r\n    recalculateEmptyRecordReferences() {\r\n        // For this method, we are not going to assume any existing empty records.\r\n        // We're going through each record and checking if it is an empty reference.\r\n        // If so, we'll add it to the list. At the end we will check if there are any unreachable empty references\r\n        // and update those accordingly.\r\n        let emptyRecordReferenceIndicies = [];\r\n        this.records.forEach((record) => {\r\n            let isEmptyReference = false;\r\n            const firstFourBytesReference = utilService.getReferenceDataFromBuffer(record.data.slice(0, 4));\r\n            if (firstFourBytesReference.tableId === 0 && firstFourBytesReference.rowNumber !== 0) {\r\n                // Could be a an empty record reference or a table2 field.\r\n                // Check for a table2 field reference.\r\n                const firstOffset = this.offsetTable[0];\r\n                if (firstOffset.type !== 'string') {\r\n                    isEmptyReference = true;\r\n                    // Save the row number that this record points to.\r\n                    emptyRecordReferenceIndicies.push(firstFourBytesReference.rowNumber);\r\n                }\r\n            }\r\n            record.isEmpty = isEmptyReference;\r\n        });\r\n        // We need to determine the starting node.\r\n        // To do that, we need to find the empty record which no other empty record points to.\r\n        const unreachableRecords = this.records.filter((record) => {\r\n            return record.isEmpty;\r\n        }).filter((record) => {\r\n            return emptyRecordReferenceIndicies.indexOf(record.index) === -1;\r\n        });\r\n        // If there are more than 1 nodes which are not referenced, there is an issue\r\n        if (unreachableRecords.length > 1) {\r\n            const unreachableIndicies = unreachableRecords.map((record) => {\r\n                return record.index;\r\n            });\r\n            console.warn(`(${this.header.tableId}) ${this.name} - More than one unreachable records found: ` +\r\n                `(${unreachableIndicies.join(', ')}). The game will most likely crash if you do not fix this problem. ` +\r\n                `The nextRecordToUse has NOT been updated.`);\r\n        }\r\n        else {\r\n            let nextRecordToUse = this.header.recordCapacity;\r\n            if (unreachableRecords.length === 1) {\r\n                nextRecordToUse = unreachableRecords[0].index;\r\n            }\r\n            this._setNextRecordToUseBuffer(nextRecordToUse);\r\n            this.emptyRecords = this._parseEmptyRecords();\r\n            this.emit('change');\r\n        }\r\n    }\r\n    ;\r\n    /** @param {Buffer} buf @param {boolean} shouldReadRecords @returns {Promise<FranchiseFileTable>?} */\r\n    async replaceRawData(buf, shouldReadRecords) {\r\n        this.data = buf;\r\n        // Reset fields\r\n        this.recordsRead = false;\r\n        this.header = this.strategy.parseHeader(this.data);\r\n        this.name = this.header.name;\r\n        this.isArray = this.header.isArray;\r\n        this.loadedOffsets = [];\r\n        this.isChanged = false;\r\n        this.records = [];\r\n        this.table2Records = [];\r\n        this.table3Records = [];\r\n        this.arraySizes = [];\r\n        this.emptyRecords = new Map();\r\n        this.emit('change');\r\n        // Re-read records if desired\r\n        if (shouldReadRecords) {\r\n            return this.readRecords();\r\n        }\r\n    }\r\n    ;\r\n    // attribsToLoad is an array of attribute names (strings) to load. It is optional - if nothing is provided to the function it will load all attributes.\r\n    /** @param {Array<string>?} [attribsToLoad] @returns {Promise<FranchiseFileTable>} */\r\n    readRecords(attribsToLoad) {\r\n        return new Promise((resolve, reject) => {\r\n            if (!this.recordsRead || isLoadingNewOffsets(this.loadedOffsets, attribsToLoad, this.offsetTable)) {\r\n                if (this.isArray) {\r\n                    const numberOfFields = this.header.record1Size / 4;\r\n                    let offsetTable = [];\r\n                    let arraySizes = [];\r\n                    for (let i = 0; i < numberOfFields; i++) {\r\n                        const offset = {\r\n                            'final': false,\r\n                            'index': i,\r\n                            'indexOffset': i * 32,\r\n                            'isSigned': false,\r\n                            'length': 32,\r\n                            'maxLength': null,\r\n                            'maxValue': null,\r\n                            'minValue': null,\r\n                            'name': `${this.name.substring(0, this.name.length - 2)}${i}`,\r\n                            'offset': i * 32,\r\n                            'type': this.name.substring(0, this.name.length - 2),\r\n                            'valueInSecondTable': false,\r\n                            'valueInThirdTable': false,\r\n                        };\r\n                        offset.isReference = !offset.enum && (offset.type[0] == offset.type[0].toUpperCase() || offset.type.includes('[]')) ? true : false;\r\n                        offsetTable.push(offset);\r\n                    }\r\n                    for (let i = 0; i < this.header.data1RecordCount; i++) {\r\n                        arraySizes.push(this.data.readUInt32BE(this.header.headerSize + (i * 4)));\r\n                    }\r\n                    this.offsetTable = offsetTable;\r\n                    this.arraySizes = arraySizes;\r\n                }\r\n                else {\r\n                    if (!this.schema) {\r\n                        console.warn('Schema doesn\\'t exist for this table. Generating generic schema from table header...');\r\n                        this.schema = this._generateGenericSchema();\r\n                    }\r\n                    this.offsetTable = readOffsetTable(this.data, this.schema, this.header);\r\n                }\r\n                let offsetTableToUse = this.offsetTable;\r\n                const mandatoryOffsetsToLoad = this.strategy.getMandatoryOffsets(this.offsetTable);\r\n                if (attribsToLoad) {\r\n                    // get any new attributes to load plus the existing loaded offsets\r\n                    offsetTableToUse = offsetTableToUse.filter((attrib) => {\r\n                        return mandatoryOffsetsToLoad.includes(attrib.name) ||\r\n                            attribsToLoad.includes(attrib.name) ||\r\n                            this.loadedOffsets.find((offset) => {\r\n                                return offset.name === attrib.name;\r\n                            });\r\n                    });\r\n                }\r\n                this.loadedOffsets = offsetTableToUse;\r\n                this.records = readRecords(this.data, this.header, offsetTableToUse, this);\r\n                if (this.header.hasSecondTable) {\r\n                    this._parseTable2Values(this.data, this.header, this.records);\r\n                }\r\n                if (this.header.hasThirdTable) {\r\n                    this._parseTable3Values(this.data, this.header, this.records);\r\n                }\r\n                this.emptyRecords = this._parseEmptyRecords();\r\n                this.records.forEach((record, index) => {\r\n                    if (this.isArray) {\r\n                        record.arraySize = this.arraySizes[index];\r\n                    }\r\n                    if (this.emptyRecords.get(index)) {\r\n                        record.isEmpty = true;\r\n                    }\r\n                });\r\n                this.recordsRead = true;\r\n                resolve(this);\r\n            }\r\n            else {\r\n                resolve(this);\r\n            }\r\n        });\r\n    }\r\n    ;\r\n    /** @returns {Map<EmptyRecordEntry>} */\r\n    _parseEmptyRecords() {\r\n        let emptyRecords = new Map();\r\n        const firstEmptyRecord = this.header.nextRecordToUse;\r\n        let previousEmptyRecordIndex = null;\r\n        let currentEmptyRecordIndex = firstEmptyRecord;\r\n        if (firstEmptyRecord !== this.header.recordCapacity) {\r\n            while (currentEmptyRecordIndex !== this.header.recordCapacity) {\r\n                // let nextEmptyRecordIndex = this.data.readUInt32BE(this.header.table1StartIndex + (currentEmptyRecordIndex * sizeOfEachRecord));\r\n                let nextEmptyRecordIndex = this.records[currentEmptyRecordIndex].data.readUInt32BE(0);\r\n                emptyRecords.set(currentEmptyRecordIndex, {\r\n                    previous: previousEmptyRecordIndex,\r\n                    next: nextEmptyRecordIndex\r\n                });\r\n                previousEmptyRecordIndex = currentEmptyRecordIndex;\r\n                currentEmptyRecordIndex = nextEmptyRecordIndex;\r\n            }\r\n        }\r\n        return emptyRecords;\r\n    }\r\n    ;\r\n    /** @param {FranchiseFileRecord} */\r\n    _onRecordEmpty(record) {\r\n        // First, check if the record is already empty. If so, don't do anything...\r\n        // If not empty, then we need to empty it.\r\n        if (!record.isEmpty) {\r\n            record.isChanged = true;\r\n            const lastEmptyRecordMapEntry = Array.from(this.emptyRecords).pop();\r\n            // When we empty a record, we need to check if another empty record exists in the table.\r\n            if (lastEmptyRecordMapEntry !== null && lastEmptyRecordMapEntry !== undefined) {\r\n                // If an empty record already exists, we just need to get the last empty record\r\n                // and update its index to point to the current record that we want to empty.\r\n                const lastEmptyRecordIndex = lastEmptyRecordMapEntry[0];\r\n                this.emptyRecords.set(lastEmptyRecordIndex, {\r\n                    previous: lastEmptyRecordMapEntry[1].previous,\r\n                    next: record.index\r\n                });\r\n                // Then we need to update the current record index to point to the record capacity.\r\n                this.emptyRecords.set(record.index, {\r\n                    previous: lastEmptyRecordIndex,\r\n                    next: this.header.recordCapacity\r\n                });\r\n                // Finally, we need to update the buffers to reflect this data.\r\n                // First, place the new referenced index (will be the first 4 bytes)\r\n                // Next, fill the rest of the record with 0s (the last bytes of the record)\r\n                // And update both record's data. This will set the unformatted and formatted values\r\n                // without emitting an event\r\n                this._changeRecordBuffers(lastEmptyRecordIndex, record.index);\r\n                this._changeRecordBuffers(record.index, this.header.recordCapacity);\r\n            }\r\n            else {\r\n                // In this case, the record that was emptied is the first empty record in the table\r\n                this.emptyRecords.set(record.index, {\r\n                    previous: null,\r\n                    next: this.header.recordCapacity\r\n                });\r\n                // Finally update the table header and buffer so that the game uses this new empty\r\n                // record as the next record to use (or fill)\r\n                this.setNextRecordToUse(record.index);\r\n                this._changeRecordBuffers(record.index, this.header.recordCapacity);\r\n            }\r\n            this.emit('change');\r\n        }\r\n    }\r\n    ;\r\n    /** @param {Buffer} data @param {FranchiseFileTableHeader} header @param {Array<FranchiseFileRecord>} records */\r\n    _parseTable2Values(data, header, records) {\r\n        const that = this;\r\n        const secondTableData = data.slice(header.table2StartIndex);\r\n        records.forEach((record) => {\r\n            const fieldsReferencingSecondTable = record.fieldsArray.filter((field) => {\r\n                return field.secondTableField;\r\n            });\r\n            fieldsReferencingSecondTable.forEach((field) => {\r\n                field.secondTableField.unformattedValue = that.strategyBase.table2Field.getInitialUnformattedValue(field, secondTableData);\r\n                field.secondTableField.strategy = that.strategyBase.table2Field;\r\n                that.table2Records.push(field.secondTableField);\r\n                field.secondTableField.parent = that;\r\n            });\r\n        });\r\n    }\r\n    ;\r\n    /** @param {Buffer} data @param {FranchiseFileTableHeader} header @param {Array<FranchiseFileRecord>} records */\r\n    _parseTable3Values(data, header, records) {\r\n        const that = this;\r\n        const thirdTableData = data.slice(header.table3StartIndex);\r\n        records.forEach((record) => {\r\n            const fieldsReferencingThirdTable = record.fieldsArray.filter((field) => {\r\n                return field.thirdTableField;\r\n            });\r\n            fieldsReferencingThirdTable.forEach((field) => {\r\n                field.thirdTableField.unformattedValue = that.strategyBase.table3Field.getInitialUnformattedValue(field, thirdTableData);\r\n                field.thirdTableField.strategy = that.strategyBase.table3Field;\r\n                that.table3Records.push(field.thirdTableField);\r\n                field.thirdTableField.parent = that;\r\n            });\r\n        });\r\n    }\r\n    ;\r\n    /** @param {number} index @param {number} emptyRecordReference */\r\n    _changeRecordBuffers(index, emptyRecordReference) {\r\n        this._setBufferToEmptyRecordReference(index, emptyRecordReference);\r\n        this._setRecordInternalBuffer(index, emptyRecordReference);\r\n    }\r\n    ;\r\n    /** @param {number} index @param {number} emptyRecordReference */\r\n    _setBufferToEmptyRecordReference(index, emptyRecordReference) {\r\n        const recordStartIndex = this.header.table1StartIndex + (index * this.header.record1Size);\r\n        this.data.writeUInt32BE(emptyRecordReference, recordStartIndex);\r\n        // that.data.fill(0, recordStartIndex + 4, recordStartIndex + that.header.record1Size);\r\n    }\r\n    ;\r\n    /** @param {number} index @param {number} emptyRecordReference */\r\n    _setRecordInternalBuffer(index, emptyRecordReference) {\r\n        // let newData = utilService.dec2bin(emptyRecordReference, 32);\r\n        // const recordSizeInBits = this.header.record1Size * 8;\r\n        // if (recordSizeInBits > 32) {\r\n        //   newData += this.records[index]._data.slice(32);\r\n        // }\r\n        // console.log(newData);\r\n        this.records[index]._data.writeUInt32BE(emptyRecordReference, 0);\r\n    }\r\n    ;\r\n    /** @param {string} name @param {*} object */\r\n    onEvent(name, object) {\r\n        if (object instanceof FranchiseFileRecord) {\r\n            if (name === 'change') {\r\n                object.isChanged = true;\r\n                if (this.isArray) {\r\n                    this.arraySizes[object.index] = object.arraySize;\r\n                }\r\n                // When a record changes, we need to check if it was previously empty\r\n                // If so, we need to consider the record as no longer empty\r\n                // So we need to adjust the empty records\r\n                // First, check if the record's length is greater than 4 bytes (32 bits)\r\n                // If less than 4 bytes, it can never become empty...probably. :)\r\n                if (this.header.record1Size >= 4) {\r\n                    // Ex: Empty record list looks like object: A -> B -> C\r\n                    // When B's value is changed, the records need updated to: A -> C\r\n                    const emptyRecordReference = this.emptyRecords.get(object.index);\r\n                    const changedRecordWasEmpty = emptyRecordReference !== null && emptyRecordReference !== undefined;\r\n                    // Automatically un-empty the row if the setting is enabled and the changed record was empty.\r\n                    if (changedRecordWasEmpty) {\r\n                        // Check if the record's first four bytes still have a reference to the 0th table.\r\n                        // If so, then the record is still considered empty.\r\n                        // We need to check the buffer because the first field is not always a reference.\r\n                        // const referenceData = utilService.getReferenceDataFromBuffer(object.data.slice(0, 4));\r\n                        // if (referenceData.tableId !== 0 || referenceData.rowNumber > this.header.recordCapacity) {\r\n                        // if the changed field isn't included in the first 32 bits, zero out the first 32 bits. \r\n                        // Otherwise, it's not necessary to zero out.\r\n                        const changedFieldsInFirst4Bytes = object.fieldsArray.filter((field) => {\r\n                            return field.isChanged && field.offset.indexOffset < 32;\r\n                        });\r\n                        if (this._settings.autoUnempty && changedFieldsInFirst4Bytes.length === 0) {\r\n                            // set first 4 bytes to 0\r\n                            this._changeRecordBuffers(object.index, 0);\r\n                            // invalidate the cached values since we set the buffer directly\r\n                            const fieldsInFirst4Bytes = object.fieldsArray.filter((field) => {\r\n                                return field.offset.indexOffset < 32;\r\n                            });\r\n                            fieldsInFirst4Bytes.forEach((field) => {\r\n                                field.clearCachedValues();\r\n                            });\r\n                        }\r\n                        // If autoUnempty is disabled, only un-empty the row if a field in the first 4 bytes changed.\r\n                        // If autoUnempty is enabled, un-empty the row if ANY field changed.\r\n                        if (this._settings.autoUnempty || changedFieldsInFirst4Bytes.length > 0) {\r\n                            // if the record contains any string values, point the string values to\r\n                            // their correct offsets\r\n                            this.strategy.recalculateStringOffsets(this, object);\r\n                            this.strategy.recalculateBlobOffsets(this, object);\r\n                            // Delete the empty record entry because it is no longer empty\r\n                            this.emptyRecords.delete(object.index);\r\n                            // Set the isEmpty back to false because it's no longer empty\r\n                            object.isEmpty = false;\r\n                            // Check if there is a previous empty record\r\n                            const previousEmptyReference = this.emptyRecords.get(emptyRecordReference.previous);\r\n                            if (previousEmptyReference) {\r\n                                // Set the previous empty record to point to the old reference's next node\r\n                                this.emptyRecords.set(emptyRecordReference.previous, {\r\n                                    previous: this.emptyRecords.get(emptyRecordReference.previous).previous,\r\n                                    next: emptyRecordReference.next\r\n                                });\r\n                                // change the table buffer and record buffer to reflect object change\r\n                                this._changeRecordBuffers(emptyRecordReference.previous, emptyRecordReference.next);\r\n                            }\r\n                            // If there is a next empty reference, update the previous value accordingly to now point\r\n                            // to the current record's previous index.\r\n                            const nextEmptyReference = this.emptyRecords.get(emptyRecordReference.next);\r\n                            if (nextEmptyReference) {\r\n                                this.emptyRecords.set(emptyRecordReference.next, {\r\n                                    previous: emptyRecordReference.previous,\r\n                                    next: this.emptyRecords.get(emptyRecordReference.next).next\r\n                                });\r\n                                if (!previousEmptyReference) {\r\n                                    // If no previous empty record exists and a next record exists, we need to update the header to\r\n                                    // point to object record as the next record to use.\r\n                                    this.setNextRecordToUse(emptyRecordReference.next);\r\n                                }\r\n                            }\r\n                            // If there are no previous or next empty references\r\n                            // Then there are no more empty references in the table\r\n                            // Update the table header nextRecordToUse back to the table record capacity\r\n                            if (!previousEmptyReference && !nextEmptyReference) {\r\n                                this.setNextRecordToUse(this.header.recordCapacity);\r\n                            }\r\n                        }\r\n                        // }\r\n                    }\r\n                }\r\n                this.emit('change');\r\n            }\r\n            else if (name === 'empty') {\r\n                this._onRecordEmpty(object);\r\n                this.emit('change');\r\n            }\r\n        }\r\n        else if (object instanceof FranchiseFileTable2Field || object instanceof FranchiseFileTable3Field) {\r\n            object.isChanged = true;\r\n            // When a table2 field changes, we need to check if the record is empty. If so, we need to mark it as not empty. \r\n            if (object.fieldReference) {\r\n                this.onEvent('change', object.fieldReference._parent);\r\n            }\r\n            else {\r\n                // Only emit change here if the field reference is empty.\r\n                // the onEvent call will emit a change in the above condition.\r\n                this.emit('change');\r\n            }\r\n        }\r\n    }\r\n    ;\r\n}\r\n;\r\nfunction readOffsetTable(data, schema, header) {\r\n    let currentIndex = header.offsetStart;\r\n    let offsetTable = parseOffsetTableFromData();\r\n    // console.log(offsetTable.sort((a,b) => { return a.indexOffset - b.indexOffset}))\r\n    sortOffsetTableByIndexOffset();\r\n    function isSkippedOffset(offset) {\r\n        return offset.final || offset.const || offset.type.indexOf('()') >= 0 || offset.type === 'ITransaction_Sleep';\r\n    }\r\n    ;\r\n    for (let i = 0; i < offsetTable.length; i++) {\r\n        let curOffset = offsetTable[i];\r\n        let nextOffset = offsetTable.length > i + 1 ? offsetTable[i + 1] : null;\r\n        if (nextOffset) {\r\n            let curIndex = i + 2;\r\n            while (nextOffset && isSkippedOffset(nextOffset)) {\r\n                nextOffset = offsetTable[curIndex];\r\n                curIndex += 1;\r\n            }\r\n            if (nextOffset) {\r\n                curOffset.length = nextOffset.indexOffset - curOffset.indexOffset;\r\n            }\r\n            else {\r\n                curOffset.length = (header.record1Size * 8) - curOffset.indexOffset;\r\n            }\r\n        }\r\n        else {\r\n            curOffset.length = (header.record1Size * 8) - curOffset.indexOffset;\r\n        }\r\n        if (curOffset.length > 32) {\r\n            curOffset.length = 32;\r\n        }\r\n    }\r\n    let currentOffsetIndex = 0;\r\n    let chunked32bit = [];\r\n    for (let i = 0; i < header.record1Size * 8; i += 32) {\r\n        let chunkedOffsets = [];\r\n        let offsetLength = i % 32;\r\n        do {\r\n            const currentOffset = offsetTable[currentOffsetIndex];\r\n            if (currentOffset) {\r\n                if (isSkippedOffset(currentOffset)) {\r\n                    currentOffsetIndex += 1;\r\n                    continue;\r\n                }\r\n                offsetLength += currentOffset.length;\r\n                chunkedOffsets.push(currentOffset);\r\n                currentOffsetIndex += 1;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        } while ((currentOffsetIndex < offsetTable.length) && offsetLength < 32);\r\n        chunked32bit.push(chunkedOffsets);\r\n    }\r\n    chunked32bit.forEach((offsetArray) => {\r\n        if (offsetArray.length > 0) {\r\n            let currentOffset = offsetArray[0].indexOffset;\r\n            offsetArray[offsetArray.length - 1].offset = currentOffset;\r\n            for (let i = offsetArray.length - 2; i >= 0; i--) {\r\n                let previousOffset = offsetArray[i + 1];\r\n                let offset = offsetArray[i];\r\n                offset.offset = previousOffset.offset + previousOffset.length;\r\n            }\r\n        }\r\n    });\r\n    offsetTable = offsetTable.filter((offset) => {\r\n        return !(isSkippedOffset(offset));\r\n    });\r\n    offsetTable.sort((a, b) => {\r\n        return a.offset - b.offset;\r\n    });\r\n    for (let i = 0; i < offsetTable.length; i++) {\r\n        schema.attributes[offsetTable[i].index].offsetIndex = i;\r\n    }\r\n    return offsetTable;\r\n    function sortOffsetTableByIndexOffset() {\r\n        offsetTable.sort((a, b) => {\r\n            return a.indexOffset - b.indexOffset;\r\n        });\r\n    }\r\n    ;\r\n    function parseOffsetTableFromData() {\r\n        let table = [];\r\n        let seenIndexOffsets = new Set();\r\n        schema.attributes.forEach((attribute, index) => {\r\n            const minValue = parseInt(attribute.minValue);\r\n            const maxValue = parseInt(attribute.maxValue);\r\n            const indexOffset = utilService.byteArrayToLong(data.slice(currentIndex, currentIndex + 4), true);\r\n            const isRepeatedIndexOffset = seenIndexOffsets.has(indexOffset);\r\n            const entry = {\r\n                'index': index,\r\n                'originalIndex': parseInt(attribute.index),\r\n                'name': attribute.name,\r\n                'type': (minValue < 0 || maxValue < 0) ? 's_' + attribute.type : attribute.type,\r\n                'isReference': !attribute.enum && (attribute.type[0] == attribute.type[0].toUpperCase() || attribute.type.includes('[]') || attribute.type === 'record') ? true : false,\r\n                'valueInSecondTable': header.hasSecondTable && attribute.type === 'string',\r\n                'valueInThirdTable': header.hasThirdTable && attribute.type === 'binaryblob',\r\n                'isSigned': minValue < 0 || maxValue < 0,\r\n                'minValue': minValue,\r\n                'maxValue': maxValue,\r\n                'maxLength': attribute.maxLength ? parseInt(attribute.maxLength) : null,\r\n                'final': attribute.final === 'true' || isRepeatedIndexOffset,\r\n                'indexOffset': indexOffset,\r\n                'enum': attribute.enum,\r\n                'const': attribute.const,\r\n            };\r\n            table.push(entry);\r\n            // determine if the offset should be skipped. For normal schemas, this is determined by final, const, or type.\r\n            // For generated schemas, an offset is skipped if the indexOffset has been seen before.\r\n            const isSkipped = isSkippedOffset(entry);\r\n            if (!isSkipped) {\r\n                seenIndexOffsets.add(indexOffset);\r\n            }\r\n            currentIndex += 4;\r\n        });\r\n        return table;\r\n    }\r\n    ;\r\n}\r\n;\r\nfunction readRecords(data, header, offsetTable, table) {\r\n    // const binaryData = utilService.getBitArray(data.slice(header.table1StartIndex, header.table2StartIndex));\r\n    let records = [];\r\n    if (data) {\r\n        let index = 0;\r\n        for (let i = header.table1StartIndex; i < header.table2StartIndex; i += header.record1Size) {\r\n            // const recordBinary = binaryData.slice(i, i + (header.record1Size * 8));\r\n            let record = new FranchiseFileRecord(data.slice(i, i + header.record1Size), index, offsetTable, table);\r\n            records.push(record);\r\n            index += 1;\r\n        }\r\n    }\r\n    return records;\r\n}\r\n;\r\nfunction isLoadingNewOffsets(currentlyLoaded, attribsToLoad, offsetTable) {\r\n    const names = currentlyLoaded.map((currentlyLoadedOffset) => {\r\n        return currentlyLoadedOffset.name;\r\n    });\r\n    if (attribsToLoad) {\r\n        let newAttribs = attribsToLoad.filter((attrib) => {\r\n            return !names.includes(attrib);\r\n        });\r\n        return newAttribs.length > 0;\r\n    }\r\n    else {\r\n        return currentlyLoaded.length !== offsetTable.length;\r\n    }\r\n}\r\n;\r\nexport default FranchiseFileTable;\r\n","let CommonAlgorithms = {};\r\nCommonAlgorithms.save = (units, oldData) => {\r\n    // first check if any records changed. If not, we can return immediately because nothing changed.\r\n    const changedUnits = units.find((unit) => {\r\n        return unit.isChanged;\r\n    });\r\n    if (!changedUnits) {\r\n        return oldData;\r\n    }\r\n    // if there are changed records, we need to loop through them all...kinda :)\r\n    let offsetDifference = 0;\r\n    let oldOffsetCounter = 0;\r\n    let bufferArrays = [];\r\n    // Ensure the units are sorted by index in the actual file. Otherwise, we may overwrite data\r\n    units.sort((a, b) => {\r\n        return a.index - b.index;\r\n    });\r\n    units.forEach((unit, index) => {\r\n        if (unit.offset === 0 && index > 0) {\r\n            // there are usually trailing records at the end of the table that reference\r\n            // the first offset. Take a look at the Player table for an example of this.\r\n            // There are a bunch of rows at the end where FirstName, LastName, etc...\r\n            // will all point to the very first record.\r\n            // We don't need to worry about these records at all, so just skip them.\r\n            return;\r\n        }\r\n        // Update the record's offset so that it's up to date with the changes.\r\n        // Remember, a record's length can change here...so we need to keep the\r\n        // offsets up to date.\r\n        unit.offset += offsetDifference;\r\n        if (unit.isChanged) {\r\n            // If a record has changed, we want to get all the unchanged data from before this record up until this record\r\n            // in the old data. Take a look at the test cases and add some console logs if you want to see what I mean by this.\r\n            // Basically, we are pushing all the unchanged data directly from the old data, and any new data is inserted in there as well.\r\n            const unchangedDataSinceLastChangedRecord = oldData.slice(oldOffsetCounter, unit.offset - offsetDifference);\r\n            const newHexData = unit.hexData;\r\n            bufferArrays.push(unchangedDataSinceLastChangedRecord, newHexData);\r\n            // Now we need to update our counts so that the above statements work for the rest of the loop.\r\n            oldOffsetCounter = (unit.offset - offsetDifference) + unit.lengthAtLastSave;\r\n            offsetDifference += (newHexData.length - unit.lengthAtLastSave);\r\n            // We update the length at last save so that this algorithm works the next time it's called.\r\n            unit.lengthAtLastSave = newHexData.length;\r\n            unit.isChanged = false;\r\n        }\r\n    });\r\n    // Next, we need to push the remainder of data onto the array.\r\n    // For example, think if a user changed the 3rd record out of 100.\r\n    // In the loop, we would push the first 2 records as the unchangedDataSinceLastChangedRecord (since they didn't change!)\r\n    // We would also push the changed 3rd record (newHexData)\r\n    // Now we need to push records 4 to 100. These did not get added in the loop because they didn't change.\r\n    // We'll push them here.\r\n    // console.log(oldOffsetCounter);\r\n    bufferArrays.push(oldData.slice(oldOffsetCounter));\r\n    // Finally, concat all of the arrays into one buffer to return it.\r\n    // Why do all of this BS? Well, concat is an 'expensive' operation. \r\n    // It's not very efficient and takes a long time comparatively to other methods.\r\n    // So, instead of concat-ing each change record, we will only do it one time here at the end.\r\n    // We also want to reduce the number of items in the bufferArrays as much as possible to save on time.\r\n    // That's why we use the unchangedDataSinceLastChangedRecord to combine a bunch of records that weren't changed together.\r\n    return Buffer.concat(bufferArrays);\r\n};\r\nexport default CommonAlgorithms;\r\n","import CommonAlgorithms from '../CommonAlgorithms.js';\r\nlet CommonFileStrategy = {};\r\nCommonFileStrategy.generateUnpackedContents = CommonAlgorithms.save;\r\nexport default CommonFileStrategy;\r\n","import CommonFileStrategy from './CommonFileStrategy.js';\r\nconst COMPRESSED_DATA_OFFSET = 0x52;\r\nlet FranchiseFileStrategy = {};\r\nFranchiseFileStrategy.generateUnpackedContents = CommonFileStrategy.generateUnpackedContents;\r\nFranchiseFileStrategy.postPackFile = (originalData, newData) => {\r\n    const header = originalData.slice(0, COMPRESSED_DATA_OFFSET);\r\n    const endOfData = (newData.length).toString(16);\r\n    header[0x4A] = parseInt(endOfData.substr(4), 16);\r\n    header[0x4B] = parseInt(endOfData.substr(2, 2), 16);\r\n    header[0x4C] = parseInt(endOfData.substr(0, 2), 16);\r\n    const trailer = originalData.slice(newData.length + COMPRESSED_DATA_OFFSET);\r\n    return Buffer.concat([header, newData, trailer]);\r\n};\r\nexport default FranchiseFileStrategy;\r\n","import FranchiseFileStrategy from \"../../common/file/FranchiseFileStrategy.js\";\r\n/**\r\n * @type {FileStrategy}\r\n */\r\nlet M19FileStrategy = {};\r\nM19FileStrategy.postPackFile = FranchiseFileStrategy.postPackFile;\r\nM19FileStrategy.generateUnpackedContents = FranchiseFileStrategy.generateUnpackedContents;\r\nexport default M19FileStrategy;\r\n","let FranchiseTableStrategy = {};\r\nFranchiseTableStrategy.getTable2BinaryData = (table2Records, fullTable2Buffer) => {\r\n    let table2Data = [];\r\n    // Make sure to sort the table2 records by index\r\n    const changedTable2Records = table2Records.filter((record) => { return record.isChanged; }).sort((a, b) => { return a.index - b.index; });\r\n    let currentOffset = 0;\r\n    for (let i = 0; i < changedTable2Records.length; i++) {\r\n        let record = changedTable2Records[i];\r\n        record.isChanged = false;\r\n        const recordOffset = record.index;\r\n        if (i > 0 && recordOffset === 0) {\r\n            // this case is true for the last few rows with no data in them. They reference the first table2 value.\r\n            continue;\r\n        }\r\n        const preData = fullTable2Buffer.slice(currentOffset, recordOffset);\r\n        if (preData.length > 0) {\r\n            table2Data.push(preData);\r\n        }\r\n        const recordHexData = record.hexData;\r\n        table2Data.push(recordHexData);\r\n        currentOffset = recordOffset + recordHexData.length;\r\n    }\r\n    if (table2Records.length > 0) {\r\n        table2Data.push(fullTable2Buffer.slice(currentOffset));\r\n    }\r\n    return table2Data;\r\n};\r\nFranchiseTableStrategy.getMandatoryOffsets = (offsets) => {\r\n    return [];\r\n};\r\nFranchiseTableStrategy.recalculateStringOffsets = (table, record) => {\r\n    // First, calculate length allocated per record in table2\r\n    const byteLengthPerRecord = table.offsetTable.filter((offsetEntry) => {\r\n        return offsetEntry.type === 'string';\r\n    }).reduce((accum, cur) => {\r\n        return accum + cur.maxLength;\r\n    }, 0);\r\n    // Then, go through each string field sorted by offset index, and assign offsets to the table2 fields\r\n    let runningOffset = 0;\r\n    record.fieldsArray.filter((field) => {\r\n        return field.offset.type === 'string';\r\n    }).sort((a, b) => {\r\n        return a.offset.index - b.offset.index;\r\n    }).forEach((field) => {\r\n        if (field.secondTableField) {\r\n            field.secondTableField.offset = (record.index * byteLengthPerRecord) + runningOffset;\r\n        }\r\n        runningOffset += field.offset.maxLength;\r\n    });\r\n};\r\nFranchiseTableStrategy.recalculateBlobOffsets = (table, record) => {\r\n    // First, calculate length allocated per record in table2\r\n    const byteLengthPerRecord = table.offsetTable.filter((offsetEntry) => {\r\n        return offsetEntry.type === 'binaryblob';\r\n    }).reduce((accum, cur) => {\r\n        return accum + cur.maxLength + 2; // +2 bytes for size, which is not considered in max length.\r\n    }, 0);\r\n    // Then, go through each string field sorted by offset index, and assign offsets to the table2 fields\r\n    let runningOffset = 0;\r\n    record.fieldsArray.filter((field) => {\r\n        return field.offset.type === 'binaryblob';\r\n    }).sort((a, b) => {\r\n        return a.offset.index - b.offset.index;\r\n    }).forEach((field) => {\r\n        if (field.thirdTableField) {\r\n            field.thirdTableField.offset = (record.index * byteLengthPerRecord) + runningOffset;\r\n        }\r\n        runningOffset += field.offset.maxLength;\r\n    });\r\n};\r\nexport default FranchiseTableStrategy;\r\n","import utilService from \"../../../../services/utilService.js\";\r\nlet M19TableHeaderStrategy = {};\r\nM19TableHeaderStrategy.parseHeader = (data) => {\r\n    const headerStart = 0x80;\r\n    const tableName = readTableName(data);\r\n    const isArray = tableName.indexOf('[]') >= 0;\r\n    const tableId = data.readUInt32BE(headerStart);\r\n    const tablePad1 = data.readUInt32BE(headerStart + 4);\r\n    const tableUnknown1 = data.readUInt32BE(headerStart + 8);\r\n    const tableUnknown2 = data.readUInt32BE(headerStart + 12);\r\n    const data1Id = readTableName(data.slice(headerStart + 16, headerStart + 20));\r\n    const data1Type = data.readUInt32BE(headerStart + 20);\r\n    const data1Unknown1 = data.readUInt32BE(headerStart + 24);\r\n    const data1Flag1 = data[headerStart + 28];\r\n    const data1Flag2 = data[headerStart + 29];\r\n    const data1Flag3 = data[headerStart + 30];\r\n    const data1Flag4 = data[headerStart + 31];\r\n    const tableStoreLength = data.readUInt32BE(headerStart + 32);\r\n    let headerOffset = headerStart + 36;\r\n    let records1SizeOffset = 1689;\r\n    let tableStoreName = null;\r\n    if (tableStoreLength > 0) {\r\n        headerOffset += tableStoreLength;\r\n        records1SizeOffset += tableStoreLength * 8;\r\n        tableStoreName = readTableName(data.slice(headerStart + 36, headerStart + 36 + tableStoreLength));\r\n    }\r\n    const data1Offset = data.readUInt32BE(headerOffset);\r\n    const data1TableId = data.readUInt32BE(headerOffset + 4);\r\n    const data1RecordCount = data.readUInt32BE(headerOffset + 8);\r\n    const data1Pad2 = data.readUInt32BE(headerOffset + 12);\r\n    const table1Length = data.readUInt32BE(headerOffset + 16);\r\n    const table2Length = data.readUInt32BE(headerOffset + 20);\r\n    const data1Pad3 = data.readUInt32BE(headerOffset + 24);\r\n    const data1Pad4 = data.readUInt32BE(headerOffset + 28);\r\n    const data2Id = readTableName(data.slice(headerOffset + 32, headerOffset + 36));\r\n    const table1Length2 = data.readUInt32BE(headerOffset + 36);\r\n    const tableTotalLength = data.readUInt32BE(headerOffset + 40);\r\n    const data2RecordWords = data.readUInt32BE(headerOffset + 44);\r\n    const data2RecordCapacity = data.readUInt32BE(headerOffset + 48);\r\n    const data2IndexEntries = data.readUInt32BE(headerOffset + 52);\r\n    const unknown4 = data.readUInt32BE(headerOffset + 56);\r\n    const nextRecordToUse = data.readUInt32BE(headerOffset + 60);\r\n    let offsetStart = 0xE4 + tableStoreLength;\r\n    const hasSecondTable = tableTotalLength > table1Length;\r\n    let headerSize = 0;\r\n    let records1Size = 0;\r\n    if (isArray) {\r\n        headerSize = 0xE4 + tableStoreLength;\r\n        // const binaryData = utilService.getBitArray(data.slice(0, headerSize));\r\n        records1Size = data2RecordWords * 4;\r\n    }\r\n    return {\r\n        'name': tableName,\r\n        'isArray': isArray,\r\n        'tableId': tableId,\r\n        'tablePad1': tablePad1,\r\n        'uniqueId': tablePad1,\r\n        'tableUnknown1': tableUnknown1,\r\n        'tableUnknown2': tableUnknown2,\r\n        'data1Id': data1Id,\r\n        'data1Type': data1Type,\r\n        'data1Unknown1': data1Unknown1,\r\n        'data1Flag1': data1Flag1,\r\n        'data1Flag2': data1Flag2,\r\n        'data1Flag3': data1Flag3,\r\n        'data1Flag4': data1Flag4,\r\n        'tableStoreLength': tableStoreLength,\r\n        'tableStoreName': tableStoreName,\r\n        'data1Offset': data1Offset,\r\n        'data1TableId': data1TableId,\r\n        'data1RecordCount': data1RecordCount,\r\n        'data1Pad2': data1Pad2,\r\n        'table1Length': table1Length,\r\n        'table2Length': table2Length,\r\n        'data1Pad3': data1Pad3,\r\n        'data1Pad4': data1Pad4,\r\n        'headerSize': headerSize,\r\n        'headerOffset': 0xE4,\r\n        'record1SizeOffset': records1SizeOffset,\r\n        'record1SizeLength': 9,\r\n        'record1Size': records1Size,\r\n        'offsetStart': offsetStart,\r\n        'data2Id': data2Id,\r\n        'table1Length2': table1Length2,\r\n        'tableTotalLength': tableTotalLength,\r\n        'hasSecondTable': hasSecondTable,\r\n        'table1StartIndex': tableStoreLength === 0 && !isArray ? headerSize : headerSize + (data1RecordCount * 4),\r\n        'table2StartIndex': tableStoreLength === 0 && !isArray ? headerSize + (data1RecordCount * records1Size) : headerSize + (data1RecordCount * 4) + (data1RecordCount * records1Size),\r\n        'recordWords': data2RecordWords,\r\n        'recordCapacity': data2RecordCapacity,\r\n        'numMembers': data2IndexEntries,\r\n        'nextRecordToUse': nextRecordToUse,\r\n        'hasThirdTable': false\r\n    };\r\n};\r\nM19TableHeaderStrategy.parseHeaderAttributesFromSchema = (schema, data, header) => {\r\n    if (header.isArray) {\r\n        return {\r\n            'headerSize': header.headerSize,\r\n            'record1Size': header.record1Size,\r\n            'table1StartIndex': header.table1StartIndex,\r\n            'table2StartIndex': header.table2StartIndex\r\n        };\r\n    }\r\n    else {\r\n        let headerSize = header.headerOffset + (schema.numMembers * 4) + header.tableStoreLength;\r\n        const binaryData = utilService.getBitArray(data.slice(0, headerSize));\r\n        let records1Size = utilService.bin2dec(binaryData.slice(header.record1SizeOffset, header.record1SizeOffset + header.record1SizeLength));\r\n        return {\r\n            'headerSize': headerSize,\r\n            'record1Size': records1Size,\r\n            'table1StartIndex': headerSize,\r\n            'table2StartIndex': headerSize + (header.data1RecordCount * records1Size)\r\n        };\r\n    }\r\n};\r\nfunction readTableName(data) {\r\n    let name = '';\r\n    let i = 0;\r\n    do {\r\n        name += String.fromCharCode(data[i]);\r\n        i += 1;\r\n    } while (i < data.length && data[i] !== 0);\r\n    return name;\r\n}\r\n;\r\nexport default M19TableHeaderStrategy;\r\n","import FranchiseTableStrategy from \"../../common/table/FranchiseTableStrategy.js\";\r\nimport M19TableHeaderStrategy from \"../../common/header/m19/M19TableHeaderStrategy.js\";\r\n/**\r\n * @type {TableStrategy}\r\n */\r\nlet M19TableStrategy = {};\r\nM19TableStrategy.parseHeader = M19TableHeaderStrategy.parseHeader;\r\nM19TableStrategy.parseHeaderAttributesFromSchema = M19TableHeaderStrategy.parseHeaderAttributesFromSchema;\r\nM19TableStrategy.getTable2BinaryData = FranchiseTableStrategy.getTable2BinaryData;\r\nM19TableStrategy.getTable3BinaryData = FranchiseTableStrategy.getTable2BinaryData;\r\nM19TableStrategy.getMandatoryOffsets = FranchiseTableStrategy.getMandatoryOffsets;\r\nM19TableStrategy.recalculateStringOffsets = FranchiseTableStrategy.recalculateStringOffsets;\r\nM19TableStrategy.recalculateBlobOffsets = FranchiseTableStrategy.recalculateBlobOffsets;\r\nexport default M19TableStrategy;\r\n","let FranchiseTable2FieldStrategy = {};\r\nFranchiseTable2FieldStrategy.getInitialUnformattedValue = (field, data) => {\r\n    return data.slice(field.secondTableField.index, (field.secondTableField.index + field.offset.maxLength));\r\n};\r\nFranchiseTable2FieldStrategy.setUnformattedValueFromFormatted = (formattedValue, maxLength) => {\r\n    let valuePadded = formattedValue;\r\n    if (valuePadded.length > maxLength) {\r\n        valuePadded = valuePadded.substring(0, maxLength);\r\n    }\r\n    const numberOfNullCharactersToAdd = maxLength - formattedValue.length;\r\n    for (let i = 0; i < numberOfNullCharactersToAdd; i++) {\r\n        valuePadded += String.fromCharCode(0);\r\n    }\r\n    return Buffer.from(valuePadded);\r\n};\r\nexport default FranchiseTable2FieldStrategy;\r\n","import FranchiseTable2FieldStrategy from \"../../common/table2Field/FranchiseTable2FieldStrategy.js\";\r\n/**\r\n * @type {Table2FieldStrategy}\r\n */\r\nlet M19Table2Strategy = {};\r\nM19Table2Strategy.getInitialUnformattedValue = FranchiseTable2FieldStrategy.getInitialUnformattedValue;\r\nM19Table2Strategy.setUnformattedValueFromFormatted = FranchiseTable2FieldStrategy.setUnformattedValueFromFormatted;\r\nexport default M19Table2Strategy;\r\n","import { BitView } from 'bit-buffer';\r\nimport fs from 'fs';\r\nimport path, { dirname } from 'path';\r\nimport { fileURLToPath } from 'url';\r\n\r\nconst __filename = fileURLToPath(import.meta.url);\r\nconst __dirname = dirname(__filename);\r\n\r\nconst slotsLookup = JSON.parse(fs.readFileSync(path.join(__dirname, '../../data/lookup-files/slotsLookup.json'), 'utf8'));\r\nconst fieldLookup = JSON.parse(fs.readFileSync(path.join(__dirname, '../../data/lookup-files/fieldLookup.json'), 'utf8'));\r\nconst enumLookup = JSON.parse(fs.readFileSync(path.join(__dirname, '../../data/lookup-files/enumLookup.json'), 'utf8'));\r\n\r\n// Field type constants\r\nconst FIELD_TYPE_INT = 0;\r\nconst FIELD_TYPE_STRING = 1;\r\nconst FIELD_TYPE_ARRAY = 4;\r\nconst FIELD_TYPE_FLOAT = 10;\r\n\r\nlet parser;\r\nlet offset = 0;\r\n\r\nfunction readBytes(length) {\r\n    const bytes = parser.subarray(offset, offset + length);\r\n    offset += length;\r\n    return bytes;\r\n}\r\n\r\nfunction readByte() {\r\n    return readBytes(1);\r\n}\r\n\r\nfunction decrementOffset(length = 1) {\r\n    offset -= length;\r\n}\r\n\r\nfunction readChviArray(arrayLength)\r\n{\r\n    let array = [];\r\n\r\n    for(let i = 0; i < arrayLength; i++)\r\n    {\r\n        let recordObject = {};\r\n        let previousByte = -1;\r\n\r\n        do\r\n        {\r\n            if(previousByte !== -1)\r\n            {\r\n                decrementOffset();\r\n            }\r\n            let fieldKey = getUncompressedTextFromSixBitCompression(readBytes(3));\r\n            let fieldName = findFieldByFieldKey(fieldKey);\r\n\r\n            let fieldType = readByte().readUInt8(0);\r\n\r\n            switch(fieldType)\r\n            {\r\n                case FIELD_TYPE_INT:\r\n                    let intValue = readModifiedLebEncodedNumber();\r\n\r\n                    if(!fieldName)\r\n                    {\r\n                        break;\r\n                    }\r\n\r\n                    // Check for special cases that require lookups (enums)\r\n                    if(fieldName === \"slotType\")\r\n                    {\r\n                        intValue = slotsLookup[intValue];\r\n                    }\r\n                    else if(fieldName === \"loadoutType\" || fieldName === \"loadoutCategory\")\r\n                    {\r\n                        intValue = findEnumValByNum(enumLookup[fieldName], intValue);\r\n                    }\r\n\r\n                    recordObject[fieldName] = intValue;\r\n                    break;\r\n                case FIELD_TYPE_STRING:\r\n                    let stringLength = readModifiedLebEncodedNumber();\r\n                    let stringValue = readBytes(stringLength);\r\n                    // Remove null terminator from string\r\n                    stringValue = stringValue.slice(0, -1).toString('utf8');\r\n\r\n                    if(!fieldName)\r\n                    {\r\n                        break;\r\n                    }\r\n\r\n                    recordObject[fieldName] = stringValue;\r\n                    break;\r\n                case FIELD_TYPE_FLOAT:\r\n                    let floatValue = readBytes(4).readFloatBE(0);\r\n\r\n                    if(!fieldName)\r\n                    {\r\n                        break;\r\n                    }\r\n\r\n                    recordObject[fieldName] = floatValue;\r\n                    break;\r\n                case FIELD_TYPE_ARRAY:\r\n                    readByte(); // Unknown byte\r\n                    let arrayLength = readModifiedLebEncodedNumber();\r\n\r\n                    // Hacky way of handling empty arrays (they still have a recordcount of 1 for some reason)\r\n                    if(parser[offset] === 0x00)\r\n                    {\r\n                        recordObject[fieldName] = [];\r\n                        readByte();\r\n                        break;\r\n                    }\r\n                    let arrayObject = readChviArray(arrayLength);\r\n                    \r\n                    if(!fieldName)\r\n                    {\r\n                        break;\r\n                    }\r\n\r\n                    recordObject[fieldName] = arrayObject;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n\r\n            previousByte = readByte().readUInt8(0);\r\n        }\r\n        while(previousByte !== 0x00);\r\n\r\n        array.push(recordObject);\r\n    }\r\n\r\n    return array;\r\n}\r\n\r\nfunction findFieldByFieldKey(fieldKey)\r\n{\r\n    const fields = Object.keys(fieldLookup);\r\n\r\n    for(const field of fields)\r\n    {\r\n        if(fieldLookup[field].key === fieldKey)\r\n        {\r\n            return field;\r\n        }\r\n    }\r\n}\r\n\r\nfunction findEnumValByNum(object, enumNum)\r\n{\r\n    const fields = Object.keys(object);\r\n\r\n    for(const field of fields)\r\n    {\r\n        if(object[field] === enumNum)\r\n        {\r\n            return field;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// Function to read a CHVI record\r\nexport function readChviRecord(dataBuf)\r\n{\r\n    parser = dataBuf;\r\n    offset = 0;\r\n\r\n    let recordObject = {};\r\n\r\n    while(offset < parser.length)\r\n    {\r\n        let fieldBytes = readBytes(3);\r\n        let fieldKey = getUncompressedTextFromSixBitCompression(fieldBytes);\r\n\r\n        let fieldName = findFieldByFieldKey(fieldKey);\r\n        let fieldType = readByte().readUInt8(0);\r\n\r\n        if(fieldType === 0x03)\r\n        {\r\n            readByte();\r\n            continue;\r\n        }\r\n        switch(fieldType)\r\n        {\r\n            case FIELD_TYPE_INT:\r\n                let intValue = readModifiedLebEncodedNumber();\r\n\r\n                if(!fieldName)\r\n                {\r\n                    break;\r\n                }\r\n\r\n                // Check for special cases that require lookups\r\n                if(fieldName === \"slotType\")\r\n                {\r\n                    intValue = slotsLookup[intValue];\r\n                }\r\n                else if(fieldName === \"loadoutType\" || fieldName === \"loadoutCategory\")\r\n                {\r\n                    intValue = enumLookup[fieldName][intValue];\r\n                }\r\n\r\n                recordObject[fieldName] = intValue;\r\n                break;\r\n            case FIELD_TYPE_STRING:\r\n                let stringLength = readModifiedLebEncodedNumber();\r\n                let stringValue = readBytes(stringLength);\r\n                // Remove null terminator from string\r\n                stringValue = stringValue.slice(0, -1).toString('utf8');\r\n\r\n                if(!fieldName)\r\n                {\r\n                    break;\r\n                }\r\n\r\n                recordObject[fieldName] = stringValue;\r\n                break;\r\n            case FIELD_TYPE_FLOAT:\r\n                let floatValue = readBytes(4).readFloatBE(0);\r\n\r\n                if(!fieldName)\r\n                {\r\n                    break;\r\n                }\r\n\r\n                recordObject[fieldName] = floatValue;\r\n                break;\r\n            case FIELD_TYPE_ARRAY:\r\n                readByte();\r\n                let arrayLength = readModifiedLebEncodedNumber();\r\n                let arrayObject = readChviArray(arrayLength);\r\n                \r\n                if(!fieldName)\r\n                {\r\n                    break;\r\n                }\r\n\r\n                if(readByte().readUInt8(0) !== 0x00)\r\n                {\r\n                    decrementOffset();\r\n                }\r\n\r\n                recordObject[fieldName] = arrayObject;\r\n            default:\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n    return recordObject;\r\n}\r\n\r\nfunction getUncompressedTextFromSixBitCompression(data) \r\n{\r\n    const bv = new BitView(data, data.byteOffset);\r\n    bv.bigEndian = true;\r\n    const numCharacters = (data.length * 8) / 6;\r\n    \r\n    let text = '';\r\n\r\n    for (let i = 0; i < numCharacters; i++) \r\n    {\r\n        text += String.fromCharCode(getCharCode(i * 6));\r\n    }\r\n\r\n    return text;\r\n\r\n    function getCharCode(offset) \r\n    {\r\n        return bv.getBits(offset, 6) + 32;\r\n    }\r\n}\r\n\r\nfunction readModifiedLebEncodedNumber()\r\n{\r\n    let byteArray = [];\r\n    let currentByte;\r\n\r\n    do\r\n    {\r\n        currentByte = readByte().readUInt8(0);\r\n        byteArray.push(currentByte);\r\n    }\r\n    while((currentByte & 0x80));\r\n    \r\n    let value = 0;\r\n    let isNegative = false;\r\n\r\n    const buf = Buffer.from(byteArray);\r\n\r\n    for (let i = (buf.length - 1); i >= 0; i--) {\r\n        let currentByte = buf.readUInt8(i);\r\n\r\n        if (i !== (buf.length - 1)) {\r\n        currentByte = currentByte ^ 0x80;\r\n        }\r\n\r\n        if (i === 0 && (currentByte & 0x40) === 0x40) {\r\n        currentByte = currentByte ^ 0x40;\r\n        isNegative = true;\r\n        }\r\n\r\n        let multiplicationFactor = 1 << (i * 6);\r\n\r\n        if (i > 1) {\r\n        multiplicationFactor = multiplicationFactor << 1;\r\n        }\r\n\r\n        value += currentByte * multiplicationFactor;\r\n\r\n        if (isNegative) {\r\n        value *= -1;\r\n        }\r\n    }\r\n\r\n    return value;\r\n}","import zlib from \"zlib\";\r\nimport { readChviRecord } from \"../../../services/TDB2Converter.js\";\r\n\r\nlet FranchiseTable3FieldStrategy = {};\r\nFranchiseTable3FieldStrategy.getZlibDataStartIndex = (unformattedValue) => {\r\n    return unformattedValue.indexOf(Buffer.from([0x1F, 0x8B]));\r\n};\r\nFranchiseTable3FieldStrategy.getInitialUnformattedValue = (field, data) => {\r\n    return data.slice(field.thirdTableField.index, (field.thirdTableField.index + field.offset.maxLength + 2));\r\n    // extend maxLength + 2 because the first 2 bytes are the size of the zipped data\r\n};\r\nFranchiseTable3FieldStrategy.getFormattedValueFromUnformatted = (unformattedValue) => {\r\n    const zlibDataStartIndex = FranchiseTable3FieldStrategy.getZlibDataStartIndex(unformattedValue);\r\n    // first few bytes are the size of the zipped data & other flags, so skip those.\r\n    const decompressedData = zlib.gunzipSync(unformattedValue.subarray(zlibDataStartIndex));\r\n    // If the size is followed by 0x7 before the gzip-compressed data, the decompressed data is in TDB2 format, so use the TDB2 converter\r\n    if (unformattedValue[2] === 0x7) {\r\n        const jsonData = readChviRecord(decompressedData);\r\n        return JSON.stringify(jsonData);\r\n    }\r\n    // Otherwise, it's a standard JSON, so just convert the buffer to a string\r\n    return decompressedData.toString();\r\n};\r\nFranchiseTable3FieldStrategy.setUnformattedValueFromFormatted = (formattedValue, oldUnformattedValue, maxLength) => {\r\n    let zippedData = zlib.gzipSync(formattedValue);\r\n    let padding = Buffer.alloc(maxLength - zippedData.length); // table3s all have the same length and are zero padded to the end.\r\n    let sizeBuf = Buffer.alloc(2);\r\n    sizeBuf.writeUInt16LE(zippedData.length);\r\n    return Buffer.concat([sizeBuf, zippedData, padding]);\r\n};\r\nexport default FranchiseTable3FieldStrategy;\r\n","import FranchiseTable3FieldStrategy from \"../../common/table3Field/FranchiseTable3FieldStrategy.js\";\r\n/**\r\n * @type {Table3FieldStrategy}\r\n */\r\nlet M24Table3Strategy = {};\r\nM24Table3Strategy.getInitialUnformattedValue = FranchiseTable3FieldStrategy.getInitialUnformattedValue;\r\nM24Table3Strategy.getFormattedValueFromUnformatted = FranchiseTable3FieldStrategy.getFormattedValueFromUnformatted;\r\nM24Table3Strategy.setUnformattedValueFromFormatted = FranchiseTable3FieldStrategy.setUnformattedValueFromFormatted;\r\nexport default M24Table3Strategy;\r\n","import M19FileStrategy from \"./M19FileStrategy.js\";\r\nimport M19TableStrategy from \"./M19TableStrategy.js\";\r\nimport M19Table2FieldStrategy from \"./M19Table2FieldStrategy.js\";\r\nimport M24Table3Strategy from \"../m24/M24Table3FieldStrategy.js\";\r\nexport const name = 'M19Strategy';\r\nexport { M19FileStrategy as file };\r\nexport { M19TableStrategy as table };\r\nexport { M19Table2FieldStrategy as table2Field };\r\nexport { M24Table3Strategy as table3Field };\r\nexport default {\r\n    name,\r\n    file: M19FileStrategy,\r\n    table: M19TableStrategy,\r\n    table2Field: M19Table2FieldStrategy,\r\n    table3Field: M24Table3Strategy\r\n};\r\n","import FranchiseFileStrategy from \"../../common/file/FranchiseFileStrategy.js\";\r\n/**\r\n * @type {FileStrategy}\r\n */\r\nlet M20FileStrategy = {};\r\nM20FileStrategy.postPackFile = FranchiseFileStrategy.postPackFile;\r\nM20FileStrategy.generateUnpackedContents = FranchiseFileStrategy.generateUnpackedContents;\r\nexport default M20FileStrategy;\r\n","let M20TableHeaderStrategy = {};\r\nM20TableHeaderStrategy.parseHeader = (data) => {\r\n    const headerStart = 0x80;\r\n    const tableName = readTableName(data);\r\n    const isArray = tableName.indexOf('[]') >= 0;\r\n    const tableId = data.readUInt32BE(headerStart);\r\n    const tablePad1 = data.readUInt32BE(headerStart + 4);\r\n    const tableUnknown1 = data.readUInt32BE(headerStart + 8);\r\n    const tableUnknown2 = data.readUInt32BE(headerStart + 12);\r\n    const tableUnknown3 = data.readUInt32BE(headerStart + 16);\r\n    const data1Id = readTableName(data.slice(headerStart + 20, headerStart + 24));\r\n    const data1Type = data.readUInt32BE(headerStart + 24);\r\n    const data1Unknown1 = data.readUInt32BE(headerStart + 28);\r\n    const data1Flag1 = data[headerStart + 32];\r\n    const data1Flag2 = data[headerStart + 33];\r\n    const data1Flag3 = data[headerStart + 34];\r\n    const data1Flag4 = data[headerStart + 35];\r\n    const tableStoreLength = data.readUInt32BE(headerStart + 36);\r\n    let headerOffset = headerStart + 40;\r\n    let records1SizeOffset = 1720;\r\n    let tableStoreName = null;\r\n    if (tableStoreLength > 0) {\r\n        headerOffset += tableStoreLength;\r\n        records1SizeOffset += tableStoreLength * 8;\r\n        tableStoreName = readTableName(data.slice(headerStart + 40, headerStart + 40 + tableStoreLength));\r\n    }\r\n    const data1Offset = data.readUInt32BE(headerOffset);\r\n    const data1TableId = data.readUInt32BE(headerOffset + 4);\r\n    const data1RecordCount = data.readUInt32BE(headerOffset + 8);\r\n    const data1Pad2 = data.readUInt32BE(headerOffset + 12);\r\n    const table1Length = data.readUInt32BE(headerOffset + 16);\r\n    const table2Length = data.readUInt32BE(headerOffset + 20);\r\n    const data1Pad3 = data.readUInt32BE(headerOffset + 24);\r\n    const data1Pad4 = data.readUInt32BE(headerOffset + 28);\r\n    const data2Id = readTableName(data.slice(headerOffset + 32, headerOffset + 36));\r\n    const table1Length2 = data.readUInt32BE(headerOffset + 36);\r\n    const tableTotalLength = data.readUInt32BE(headerOffset + 40);\r\n    const data2RecordWords = data.readUInt32BE(headerOffset + 44);\r\n    const data2RecordCapacity = data.readUInt32BE(headerOffset + 48);\r\n    const data2IndexEntries = data.readUInt32BE(headerOffset + 52);\r\n    const unknown4 = data.readUInt32BE(headerOffset + 56);\r\n    const nextRecordToUse = data.readUInt32BE(headerOffset + 60);\r\n    let offsetStart = 0xE8 + tableStoreLength;\r\n    const hasSecondTable = tableTotalLength > table1Length;\r\n    let headerSize = offsetStart;\r\n    let records1Size = data2RecordWords * 4;\r\n    let table1StartIndex, table2StartIndex;\r\n    if (tableStoreLength > 0) {\r\n    }\r\n    if (!isArray) {\r\n        headerSize = headerSize + (data2IndexEntries * 4);\r\n        table1StartIndex = headerSize;\r\n        table2StartIndex = headerSize + (data1RecordCount * records1Size);\r\n    }\r\n    else {\r\n        table1StartIndex = headerSize + (data1RecordCount * 4);\r\n        table2StartIndex = table1StartIndex + (data1RecordCount * records1Size);\r\n    }\r\n    return {\r\n        'name': tableName,\r\n        'isArray': isArray,\r\n        'tableId': tableId,\r\n        'tablePad1': tablePad1,\r\n        'uniqueId': tablePad1,\r\n        'tableUnknown1': tableUnknown1,\r\n        'tableUnknown2': tableUnknown2,\r\n        'data1Id': data1Id,\r\n        'data1Type': data1Type,\r\n        'data1Unknown1': data1Unknown1,\r\n        'data1Flag1': data1Flag1,\r\n        'data1Flag2': data1Flag2,\r\n        'data1Flag3': data1Flag3,\r\n        'data1Flag4': data1Flag4,\r\n        'tableStoreLength': tableStoreLength,\r\n        'tableStoreName': tableStoreName,\r\n        'data1Offset': data1Offset,\r\n        'data1TableId': data1TableId,\r\n        'data1RecordCount': data1RecordCount,\r\n        'data1Pad2': data1Pad2,\r\n        'table1Length': table1Length,\r\n        'table2Length': table2Length,\r\n        'data1Pad3': data1Pad3,\r\n        'data1Pad4': data1Pad4,\r\n        'headerSize': headerSize,\r\n        'headerOffset': 0xE8,\r\n        'record1SizeOffset': records1SizeOffset,\r\n        'record1SizeLength': 10,\r\n        'record1Size': records1Size,\r\n        'offsetStart': offsetStart,\r\n        'data2Id': data2Id,\r\n        'table1Length2': table1Length2,\r\n        'tableTotalLength': tableTotalLength,\r\n        'hasSecondTable': hasSecondTable,\r\n        'table1StartIndex': table1StartIndex,\r\n        'table2StartIndex': table2StartIndex,\r\n        'recordWords': data2RecordWords,\r\n        'recordCapacity': data2RecordCapacity,\r\n        'numMembers': data2IndexEntries,\r\n        'nextRecordToUse': nextRecordToUse,\r\n        'hasThirdTable': false\r\n    };\r\n};\r\nM20TableHeaderStrategy.parseHeaderAttributesFromSchema = (schema, data, header) => {\r\n    // headerSize = header.headerOffset + (schema.numMembers * 4) + header.tableStoreLength;\r\n    // const binaryData = utilService.getBitArray(data.slice(0, headerSize));\r\n    // let records1SizeNew = utilService.bin2dec(binaryData.slice(header.record1SizeOffset, header.record1SizeOffset + header.record1SizeLength));\r\n    return {\r\n        'headerSize': header.headerSize,\r\n        'record1Size': header.record1Size,\r\n        'table1StartIndex': header.table1StartIndex,\r\n        'table2StartIndex': header.table2StartIndex\r\n    };\r\n};\r\nfunction readTableName(data) {\r\n    let name = '';\r\n    let i = 0;\r\n    do {\r\n        name += String.fromCharCode(data[i]);\r\n        i += 1;\r\n    } while (i < data.length && data[i] !== 0);\r\n    return name;\r\n}\r\n;\r\nexport default M20TableHeaderStrategy;\r\n","import FranchiseTableStrategy from \"../../common/table/FranchiseTableStrategy.js\";\r\nimport M20TableHeaderStrategy from \"../../common/header/m20/M20TableHeaderStrategy.js\";\r\n/**\r\n * @type {TableStrategy}\r\n */\r\nlet M20TableStrategy = {};\r\nM20TableStrategy.parseHeader = M20TableHeaderStrategy.parseHeader;\r\nM20TableStrategy.parseHeaderAttributesFromSchema = M20TableHeaderStrategy.parseHeaderAttributesFromSchema;\r\nM20TableStrategy.getTable2BinaryData = FranchiseTableStrategy.getTable2BinaryData;\r\nM20TableStrategy.getTable3BinaryData = FranchiseTableStrategy.getTable2BinaryData;\r\nM20TableStrategy.getMandatoryOffsets = FranchiseTableStrategy.getMandatoryOffsets;\r\nM20TableStrategy.recalculateStringOffsets = FranchiseTableStrategy.recalculateStringOffsets;\r\nM20TableStrategy.recalculateBlobOffsets = FranchiseTableStrategy.recalculateBlobOffsets;\r\nexport default M20TableStrategy;\r\n","import FranchiseTable2FieldStrategy from \"../../common/table2Field/FranchiseTable2FieldStrategy.js\";\r\n/**\r\n * @type {Table2FieldStrategy}\r\n */\r\nlet M20Table2Strategy = {};\r\nM20Table2Strategy.getInitialUnformattedValue = FranchiseTable2FieldStrategy.getInitialUnformattedValue;\r\nM20Table2Strategy.setUnformattedValueFromFormatted = FranchiseTable2FieldStrategy.setUnformattedValueFromFormatted;\r\nexport default M20Table2Strategy;\r\n","import M20FileStrategy from \"./M20FileStrategy.js\";\r\nimport M20TableStrategy from \"./M20TableStrategy.js\";\r\nimport M20Table2FieldStrategy from \"./M20Table2FieldStrategy.js\";\r\nimport M24Table3FieldStrategy from \"../m24/M24Table3FieldStrategy.js\";\r\nexport const name = 'M20Strategy';\r\nexport { M20FileStrategy as file };\r\nexport { M20TableStrategy as table };\r\nexport { M20Table2FieldStrategy as table2Field };\r\nexport { M24Table3FieldStrategy as table3Field };\r\nexport default {\r\n    name,\r\n    file: M20FileStrategy,\r\n    table: M20TableStrategy,\r\n    table2Field: M20Table2FieldStrategy,\r\n    table3Field: M24Table3FieldStrategy\r\n};\r\n","import M20TableHeaderStrategy from \"../m20/M20TableHeaderStrategy.js\";\r\nlet M24TableHeaderStrategy = {};\r\nM24TableHeaderStrategy.parseHeader = (data) => {\r\n    let header = M20TableHeaderStrategy.parseHeader(data);\r\n    header.table3Length = header.data1Pad3;\r\n    header.hasThirdTable = header.table3Length > 0;\r\n    header.table3StartIndex = header.table2StartIndex + header.table2Length;\r\n    return header;\r\n};\r\nexport default M24TableHeaderStrategy;\r\n","import FranchiseTableStrategy from \"../../common/table/FranchiseTableStrategy.js\";\r\nimport M20TableHeaderStrategy from \"../../common/header/m20/M20TableHeaderStrategy.js\";\r\nimport M24TableHeaderStrategy from \"../../common/header/m24/M24TableHeaderStrategy.js\";\r\n/**\r\n * @type {TableStrategy}\r\n */\r\nlet M24TableStrategy = {};\r\nM24TableStrategy.parseHeader = M24TableHeaderStrategy.parseHeader;\r\nM24TableStrategy.parseHeaderAttributesFromSchema = M20TableHeaderStrategy.parseHeaderAttributesFromSchema;\r\nM24TableStrategy.getTable2BinaryData = FranchiseTableStrategy.getTable2BinaryData;\r\nM24TableStrategy.getTable3BinaryData = FranchiseTableStrategy.getTable2BinaryData;\r\nM24TableStrategy.getMandatoryOffsets = FranchiseTableStrategy.getMandatoryOffsets;\r\nM24TableStrategy.recalculateStringOffsets = FranchiseTableStrategy.recalculateStringOffsets;\r\nM24TableStrategy.recalculateBlobOffsets = FranchiseTableStrategy.recalculateBlobOffsets;\r\nexport default M24TableStrategy;\r\n","import M20FileStrategy from \"../m20/M20FileStrategy.js\";\r\nimport M24TableStrategy from \"./M24TableStrategy.js\";\r\nimport M20Table2FieldStrategy from \"../m20/M20Table2FieldStrategy.js\";\r\nimport M24Table3FieldStrategy from \"./M24Table3FieldStrategy.js\";\r\nexport const name = 'M24Strategy';\r\nexport { M20FileStrategy as file };\r\nexport { M24TableStrategy as table };\r\nexport { M20Table2FieldStrategy as table2Field };\r\nexport { M24Table3FieldStrategy as table3Field };\r\nexport default {\r\n    name,\r\n    file: M20FileStrategy,\r\n    table: M24TableStrategy,\r\n    table2Field: M20Table2FieldStrategy,\r\n    table3Field: M24Table3FieldStrategy\r\n};\r\n","// Required modules\r\nimport path, { dirname } from \"path\";\r\nimport fs from \"fs\";\r\nimport zlib from \"zlib\";\r\nimport { fileURLToPath } from \"url\";\r\n\r\nconst __filename = fileURLToPath(import.meta.url);\r\nconst __dirname = dirname(__filename);\r\n\r\n/**\r\n * ISON processor class that handles game year specific interned string lookups\r\n */\r\nexport class IsonProcessor {\r\n  // ISON constants\r\n  static ISON_HEADER = 0x0d;\r\n  static ISON_OBJECT_START = 0x0f;\r\n  static ISON_OBJECT_END = 0x13;\r\n  static ISON_ARRAY_START = 0x0e;\r\n  static ISON_ARRAY_END = 0x12;\r\n  static ISON_INTERNED_STRING = 0x0a;\r\n  static ISON_STRING = 0x0b;\r\n  static ISON_KEYVALUEPAIR = 0x10;\r\n  static ISON_DOUBLE = 0x09;\r\n  static ISON_BYTE = 0x03;\r\n  static ISON_END = 0x11;\r\n\r\n  constructor(gameYear = 25) {\r\n    this.gameYear = gameYear;\r\n    this.stringLookup = null;\r\n    this.reverseStringLookup = {};\r\n    this.fileData = null;\r\n    this.isonOffset = 0;\r\n    \r\n    // Static cache shared across all instances to avoid reloading the same data\r\n    if (!IsonProcessor.internedLookups) {\r\n      IsonProcessor.internedLookups = {};\r\n    }\r\n    \r\n    // Initialize the lookup data for this game year\r\n    this.loadGameYearData();\r\n  }\r\n\r\n  /**\r\n   * Lazy load the interned string lookup for the specified game year\r\n   */\r\n  loadGameYearData() {\r\n    // Check if we already have this game year's lookup loaded into memory, and if not, load it from file\r\n    if (!IsonProcessor.internedLookups[this.gameYear]) {\r\n      const lookupFilePath = path.join(__dirname, `../../data/interned-strings/${this.gameYear.toString()}/lookup.json`);\r\n      if (fs.existsSync(lookupFilePath)) {\r\n        IsonProcessor.internedLookups[this.gameYear] = JSON.parse(fs.readFileSync(lookupFilePath, 'utf8'));\r\n      } else {\r\n        // If we don't have a lookup for this game year, recursively fall back to Madden 25 (which we should always have a lookup for)\r\n        if (this.gameYear !== 25) {\r\n          IsonProcessor.internedLookups[this.gameYear] = this.loadGameYearDataStatic(25);\r\n        } else {\r\n          throw new Error(`Interned string lookup file not found for game year ${this.gameYear} and no fallback available`);\r\n        }\r\n      }\r\n    }\r\n    \r\n    this.stringLookup = IsonProcessor.internedLookups[this.gameYear];\r\n    this.populateReverseStringLookup();\r\n  }\r\n\r\n  /**\r\n   * Static helper method for loading game year data (used for fallback)\r\n   */\r\n  loadGameYearDataStatic(gameYear) {\r\n    if (!IsonProcessor.internedLookups[gameYear]) {\r\n      const lookupFilePath = path.join(__dirname, `../../data/interned-strings/${gameYear.toString()}/lookup.json`);\r\n      if (fs.existsSync(lookupFilePath)) {\r\n        IsonProcessor.internedLookups[gameYear] = JSON.parse(fs.readFileSync(lookupFilePath, 'utf8'));\r\n      } else {\r\n        throw new Error(`Interned string lookup file not found for game year ${gameYear}`);\r\n      }\r\n    }\r\n    return IsonProcessor.internedLookups[gameYear];\r\n  }\r\n\r\n  /**\r\n   * Create a reverse lookup for JSON -> ISON conversion\r\n   */\r\n  populateReverseStringLookup() {\r\n    this.reverseStringLookup = {}; // Reset the lookup\r\n    if (this.stringLookup) {\r\n      for (let key in this.stringLookup) {\r\n        this.reverseStringLookup[this.stringLookup[key].toLowerCase()] = parseInt(key);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Convert ISON buffer to JSON object\r\n   */\r\n  isonVisualsToJson(fileBuf) {\r\n    this.isonOffset = 0;\r\n    this.fileData = fileBuf;\r\n\r\n    let obj = {};\r\n\r\n    // Read the first byte\r\n    const firstByte = this.readBytes(1).readUInt8(0);\r\n\r\n    // Check if the first byte is 0x0D (ISON_HEADER)\r\n    if (firstByte !== IsonProcessor.ISON_HEADER) {\r\n      // Not an ISON file, so return null\r\n      return null;\r\n    }\r\n\r\n    // Start reading the value into the object\r\n    obj = this.readValue();\r\n\r\n    const lastByte = this.readBytes(1).readUInt8(0);\r\n\r\n    return obj;\r\n  }\r\n\r\n  /**\r\n   * Convert JSON object to ISON buffer\r\n   */\r\n  jsonVisualsToIson(jsonObj) {\r\n    const isonBuffer = this.writeIsonFromJson(jsonObj);\r\n\r\n    // For 26 onwards, return the raw ISON buffer (strategy will handle compression).\r\n    // For 25, return the compressed buffer since it's just simple gzip\r\n    return this.gameYear >= 26 ? isonBuffer : this.writeTable3IsonData(isonBuffer);\r\n  }\r\n\r\n  /**\r\n   * Function to write the ISON data to a compressed buffer\r\n   */\r\n  writeTable3IsonData(isonBuffer) {\r\n    const compressedData = zlib.gzipSync(isonBuffer);\r\n    return compressedData;\r\n  }\r\n\r\n  // Helper to write ISON file\r\n  writeIsonFromJson(jsonObj) {\r\n    // Estimate the buffer size; this can be optimized based on specific requirements.\r\n    let buffer = Buffer.alloc(1024 * 1024); // 1MB buffer for now\r\n    let offset = 0;\r\n\r\n    // Write the ISON header\r\n    offset = this.writeByte(buffer, offset, IsonProcessor.ISON_HEADER);\r\n\r\n    // Convert the JSON to ISON\r\n    offset = this.jsonToIson(jsonObj, buffer, offset);\r\n\r\n    // Write the ISON terminator\r\n    offset = this.writeByte(buffer, offset, IsonProcessor.ISON_END);\r\n\r\n    return buffer.subarray(0, offset);\r\n  }\r\n\r\n  // Helper to write bytes\r\n  writeBytes(buffer, offset, data) {\r\n    data.copy(buffer, offset);\r\n    return offset + data.length;\r\n  }\r\n\r\n  // Helper to write a single byte\r\n  writeByte(buffer, offset, byte) {\r\n    if (byte < 0 || byte > 255) {\r\n      byte = 0;\r\n    }\r\n\r\n    buffer.writeUInt8(byte, offset);\r\n    return offset + 1;\r\n  }\r\n\r\n  // Helper to write a double\r\n  writeDouble(buffer, offset, value) {\r\n    buffer.writeDoubleLE(value, offset);\r\n    return offset + 8;\r\n  }\r\n\r\n  // Helper to write a string\r\n  writeString(buffer, offset, value) {\r\n    if (this.reverseStringLookup.hasOwnProperty(value.toLowerCase())) {\r\n      offset = this.writeByte(buffer, offset, IsonProcessor.ISON_INTERNED_STRING); // Write interned string type\r\n      const stringKey = this.reverseStringLookup[value.toLowerCase()];\r\n      buffer.writeUInt16LE(stringKey, offset); // Write the string key (2 bytes)\r\n      offset += 2;\r\n      return offset;\r\n    }\r\n\r\n    offset = this.writeByte(buffer, offset, IsonProcessor.ISON_STRING); // Write string type\r\n    const strBuffer = Buffer.from(value, \"utf8\");\r\n    buffer.writeUInt32LE(strBuffer.length, offset); // Write the string length (4 bytes)\r\n    offset += 4;\r\n    return this.writeBytes(buffer, offset, strBuffer);\r\n  }\r\n\r\n  // Convert JSON back to ISON\r\n  jsonToIson(json, buffer, offset = 0) {\r\n    if (typeof json === \"object\" && !Array.isArray(json)) {\r\n      offset = this.writeByte(buffer, offset, IsonProcessor.ISON_OBJECT_START); // Write object start byte\r\n      for (const key in json) {\r\n        offset = this.writeByte(buffer, offset, IsonProcessor.ISON_KEYVALUEPAIR); // Write key-value pair marker\r\n        offset = this.writeString(buffer, offset, key); // Write the key (assume all keys are strings)\r\n        offset = this.jsonToIson(json[key], buffer, offset); // Write the value recursively\r\n      }\r\n      offset = this.writeByte(buffer, offset, IsonProcessor.ISON_OBJECT_END); // Write object end byte\r\n    } else if (Array.isArray(json)) {\r\n      offset = this.writeByte(buffer, offset, IsonProcessor.ISON_ARRAY_START); // Write array start byte\r\n      for (const item of json) {\r\n        offset = this.jsonToIson(item, buffer, offset); // Write each array item recursively\r\n      }\r\n      offset = this.writeByte(buffer, offset, IsonProcessor.ISON_ARRAY_END); // Write array end byte\r\n    } else if (typeof json === \"string\") {\r\n      if (this.reverseStringLookup.hasOwnProperty(json.toLowerCase())) {\r\n        offset = this.writeByte(buffer, offset, IsonProcessor.ISON_INTERNED_STRING); // Write interned string type\r\n        const stringKey = this.reverseStringLookup[json.toLowerCase()];\r\n        buffer.writeUInt16LE(stringKey, offset); // Write the string key (2 bytes)\r\n        offset += 2;\r\n      } else {\r\n        offset = this.writeString(buffer, offset, json); // Write the string value\r\n      }\r\n    } else if (typeof json === \"number\" && !Number.isInteger(json)) {\r\n      offset = this.writeByte(buffer, offset, IsonProcessor.ISON_DOUBLE); // Write double type\r\n      offset = this.writeDouble(buffer, offset, json); // Write the double value\r\n    } else if (typeof json === \"boolean\" || typeof json === \"number\") {\r\n      offset = this.writeByte(buffer, offset, IsonProcessor.ISON_BYTE); // Write byte type for boolean or byte\r\n      offset = this.writeByte(buffer, offset, json); // Write the byte value\r\n    }\r\n    return offset;\r\n  }\r\n\r\n  // Function to read a specified number of bytes from the buffer\r\n  readBytes(length) {\r\n    const bytes = this.fileData.subarray(this.isonOffset, this.isonOffset + length);\r\n    this.isonOffset += length;\r\n    return bytes;\r\n  }\r\n\r\n  // Decrement the offset\r\n  decrementOffset(length = 1) {\r\n    this.isonOffset -= length;\r\n  }\r\n\r\n  // Function to read the value depending on its type\r\n  readValue() {\r\n    const valueType = this.readBytes(1).readUInt8(0);\r\n\r\n    if (valueType === IsonProcessor.ISON_INTERNED_STRING) {\r\n      const stringKey = this.readBytes(2).readUInt16LE(0);\r\n\r\n      if (!this.stringLookup.hasOwnProperty(stringKey)) {\r\n        return \"UnkString\";\r\n      }\r\n      return this.stringLookup[stringKey]; // Return the interned string from the lookup\r\n    } else if (valueType === IsonProcessor.ISON_STRING) {\r\n      const stringLength = this.readBytes(4).readUInt32LE(0);\r\n      return this.readBytes(stringLength).toString(\"utf8\"); // Read and return the full string\r\n    } else if (valueType === IsonProcessor.ISON_DOUBLE) {\r\n      return this.readBytes(8).readDoubleLE(0); // Read and return a double value\r\n    } else if (valueType === IsonProcessor.ISON_BYTE) {\r\n      return this.readBytes(1).readUInt8(0); // Read and return a byte value\r\n    } else if (valueType === IsonProcessor.ISON_OBJECT_START) {\r\n      return this.readObject(); // Recursively read an object\r\n    } else if (valueType === IsonProcessor.ISON_ARRAY_START) {\r\n      return this.readArray(); // Recursively read an array\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  // Function to read an array\r\n  readArray() {\r\n    let arr = [];\r\n    let byte;\r\n\r\n    do {\r\n      byte = this.readBytes(1).readUInt8(0);\r\n      if (byte !== IsonProcessor.ISON_ARRAY_END) {\r\n        this.decrementOffset(1); // Decrement offset to re-read this byte for the next value type\r\n        arr.push(this.readValue()); // Read the value and push it to the array\r\n      }\r\n    } while (byte !== IsonProcessor.ISON_ARRAY_END);\r\n\r\n    return arr; // Return the constructed array\r\n  }\r\n\r\n  // Function to read an object\r\n  readObject() {\r\n    let obj = {};\r\n    let byte;\r\n\r\n    do {\r\n      byte = this.readBytes(1).readUInt8(0);\r\n      if (byte === IsonProcessor.ISON_KEYVALUEPAIR) {\r\n        const key = this.readValue(); // Read the key\r\n        const value = this.readValue(); // Read the corresponding value\r\n        obj[key] = value; // Assign key-value pair to the object\r\n      } else if (byte !== IsonProcessor.ISON_OBJECT_END) {\r\n        // If we haven't reached the object end, put the byte back and continue reading\r\n        this.decrementOffset(1);\r\n        this.readValue(); // Continue reading values (this might be nested structures)\r\n      }\r\n    } while (byte !== IsonProcessor.ISON_OBJECT_END);\r\n\r\n    return obj; // Return the constructed object\r\n  }\r\n}\r\n\r\n// Backward compatibility functions that create instances as needed. I don't think these will be needed but they're here just in case.\r\nexport function isonVisualsToJson(fileBuf, gameYear = 25) {\r\n  const processor = new IsonProcessor(gameYear);\r\n  return processor.isonVisualsToJson(fileBuf);\r\n}\r\n\r\nexport function jsonVisualsToIson(jsonObj, gameYear = 25) {\r\n  const processor = new IsonProcessor(gameYear);\r\n  return processor.jsonVisualsToIson(jsonObj);\r\n}\r\n","import zlib from \"zlib\";\r\nimport { IsonProcessor } from \"../../../services/isonProcessor.js\";\r\n\r\nlet FranchiseTable3FieldStrategy = {};\r\n// Create a single IsonProcessor instance for M25 and reuse it for better performance\r\nconst isonProcessor = new IsonProcessor(25);\r\n\r\nFranchiseTable3FieldStrategy.getZlibDataStartIndex = (unformattedValue) => {\r\n    return unformattedValue.indexOf(Buffer.from([0x1F, 0x8B]));\r\n};\r\n\r\nFranchiseTable3FieldStrategy.getInitialUnformattedValue = (field, data) => {\r\n    return data.slice(field.thirdTableField.index, (field.thirdTableField.index + field.offset.maxLength + 2));\r\n    // extend maxLength + 2 because the first 2 bytes are the size of the zipped data\r\n};\r\n\r\nFranchiseTable3FieldStrategy.getFormattedValueFromUnformatted = (unformattedValue) => {\r\n    // First two bytes are the size of the zipped data, so skip those and get the raw ISON buffer\r\n    const zlibDataStartIndex = FranchiseTable3FieldStrategy.getZlibDataStartIndex(unformattedValue);\r\n    const isonBuf = zlib.gunzipSync(unformattedValue.subarray(zlibDataStartIndex));\r\n    // Convert the ISON buffer to a JSON object using the class instance\r\n    const jsonObj = isonProcessor.isonVisualsToJson(isonBuf);\r\n    return JSON.stringify(jsonObj);\r\n};\r\n\r\nFranchiseTable3FieldStrategy.setUnformattedValueFromFormatted = (formattedValue, oldUnformattedValue, maxLength) => {\r\n    // Parse the JSON string into a JSON object\r\n    let jsonObj = JSON.parse(formattedValue);\r\n    // Convert the object into an ISON buffer using the class instance\r\n    let isonBuf = isonProcessor.jsonVisualsToIson(jsonObj);\r\n    let padding = Buffer.alloc(maxLength - isonBuf.length); // table3s all have the same length and are zero padded to the end.\r\n    let sizeBuf = Buffer.alloc(2);\r\n    sizeBuf.writeUInt16LE(isonBuf.length);\r\n    return Buffer.concat([sizeBuf, isonBuf, padding]);\r\n};\r\n\r\nexport default FranchiseTable3FieldStrategy;\r\n","import FranchiseTable3FieldStrategy from \"../../common/table3Field/FranchiseIsonTable3FieldStrategy.js\";\r\n/**\r\n * @type {Table3FieldStrategy}\r\n */\r\nlet M25Table3Strategy = {};\r\nM25Table3Strategy.getInitialUnformattedValue = FranchiseTable3FieldStrategy.getInitialUnformattedValue;\r\nM25Table3Strategy.getFormattedValueFromUnformatted = FranchiseTable3FieldStrategy.getFormattedValueFromUnformatted;\r\nM25Table3Strategy.setUnformattedValueFromFormatted = FranchiseTable3FieldStrategy.setUnformattedValueFromFormatted;\r\nexport default M25Table3Strategy;\r\n","import M20FileStrategy from \"../m20/M20FileStrategy.js\";\r\nimport M24TableStrategy from \"../m24/M24TableStrategy.js\";\r\nimport M20Table2FieldStrategy from \"../m20/M20Table2FieldStrategy.js\";\r\nimport M25Table3FieldStrategy from \"./M25Table3FieldStrategy.js\";\r\nexport const name = 'M24Strategy';\r\nexport { M20FileStrategy as file };\r\nexport { M24TableStrategy as table };\r\nexport { M20Table2FieldStrategy as table2Field };\r\nexport { M25Table3FieldStrategy as table3Field };\r\nexport default {\r\n    name,\r\n    file: M20FileStrategy,\r\n    table: M24TableStrategy,\r\n    table2Field: M20Table2FieldStrategy,\r\n    table3Field: M25Table3FieldStrategy\r\n};\r\n","import zlib from \"zlib\";\r\nimport fs from \"fs\";\r\nimport path, { dirname } from \"path\";\r\nimport { Decoder } from \"@toondepauw/node-zstd\";\r\nimport { IsonProcessor } from \"../../../services/isonProcessor.js\";\r\nimport { fileURLToPath } from \"url\";\r\n\r\nconst __filename = fileURLToPath(import.meta.url);\r\nconst __dirname = dirname(__filename);\r\n\r\nlet FranchiseZstdTable3FieldStrategy = {};\r\nlet dictionary = fs.readFileSync(path.join(__dirname, '../../../../data/zstd-dicts/26/dict.bin'));\r\nconst zstdDecoder = new Decoder(dictionary);\r\n// Create a single IsonProcessor instance for M26 and reuse it for better performance\r\nconst isonProcessor = new IsonProcessor(26);\r\n\r\nFranchiseZstdTable3FieldStrategy.getZstdDataStartIndex = (unformattedValue) => {\r\n    return unformattedValue.indexOf(Buffer.from([0x28, 0xB5, 0x2F, 0xFD]));\r\n};\r\n\r\nFranchiseZstdTable3FieldStrategy.getInitialUnformattedValue = (field, data) => {\r\n    return data.slice(field.thirdTableField.index, (field.thirdTableField.index + field.offset.maxLength + 2));\r\n    // extend maxLength + 2 because the first 2 bytes are the size of the compressed data\r\n};\r\n\r\nFranchiseZstdTable3FieldStrategy.getFormattedValueFromUnformatted = (unformattedValue) => {\r\n    // First two bytes are the size of the zipped data, so skip those and get the raw ISON buffer\r\n    const zstdDataStartIndex = FranchiseZstdTable3FieldStrategy.getZstdDataStartIndex(unformattedValue);\r\n    // Zstd decoder cannot handle extra padding bytes, so we need to get the exact number of bytes\r\n    const length = unformattedValue.readUInt16LE(0);\r\n    const isonBuf = zstdDecoder.decodeSync(unformattedValue.subarray(zstdDataStartIndex, zstdDataStartIndex + length));\r\n    // Convert the ISON buffer to a JSON object using the class instance\r\n    const jsonObj = isonProcessor.isonVisualsToJson(isonBuf);\r\n    return JSON.stringify(jsonObj);\r\n};\r\n\r\nFranchiseZstdTable3FieldStrategy.setUnformattedValueFromFormatted = (formattedValue, oldUnformattedValue, maxLength) => {\r\n    // Parse the JSON string into a JSON object\r\n    let jsonObj = JSON.parse(formattedValue);\r\n    // Convert the object into an ISON buffer using the class instance\r\n    let isonBuf = isonProcessor.jsonVisualsToIson(jsonObj);\r\n    // Create the zstd-compressed buffer (not using dictionary due to node limitations, game still reads it fine)\r\n    const compressedBuf = zlib.zstdCompressSync(isonBuf);\r\n    let padding = Buffer.alloc(maxLength - compressedBuf.length); // table3s all have the same length and are zero padded to the end.\r\n    let sizeBuf = Buffer.alloc(2);\r\n    sizeBuf.writeUInt16LE(compressedBuf.length);\r\n    return Buffer.concat([sizeBuf, compressedBuf, padding]);\r\n};\r\n\r\nexport default FranchiseZstdTable3FieldStrategy;\r\n","import FranchiseTable3FieldStrategy from \"../../common/table3Field/FranchiseZstdTable3FieldStrategy.js\";\r\n/**\r\n * @type {Table3FieldStrategy}\r\n */\r\nlet M26Table3Strategy = {};\r\nM26Table3Strategy.getInitialUnformattedValue = FranchiseTable3FieldStrategy.getInitialUnformattedValue;\r\nM26Table3Strategy.getFormattedValueFromUnformatted = FranchiseTable3FieldStrategy.getFormattedValueFromUnformatted;\r\nM26Table3Strategy.setUnformattedValueFromFormatted = FranchiseTable3FieldStrategy.setUnformattedValueFromFormatted;\r\nexport default M26Table3Strategy;\r\n","import M20FileStrategy from \"../m20/M20FileStrategy.js\";\r\nimport M24TableStrategy from \"../m24/M24TableStrategy.js\";\r\nimport M20Table2FieldStrategy from \"../m20/M20Table2FieldStrategy.js\";\r\nimport M26Table3FieldStrategy from \"./M26Table3FieldStrategy.js\";\r\nexport const name = 'M26Strategy';\r\nexport { M20FileStrategy as file };\r\nexport { M24TableStrategy as table };\r\nexport { M20Table2FieldStrategy as table2Field };\r\nexport { M26Table3FieldStrategy as table3Field };\r\nexport default {\r\n    name,\r\n    file: M20FileStrategy,\r\n    table: M24TableStrategy,\r\n    table2Field: M20Table2FieldStrategy,\r\n    table3Field: M26Table3FieldStrategy\r\n};\r\n","import CommonFileStrategy from './CommonFileStrategy.js';\r\nlet FTCFileStrategy = {};\r\nFTCFileStrategy.generateUnpackedContents = CommonFileStrategy.generateUnpackedContents;\r\nFTCFileStrategy.postPackFile = (originalData, newData) => {\r\n    return newData;\r\n};\r\nexport default FTCFileStrategy;\r\n","import FTCFileStrategy from \"../../common/file/FTCFileStrategy.js\";\r\n/**\r\n * @type {FileStrategy}\r\n */\r\nlet M19FTCFileStrategy = {};\r\nM19FTCFileStrategy.postPackFile = FTCFileStrategy.postPackFile;\r\nM19FTCFileStrategy.generateUnpackedContents = FTCFileStrategy.generateUnpackedContents;\r\nexport default M19FTCFileStrategy;\r\n","import CommonAlgorithms from \"../CommonAlgorithms.js\";\r\nlet FTCTableStrategy = {};\r\nFTCTableStrategy.getTable2BinaryData = (table2Records, fullTable2Buffer) => {\r\n    return [CommonAlgorithms.save(table2Records, fullTable2Buffer)];\r\n};\r\nFTCTableStrategy.getMandatoryOffsets = (offsets) => {\r\n    return offsets.filter((offset) => {\r\n        return offset.valueInSecondTable;\r\n    }).map((offset) => {\r\n        return offset.name;\r\n    });\r\n};\r\nexport default FTCTableStrategy;\r\n","import M19TableHeaderStrategy from \"../../common/header/m19/M19TableHeaderStrategy.js\";\r\nimport FTCTableStrategy from \"../../common/table/FTCTableStrategy.js\";\r\n/**\r\n * @type {TableStrategy}\r\n */\r\nlet M19FTCTableStrategy = {};\r\nM19FTCTableStrategy.parseHeader = M19TableHeaderStrategy.parseHeader;\r\nM19FTCTableStrategy.parseHeaderAttributesFromSchema = M19TableHeaderStrategy.parseHeaderAttributesFromSchema;\r\nM19FTCTableStrategy.getTable2BinaryData = FTCTableStrategy.getTable2BinaryData;\r\nM19FTCTableStrategy.getTable3BinaryData = FTCTableStrategy.getTable2BinaryData;\r\nM19FTCTableStrategy.getMandatoryOffsets = FTCTableStrategy.getMandatoryOffsets;\r\nM19FTCTableStrategy.recalculateStringOffsets = () => { };\r\nexport default M19FTCTableStrategy;\r\n","let FTCTable2FieldStrategy = {};\r\nFTCTable2FieldStrategy.getInitialUnformattedValue = (field, data) => {\r\n    let fieldData = data.slice(field.secondTableField.index, (field.secondTableField.index + field.offset.maxLength));\r\n    const endOfFieldIndex = fieldData.indexOf(0x00);\r\n    if (endOfFieldIndex >= 0) {\r\n        // if there's a match, break the string early, making sure to include the 0s from the '00'.\r\n        // All table2 fields include the trailing 0x00.\r\n        fieldData = fieldData.slice(0, endOfFieldIndex + 1);\r\n    }\r\n    return fieldData;\r\n};\r\nFTCTable2FieldStrategy.setUnformattedValueFromFormatted = (formattedValue, maxLength) => {\r\n    if (formattedValue.length >= maxLength) {\r\n        // FTC strings cannot equal max length because the last character must be the null character.\r\n        formattedValue = formattedValue.substring(0, maxLength - 1);\r\n    }\r\n    return Buffer.from(formattedValue + '\\u0000');\r\n};\r\nexport default FTCTable2FieldStrategy;\r\n","import FTCTable2FieldStrategy from \"../../common/table2Field/FTCTable2FieldStrategy.js\";\r\n/**\r\n * @type {Table2FieldStrategy}\r\n */\r\nlet M19FTCTable2FieldStrategy = {};\r\nM19FTCTable2FieldStrategy.getInitialUnformattedValue = FTCTable2FieldStrategy.getInitialUnformattedValue;\r\nM19FTCTable2FieldStrategy.setUnformattedValueFromFormatted = FTCTable2FieldStrategy.setUnformattedValueFromFormatted;\r\nexport default M19FTCTable2FieldStrategy;\r\n","import M19FTCFileStrategy from \"./M19FTCFileStrategy.js\";\r\nimport M19FTCTableStrategy from \"./M19FTCTableStrategy.js\";\r\nimport M19FTCTable2FieldStrategy from \"./M19FTCTable2FieldStrategy.js\";\r\nimport M24Table3Strategy from \"../../franchise/m24/M24Table3FieldStrategy.js\";\r\nexport const name = 'M19FTCStrategy';\r\nexport { M19FTCFileStrategy as file };\r\nexport { M19FTCTableStrategy as table };\r\nexport { M19FTCTable2FieldStrategy as table2Field };\r\nexport { M24Table3Strategy as table3Field };\r\nexport default {\r\n    name,\r\n    file: M19FTCFileStrategy,\r\n    table: M19FTCTableStrategy,\r\n    table2Field: M19FTCTable2FieldStrategy,\r\n    table3Field: M24Table3Strategy\r\n};\r\n","import FTCFileStrategy from \"../../common/file/FTCFileStrategy.js\";\r\n/**\r\n * @type {FileStrategy}\r\n */\r\nlet M20FTCFileStrategy = {};\r\nM20FTCFileStrategy.postPackFile = FTCFileStrategy.postPackFile;\r\nM20FTCFileStrategy.generateUnpackedContents = FTCFileStrategy.generateUnpackedContents;\r\nexport default M20FTCFileStrategy;\r\n","import M20TableHeaderStrategy from \"../../common/header/m20/M20TableHeaderStrategy.js\";\r\nimport M24TableHeaderStrategy from \"../../common/header/m24/M24TableHeaderStrategy.js\";\r\nimport FTCTableStrategy from \"../../common/table/FTCTableStrategy.js\";\r\n/**\r\n * @type {TableStrategy}\r\n */\r\nlet M20FTCTableStrategy = {};\r\nM20FTCTableStrategy.parseHeader = M24TableHeaderStrategy.parseHeader;\r\nM20FTCTableStrategy.parseHeaderAttributesFromSchema = M20TableHeaderStrategy.parseHeaderAttributesFromSchema;\r\nM20FTCTableStrategy.getTable2BinaryData = FTCTableStrategy.getTable2BinaryData;\r\nM20FTCTableStrategy.getTable3BinaryData = FTCTableStrategy.getTable2BinaryData;\r\nM20FTCTableStrategy.getMandatoryOffsets = FTCTableStrategy.getMandatoryOffsets;\r\nM20FTCTableStrategy.recalculateStringOffsets = () => { };\r\nexport default M20FTCTableStrategy;\r\n","import FTCTable2FieldStrategy from \"../../common/table2Field/FTCTable2FieldStrategy.js\";\r\n/**\r\n * @type {Table2FieldStrategy}\r\n */\r\nlet M20FTCTable2FieldStrategy = {};\r\nM20FTCTable2FieldStrategy.getInitialUnformattedValue = FTCTable2FieldStrategy.getInitialUnformattedValue;\r\nM20FTCTable2FieldStrategy.setUnformattedValueFromFormatted = FTCTable2FieldStrategy.setUnformattedValueFromFormatted;\r\nexport default M20FTCTable2FieldStrategy;\r\n","import M20FTCFileStrategy from \"./M20FTCFileStrategy.js\";\r\nimport M20FTCTableStrategy from \"./M20FTCTableStrategy.js\";\r\nimport M20FTCTable2FieldStrategy from \"./M20FTCTable2FieldStrategy.js\";\r\nimport M24Table3Strategy from \"../../franchise/m24/M24Table3FieldStrategy.js\";\r\nexport const name = 'M20FTCStrategy';\r\nexport { M20FTCFileStrategy as file };\r\nexport { M20FTCTableStrategy as table };\r\nexport { M20FTCTable2FieldStrategy as table2Field };\r\nexport { M24Table3Strategy as table3Field };\r\nexport default {\r\n    name,\r\n    file: M20FTCFileStrategy,\r\n    table: M20FTCTableStrategy,\r\n    table2Field: M20FTCTable2FieldStrategy,\r\n    table3Field: M24Table3Strategy\r\n};\r\n","import Constants from \"../Constants.js\";\r\nimport M19Strategy from \"./franchise/m19/M19Strategy.js\";\r\nimport M20Strategy from \"./franchise/m20/M20Strategy.js\";\r\nimport M24Strategy from \"./franchise/m24/M24Strategy.js\";\r\nimport M25Strategy from \"./franchise/m25/M25Strategy.js\";\r\nimport M26Strategy from \"./franchise/m26/M26Strategy.js\";\r\nimport M19FTCStrategy from \"./franchise-common/m19/M19FTCStrategy.js\";\r\nimport M20FTCStrategy from \"./franchise-common/m20/M20FTCStrategy.js\";\r\nlet StrategyPicker = {};\r\n/**\r\n * @returns GameStrategy\r\n */\r\nStrategyPicker.pick = (type) => {\r\n    if (type.format === Constants.FORMAT.FRANCHISE) {\r\n        switch (type.year) {\r\n            case 19:\r\n                return M19Strategy;\r\n            case 20:\r\n            case 21:\r\n            case 22:\r\n            case 23:\r\n            default:\r\n                return M20Strategy;\r\n            case 24:\r\n                return M24Strategy;\r\n            case 25:\r\n                return M25Strategy;\r\n            case 26:\r\n                return M26Strategy;\r\n        }\r\n    }\r\n    else {\r\n        switch (type.year) {\r\n            case 19:\r\n                return M19FTCStrategy;\r\n            case 20:\r\n            case 21:\r\n            default:\r\n                return M20FTCStrategy;\r\n        }\r\n    }\r\n};\r\nexport default StrategyPicker;\r\n","import fs from 'fs';\r\nimport path, { dirname } from 'path';\r\nimport { fileURLToPath } from 'url';\r\n\r\nconst __filename = fileURLToPath(import.meta.url);\r\nconst __dirname = dirname(__filename);\r\n\r\nconst SCHEMA_DIRECTORY = path.join(__dirname, '../../data/schemas');\r\nlet schemaPicker = {};\r\n/** @param {number} gameYear @param {number} major @param {number} minor @param {FranchiseFileSettings?} [settings] @returns {SchemaMetadata?} */\r\nschemaPicker.pick = (gameYear, major, minor, settings) => {\r\n    let schemaDirectories = [SCHEMA_DIRECTORY];\r\n    if (settings && settings.schemaDirectory) {\r\n        schemaDirectories.unshift(settings.schemaDirectory);\r\n    }\r\n    const schemasMeta = readSchemaDirectories(schemaDirectories);\r\n    return findApplicableSchema(schemasMeta, gameYear, major, minor);\r\n};\r\n/** @param {string} customDirectory @returns {Array<SchemaMetadata>} */\r\nschemaPicker.retrieveSchemas = (customDirectory) => {\r\n    let dirsToRead = [SCHEMA_DIRECTORY];\r\n    if (customDirectory) {\r\n        dirsToRead.push(customDirectory);\r\n    }\r\n    return readSchemaDirectories(dirsToRead).filter((schema) => { return schema.major !== null && schema.minor !== null; });\r\n};\r\nexport default schemaPicker;\r\nfunction readSchemaDirectories(dirpaths) {\r\n    let schemaMeta = [];\r\n    dirpaths.forEach(function (dirpath) {\r\n        const dirs = fs.readdirSync(dirpath).filter(f => fs.statSync(path.join(dirpath, f)).isDirectory());\r\n        const schemaMap = dirs.map((dir) => {\r\n            return getSchemasInFolder(path.join(dirpath, dir));\r\n        });\r\n        schemaMeta.push(schemaMap);\r\n        schemaMeta.push(getSchemasInFolder(dirpath));\r\n    });\r\n    return flatten(schemaMeta);\r\n    function flatten(arr) {\r\n        return arr.reduce(function (flat, toFlatten) {\r\n            return flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten);\r\n        }, []);\r\n    }\r\n}\r\n;\r\nfunction getSchemasInFolder(dir) {\r\n    const files = fs.readdirSync(dir);\r\n    return files.map((file) => {\r\n        let regex = /(?:(?=M)M(\\d+)_(\\d+)_(\\d+)|(?!M)(\\d+)_(\\d+))/.exec(file);\r\n        return {\r\n            'gameYear': regex && regex[1] ? parseInt(regex[1]) : null,\r\n            'major': regex && (regex[2] || regex[4]) ? parseInt(regex[2] || regex[4]) : null,\r\n            'minor': regex && (regex[3] || regex[5]) ? parseInt(regex[3] || regex[5]) : null,\r\n            'path': path.join(dir, file)\r\n        };\r\n    });\r\n}\r\nfunction findApplicableSchema(schemaMeta, gameYear, major, minor) {\r\n    // check if game year exists\r\n    if (schemaMeta) {\r\n        const schemasToSearch = schemaMeta.filter((schema) => {\r\n            if (gameYear) {\r\n                return schema.gameYear == gameYear || schema.gameYear === null && schema.major !== null && schema.minor !== null;\r\n            }\r\n            else {\r\n                return schema.major !== null && schema.minor !== null;\r\n            }\r\n        });\r\n        // check if exact major exists\r\n        const exactMajor = schemasToSearch.filter((schema) => { return schema.major == major; });\r\n        if (exactMajor.length > 0) {\r\n            return getClosestMinor(exactMajor, minor);\r\n        }\r\n        else {\r\n            const majors = schemasToSearch.map((schema) => {\r\n                return schema.major;\r\n            });\r\n            const closest = getClosestValue(majors, major);\r\n            const majorMatches = schemasToSearch.filter((schema) => { return schema.major === closest; });\r\n            if (majorMatches.length > 0) {\r\n                return getClosestMinor(majorMatches);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    function getClosestMinor(arr, goal) {\r\n        const minors = arr.map((schema) => {\r\n            return schema.minor;\r\n        });\r\n        const closest = getClosestValue(minors, goal);\r\n        return arr.find((schema) => { return schema.minor === closest; });\r\n    }\r\n    ;\r\n    function getClosestValue(arr, goal) {\r\n        return arr.reduce(function (prev, curr) {\r\n            return (Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev);\r\n        });\r\n    }\r\n    ;\r\n}\r\n;\r\n","import fs from \"fs\";\r\nimport zlib from \"zlib\";\r\nimport Constants from \"./Constants.js\";\r\nimport events from \"events\";\r\nimport FranchiseSchema from \"./FranchiseSchema.js\";\r\nimport utilService from \"./services/utilService.js\";\r\nimport FranchiseFileTable from \"./FranchiseFileTable.js\";\r\nimport StrategyPicker from \"./strategies/StrategyPicker.js\";\r\nimport FranchiseFileSettings from \"./FranchiseFileSettings.js\";\r\nimport schemaPickerService from \"./services/schemaPicker.js\";\r\n\r\nconst EventEmitter = events.EventEmitter;\r\nconst COMPRESSED_DATA_OFFSET = 0x52;\r\n/**\r\n * @typedef {Object} AssetTable\r\n * @param {number} assetId\r\n * @param {number} reference\r\n */\r\n/**\r\n   * @typedef {Object} RecordReference\r\n   * @param {number} tableId\r\n   * @param {number} rowNumber\r\n   */\r\nclass FranchiseFile extends EventEmitter {\r\n    /**\r\n     *\r\n     * @param {string} filePath\r\n     * @param {FranchiseFileSettings?} [settings]\r\n     * @returns {Promise<FranchiseFile>}\r\n     */\r\n    static create(filePath, settings) {\r\n        return new Promise((resolve, reject) => {\r\n            const file = new FranchiseFile(filePath, settings);\r\n            if (file.settings.autoParse) {\r\n                file.on('ready', () => resolve(file));\r\n                file.on('error', (err) => reject(err));\r\n            }\r\n            else {\r\n                resolve(file);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     *\r\n     * @param {string} filePath\r\n     * @param {FranchiseFileSettings} settings\r\n     */\r\n    constructor(filePath, settings) {\r\n        super();\r\n        /** @private @type {FranchiseFileSettings} */\r\n        this._settings = new FranchiseFileSettings(settings);\r\n        this.isLoaded = false;\r\n        if (Array.isArray(filePath)) {\r\n            /** @private @type {string} */\r\n            this._filePath = filePath[0];\r\n        }\r\n        else {\r\n            this._filePath = filePath;\r\n        }\r\n        /** @private @type {Buffer} */\r\n        this._rawContents = fs.readFileSync(filePath);\r\n        /** @private @type {FileType} */\r\n        this._type = getFileType(this._rawContents, this._settings);\r\n        /** @private @type {number} */\r\n        this._gameYear = this._type.year;\r\n        /** @private @type {SchemaMetadata} */\r\n        this._expectedSchemaVersion = getSchemaMetadata(this.rawContents, this._type);\r\n        if (this._type.compressed) {\r\n            /** @type {Buffer} */\r\n            this.packedFileContents = this._rawContents;\r\n            /** @type {Buffer} */\r\n            this.unpackedFileContents = unpackFile(this._rawContents, this._type);\r\n            if (this._type.format === Constants.FORMAT.FRANCHISE_COMMON) {\r\n                const newType = getFileType(this.unpackedFileContents, this._settings);\r\n                this._type.year = newType.year;\r\n                this._gameYear = this._type.year;\r\n                this._expectedSchemaVersion = getSchemaMetadata(this.unpackedFileContents, newType);\r\n            }\r\n        }\r\n        else {\r\n            this.unpackedFileContents = this._rawContents;\r\n        }\r\n        if (this._settings.autoParse) {\r\n            this.parse();\r\n        }\r\n    }\r\n    /**\r\n     * @returns {Promise<void>}\r\n     */\r\n    parse() {\r\n        const that = this;\r\n        this.strategy = StrategyPicker.pick(this.type);\r\n        let schemaPromise = new Promise((resolve, reject) => {\r\n            const schemaMeta = this.settings.schemaOverride\r\n                ? this.settings.schemaOverride\r\n                : this.expectedSchemaVersion;\r\n            const schemaPath = this.settings.schemaOverride && this.settings.schemaOverride.path\r\n                ? this.settings.schemaOverride.path\r\n                : schemaPickerService.pick(this._gameYear, schemaMeta.major, schemaMeta.minor, this.settings).path;\r\n            try {\r\n                this.schemaList = new FranchiseSchema(schemaPath, {\r\n                    extraSchemas: this.settings.extraSchemas,\r\n                    fileMap: this.settings.schemaFileMap,\r\n                    useNewSchemaGeneration: this.settings.useNewSchemaGeneration\r\n                });\r\n                this.schemaList.on(\"schemas:done\", () => {\r\n                    resolve();\r\n                });\r\n                this.schemaList.evaluate();\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n        });\r\n        let tablePromise = new Promise((resolve, reject) => {\r\n            const firstCheck = 0x53;\r\n            const secondCheck = 0x50;\r\n            const thirdCheck = 0x42;\r\n            const fourthCheck = 0x46;\r\n            const altFirstCheck = 0x41;\r\n            const altSecondCheck = 0x53;\r\n            const altThirdCheck = 0x54;\r\n            const altFourthCheck = 0x4f;\r\n            const alt2FirstCheck = 0x53;\r\n            const alt2SecondCheck = 0x50;\r\n            const alt2ThirdCheck = 0x45;\r\n            const alt2FourthCheck = 0x58;\r\n            const tableIndicies = [];\r\n            for (let i = 0; i <= this.unpackedFileContents.length - 4; i += 1) {\r\n                if ((this.unpackedFileContents[i] === firstCheck &&\r\n                    this.unpackedFileContents[i + 1] === secondCheck &&\r\n                    this.unpackedFileContents[i + 2] === thirdCheck &&\r\n                    this.unpackedFileContents[i + 3] === fourthCheck) ||\r\n                    (this.unpackedFileContents[i] === altFirstCheck &&\r\n                        this.unpackedFileContents[i + 1] === altSecondCheck &&\r\n                        this.unpackedFileContents[i + 2] === altThirdCheck &&\r\n                        this.unpackedFileContents[i + 3] === altFourthCheck) ||\r\n                    (this.unpackedFileContents[i] === alt2FirstCheck &&\r\n                        this.unpackedFileContents[i + 1] === alt2SecondCheck &&\r\n                        this.unpackedFileContents[i + 2] === alt2ThirdCheck &&\r\n                        this.unpackedFileContents[i + 3] === alt2FourthCheck)) {\r\n                    const tableStart = i - getTableStartOffsetByGameYear(this._gameYear);\r\n                    tableIndicies.push(tableStart);\r\n                }\r\n            }\r\n            /** @type {Array<FranchiseFileTable>} */\r\n            this.tables = [];\r\n            for (let i = 0; i < tableIndicies.length; i++) {\r\n                const currentTable = tableIndicies[i];\r\n                const nextTable = tableIndicies.length > i + 1\r\n                    ? tableIndicies[i + 1]\r\n                    : this.unpackedFileContents.length - 8; // Ignore trailing 8 bytes on last table\r\n                const tableData = this.unpackedFileContents.slice(currentTable, nextTable);\r\n                const newFranchiseTable = new FranchiseFileTable(tableData, currentTable, this._gameYear, this.strategy, this.settings);\r\n                newFranchiseTable.index = i;\r\n                this.tables.push(newFranchiseTable);\r\n                newFranchiseTable.on(\"change\", function () {\r\n                    this.isChanged = true;\r\n                    if (that.settings.saveOnChange) {\r\n                        that.packFile();\r\n                    }\r\n                    that.emit(\"change\", newFranchiseTable);\r\n                });\r\n            }\r\n            resolve();\r\n        });\r\n        let assetTablePromise = new Promise((resolve, reject) => {\r\n            /** @type {Array<AssetTable>} */\r\n            this.assetTable = [];\r\n            const assetTableOffset = this.unpackedFileContents.readUInt32BE(4);\r\n            const assetTableEntries = this.unpackedFileContents.readUInt32BE(36);\r\n            let currentOffset = assetTableOffset;\r\n            for (let i = 0; i < assetTableEntries; i++) {\r\n                const assetId = this.unpackedFileContents.readUInt32BE(currentOffset);\r\n                const reference = this.unpackedFileContents.readUInt32BE(currentOffset + 4);\r\n                this.assetTable.push({\r\n                    assetId: assetId,\r\n                    reference: reference,\r\n                });\r\n                currentOffset += 8;\r\n            }\r\n            resolve();\r\n        });\r\n        Promise.all([schemaPromise, tablePromise, assetTablePromise])\r\n            .then(() => {\r\n            that.tables.forEach((table, index) => {\r\n                const schema = that.schemaList.getSchema(table.name);\r\n                if (schema) {\r\n                    table.schema = schema;\r\n                }\r\n            });\r\n            that.isLoaded = true;\r\n            that.emit(\"ready\");\r\n        })\r\n            .catch((err) => {\r\n            console.log(err);\r\n            that.emit(\"error\", err);\r\n        });\r\n    }\r\n    /**\r\n     *\r\n     * @param {string} outputFilePath\r\n     * @param {object} options\r\n     * @returns {Promise<string>}\r\n     */\r\n    save(outputFilePath, options) {\r\n        return this.packFile(outputFilePath, options);\r\n    }\r\n    /**\r\n     *\r\n     * @param {string} outputFilePath\r\n     * @param {object} options\r\n     * @returns {Promise<string>}\r\n     */\r\n    packFile(outputFilePath, options) {\r\n        const that = this;\r\n        this.emit(\"saving\");\r\n        return new Promise((resolve, reject) => {\r\n            this.unpackedFileContents = this.strategy.file.generateUnpackedContents(this.tables, this.unpackedFileContents);\r\n            let destination = outputFilePath ? outputFilePath : this.filePath;\r\n            _packFile(this.unpackedFileContents, options).then((data) => {\r\n                const dataToSave = this.strategy.file.postPackFile(this.packedFileContents, data);\r\n                if (options && options.sync) {\r\n                    _saveSync(destination, dataToSave);\r\n                    postSaveActions();\r\n                }\r\n                else {\r\n                    _save(destination, dataToSave, (err) => {\r\n                        postSaveActions(err);\r\n                    });\r\n                }\r\n                function postSaveActions(err) {\r\n                    if (err) {\r\n                        reject(err);\r\n                        that.emit(\"save-error\");\r\n                    }\r\n                    resolve(\"saved\");\r\n                    that.emit(\"saved\");\r\n                }\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * @returns {Buffer}\r\n     */\r\n    get rawContents() {\r\n        return this._rawContents;\r\n    }\r\n    get openedFranchiseFile() {\r\n        return this._openedFranchiseFile;\r\n    }\r\n    /**\r\n     * @returns {string}\r\n     */\r\n    get filePath() {\r\n        return this._filePath;\r\n    }\r\n    /**\r\n     * @returns {FranchiseSchema}\r\n     */\r\n    get schema() {\r\n        return this.schemaList;\r\n    }\r\n    /**\r\n     * @returns {SchemaMetadata}\r\n     */\r\n    get expectedSchemaVersion() {\r\n        return this._expectedSchemaVersion;\r\n    }\r\n    /**\r\n     * @returns {FranchiseFileSettings}\r\n     */\r\n    get settings() {\r\n        return this._settings;\r\n    }\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    get gameYear() {\r\n        return this._gameYear;\r\n    }\r\n    /**\r\n     * @returns {FileType}\r\n     */\r\n    get type() {\r\n        return this._type;\r\n    }\r\n    set filePath(path) {\r\n        this._filePath = path;\r\n    }\r\n    set settings(settings) {\r\n        this._settings = new FranchiseFileSettings(settings);\r\n    }\r\n    /**\r\n     *\r\n     * @param {string} name\r\n     * @returns {FranchiseFileTable?}\r\n     */\r\n    getTableByName(name) {\r\n        return this.tables.find((table) => {\r\n            return table.name === name;\r\n        });\r\n    }\r\n    /**\r\n     *\r\n     * @param {string} name\r\n     * @returns {Array<FranchiseFileTable>}\r\n     */\r\n    getAllTablesByName(name) {\r\n        return this.tables.filter((table) => {\r\n            return table.name === name;\r\n        });\r\n    }\r\n    /**\r\n     *\r\n     * @param {number} id\r\n     * @returns {FranchiseFileTable?}\r\n     */\r\n    getTableById(id) {\r\n        return this.tables.find((table) => {\r\n            return table.header && table.header.tableId === id;\r\n        });\r\n    }\r\n    /**\r\n     *\r\n     * @param {number} index\r\n     * @returns {FranchiseFileTable?}\r\n     */\r\n    getTableByIndex(index) {\r\n        return this.tables[index];\r\n    }\r\n    /**\r\n     *\r\n     * @param {number} id\r\n     * @returns {FranchiseFileTable?}\r\n     */\r\n    getTableByUniqueId(id) {\r\n        return this.tables.find((table) => {\r\n            return table.header && table.header.uniqueId === id;\r\n        });\r\n    }\r\n    /**\r\n     *\r\n     * @param {string} referenceValue\r\n     * @returns {RecordReference}\r\n     */\r\n    getReferencedRecord(referenceValue) {\r\n        const reference = utilService.getReferenceData(referenceValue);\r\n        return this.getTableById(reference.tableId)?.records[reference.rowNumber];\r\n    }\r\n    /**\r\n     *\r\n     * @param {number} assetId\r\n     * @returns {RecordReference?}\r\n     */\r\n    getReferenceFromAssetId(assetId) {\r\n        const assetEntry = this.assetTable.find((assetEntry) => {\r\n            return assetEntry.assetId === assetId;\r\n        });\r\n        if (assetEntry) {\r\n            const referenceBinaryString = assetEntry.reference\r\n                .toString(2)\r\n                .padStart(32);\r\n            return utilService.getReferenceData(referenceBinaryString);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * @typedef {Object} TableRecordReference\r\n     * @param {number} tableId\r\n     * @param {string} name\r\n     * @param {FranchiseFileTable} table\r\n     */\r\n    /**\r\n     *\r\n     * @param {number} tableId\r\n     * @param {number} recordIndex\r\n     * @returns {Array<TableRecordReference>}\r\n     */\r\n    getReferencesToRecord(tableId, recordIndex) {\r\n        const referencedTable = this.getTableById(tableId);\r\n        if (referencedTable) {\r\n            const fullBinary = utilService.getBinaryReferenceData(tableId, recordIndex);\r\n            const hex = utilService.bin2hex(fullBinary).padStart(8, \"0\");\r\n            return this.tables\r\n                .filter((table) => {\r\n                if (table.schema) {\r\n                    return (table.schema &&\r\n                        table.schema.attributes.find((attribute) => {\r\n                            // Generic record types can contain any table type\r\n                            return attribute.type === referencedTable.name\r\n                                || attribute.type === 'record';\r\n                        }));\r\n                }\r\n                else if (table.isArray && referencedTable.schema) {\r\n                    // If the referenced table has a schema, we can check its base name.\r\n                    // Some array table names are by the base name like EnumTable[] can contain AwardTypeEnumTableEntry\r\n                    return (table.name.slice(0, table.name.length - 2) ===\r\n                        referencedTable.name ||\r\n                        table.name.slice(0, table.name.length - 2) ===\r\n                            referencedTable.schema.base);\r\n                }\r\n                else if (table.isArray) {\r\n                    return (table.name.slice(0, table.name.length - 2) ===\r\n                        referencedTable.name);\r\n                }\r\n            })\r\n                .filter((table) => {\r\n                return table.data.indexOf(hex, 0, \"hex\") !== -1;\r\n            })\r\n                .map((table) => {\r\n                return {\r\n                    tableId: table.header.tableId,\r\n                    name: table.name,\r\n                    table: table,\r\n                };\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction getTableStartOffsetByGameYear(gameYear) {\r\n    switch (gameYear) {\r\n        case 19:\r\n            return 0x90;\r\n        case 20:\r\n        case 21:\r\n        default:\r\n            return 0x94;\r\n    }\r\n}\r\nfunction unpackFile(data, type) {\r\n    let offset = 0;\r\n    if (type.format === Constants.FORMAT.FRANCHISE) {\r\n        offset = COMPRESSED_DATA_OFFSET;\r\n    }\r\n    return zlib.inflateSync(data.slice(offset));\r\n}\r\nfunction _packFile(data, options) {\r\n    return new Promise((resolve, reject) => {\r\n        if (options && options.sync) {\r\n            const newData = zlib.deflateSync(data, {\r\n                windowBits: 15,\r\n            });\r\n            resolve(newData);\r\n        }\r\n        else {\r\n            zlib.deflate(data, {\r\n                windowBits: 15,\r\n            }, function (err, newData) {\r\n                if (err)\r\n                    reject(err);\r\n                resolve(newData);\r\n            });\r\n        }\r\n    });\r\n}\r\nfunction _save(destination, packedContents, callback) {\r\n    fs.writeFile(destination, packedContents, callback);\r\n}\r\nfunction _saveSync(destination, packedContents) {\r\n    fs.writeFileSync(destination, packedContents);\r\n}\r\n/**\r\n * @typedef {Object} FileType\r\n * @property {string} format\r\n * @property {number} year\r\n * @property {boolean} compressed\r\n */\r\n/**\r\n *\r\n * @param {Buffer} data\r\n * @param {FranchiseFileSettings} settings\r\n * @returns {FileType}\r\n */\r\nfunction getFileType(data, settings) {\r\n    const isDataCompressed = isCompressed(data);\r\n    const format = getFormat(data, isDataCompressed);\r\n    const year = settings?.gameYearOverride ?? getGameYear(data, isDataCompressed, format);\r\n    return {\r\n        format: format,\r\n        compressed: isDataCompressed,\r\n        year: year,\r\n    };\r\n}\r\n/**\r\n *\r\n * @param {Buffer} data\r\n * @returns {Boolean}\r\n */\r\nfunction isCompressed(data) {\r\n    const DECOMPRESSED_HEADER = Buffer.from([0x46, 0x72, 0x54, 0x6b]); // FrTk\r\n    if (Buffer.compare(data.slice(0, 4), DECOMPRESSED_HEADER) === 0) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n *\r\n * @param {Buffer} data\r\n * @param {Boolean} isCompressed\r\n * @returns {string}\r\n */\r\nfunction getFormat(data, isCompressed) {\r\n    if (isCompressed) {\r\n        const ZLIB_HEADER = Buffer.from([0x78, 0x9c]);\r\n        if (Buffer.compare(data.slice(0, 2), ZLIB_HEADER) === 0) {\r\n            return \"franchise-common\";\r\n        }\r\n        else {\r\n            return \"franchise\";\r\n        }\r\n    }\r\n    else {\r\n        // very simple check based on file length.\r\n        // This assumes the common files are smaller than 9,000 KB.\r\n        if (data.length > 0x895440) {\r\n            return \"franchise\";\r\n        }\r\n        else {\r\n            return \"franchise-common\";\r\n        }\r\n    }\r\n}\r\n/**\r\n *\r\n * @param {Buffer} data\r\n * @param {Boolean} isCompressed\r\n * @param {string} format\r\n * @returns {number}\r\n */\r\nfunction getGameYear(data, isCompressed, format) {\r\n    const schemaMax = [\r\n        {\r\n            year: 19,\r\n            max: 95,\r\n        },\r\n        {\r\n            year: 26,\r\n            max: 999,\r\n        },\r\n    ];\r\n    if (isCompressed) {\r\n        // look at the max schemas per year. M19 schemas will be less than or equal to 95,\r\n        // while M20 schemas can be anywhere from 96 to 999 because the last schema hasn't been made yet.\r\n        // Once M21 releases, the M20 schema max will be updated with the final number.\r\n        if (format === Constants.FORMAT.FRANCHISE_COMMON) {\r\n            return null;\r\n        }\r\n        // M19 = RL12\r\n        // M20 = M20\r\n        // M21 = M21\r\n        const yearIdentifier = data.slice(0x22, 0x25);\r\n        if (yearIdentifier[0] === 0x52) {\r\n            return 19;\r\n        }\r\n        else if (yearIdentifier[2] === 0x30) {\r\n            return 20;\r\n        }\r\n        else if (yearIdentifier[2] === 0x31) {\r\n            return 21;\r\n        }\r\n        else if (yearIdentifier[2] === 0x32) {\r\n            return 22;\r\n        }\r\n        else if (yearIdentifier[2] === 0x33) {\r\n            return 23;\r\n        }\r\n        else if (yearIdentifier[2] === 0x34 || yearIdentifier[2] === \"d\" || data[0x2A] === 0x34) {\r\n            return 24;\r\n        }\r\n        else if (data[0x2A] === 0x35) {\r\n            // M25 has year indicator in a different location\r\n            return 25;\r\n        }\r\n        else if (data[0x2A] === 0x36) {\r\n            return 26;\r\n        }\r\n        else {\r\n            const schemaMajor = getCompressedSchema(data).major;\r\n            const year = schemaMax.find((schema) => {\r\n                return schema.max >= schemaMajor;\r\n            }).year;\r\n            return year;\r\n        }\r\n    }\r\n    else {\r\n        const schemaMajor = getDecompressedM20Schema(data).major;\r\n        if (schemaMajor === 0) {\r\n            // M19 did not include schema info in uncompressed files.\r\n            return 19;\r\n        }\r\n        else {\r\n            // M21 and M20 have very similar formats. We can tell M21 because it has a table with 'M21' in the name.\r\n            if (data.indexOf(\"M21\") > -1) {\r\n                return 21;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @typedef {Object} SchemaMetadata\r\n * @property {string?} gameYear\r\n * @property {number?} major\r\n * @property {number?} minor\r\n * @property {string?} path\r\n */\r\n/**\r\n *\r\n * @param {Buffer} data\r\n * @param {FileType} type\r\n * @returns {SchemaMetadata}\r\n */\r\nfunction getSchemaMetadata(data, type) {\r\n    let schemaMeta = {\r\n        gameYear: type.year,\r\n    };\r\n    if (type.compressed) {\r\n        if (type.format === Constants.FORMAT.FRANCHISE_COMMON) {\r\n            // Compressed FTC files do not contain the schema information.\r\n            // We need to get it later, after we inflate the file.\r\n            return;\r\n        }\r\n        const schemaData = getCompressedSchema(data);\r\n        schemaMeta.major = schemaData.major;\r\n        schemaMeta.minor = schemaData.minor;\r\n    }\r\n    else {\r\n        if (type.year === 19) {\r\n            // M19 did not include schema info in uncompressed files.\r\n            schemaMeta.major = 0;\r\n            schemaMeta.minor = 0;\r\n        }\r\n        else {\r\n            const schemaData = getDecompressedM20Schema(data);\r\n            schemaMeta.major = schemaData.major;\r\n            schemaMeta.minor = schemaData.minor;\r\n        }\r\n    }\r\n    return schemaMeta;\r\n}\r\n/**\r\n * @typedef PartialSchemaMetadata\r\n * @property {number} major\r\n * @property {number} minor\r\n */\r\n/**\r\n *\r\n * @param {Buffer} data\r\n * @returns {PartialSchemaMetadata}\r\n */\r\nfunction getCompressedSchema(data) {\r\n    return {\r\n        major: data.readUInt32LE(0x3e),\r\n        minor: data.readUInt32LE(0x42),\r\n    };\r\n}\r\nfunction getDecompressedM20Schema(data) {\r\n    return {\r\n        major: data.readUInt32BE(0x2c),\r\n        minor: data.readUInt32BE(0x28),\r\n    };\r\n}\r\nexport default FranchiseFile;\r\n","import FranchiseFile from \"./FranchiseFile\";\r\nimport FranchiseFileTable from \"./FranchiseFileTable\";\r\nimport FranchiseFileRecord from \"./FranchiseFileRecord\";\r\nimport FranchiseFileField from \"./FranchiseFileField\";\r\nimport FranchiseFileSettings from \"./FranchiseFileSettings\";\r\nimport FranchiseFileTable2Field from \"./FranchiseFileTable2Field\";\r\nimport FranchiseFileTable3Field from \"./FranchiseFileTable3Field\";\r\nimport FranchiseSchema from \"./FranchiseSchema\";\r\nimport FranchiseEnum from \"./FranchiseEnum\";\r\nimport FranchiseEnumValue from \"./FranchiseEnumValue\";\r\nimport utilService from \"./services/utilService\";\r\nimport { IsonProcessor } from \"./services/isonProcessor\";\r\nimport { generateSchemaV2 } from \"./services/schemaGeneratorV2\";\r\nimport schemaGenerator from \"./services/schemaGenerator\";\r\nimport schemaPicker from \"./services/schemaPicker\";\r\nimport { readChviRecord } from \"./services/TDB2Converter\";\r\n\r\nconst create = FranchiseFile.create;\r\n\r\nexport {\r\n    create,\r\n    FranchiseEnum,\r\n    FranchiseEnumValue,\r\n    FranchiseFile,\r\n    FranchiseFileField,\r\n    FranchiseFileRecord,\r\n    FranchiseFileSettings,\r\n    FranchiseFileTable,\r\n    FranchiseFileTable2Field,\r\n    FranchiseFileTable3Field,\r\n    FranchiseSchema,\r\n    generateSchemaV2,\r\n    IsonProcessor,\r\n    readChviRecord,\r\n    schemaGenerator,\r\n    schemaPicker,\r\n    utilService\r\n};\r\n\r\nexport default FranchiseFile;"],"names":["BitView","parser","require$$0","__filename","__dirname","EventEmitter","defaultOptions","METADATA_SYMBOL","xmlNode","fs","getLengthOfUnformattedValue","COMPRESSED_DATA_OFFSET","readTableName","FranchiseTable3FieldStrategy","name","M19Table2FieldStrategy","M20Table2FieldStrategy","M24Table3FieldStrategy","isonProcessor","M25Table3FieldStrategy","M26Table3FieldStrategy","schemaPickerService"],"mappings":";;;;;;;;;AAAO,MAAM,MAAM,GAAG;AACtB,IAAI,WAAW,EAAE,WAAW;AAC5B,IAAI,kBAAkB,EAAE,kBAAkB;AAC1C,CAAC,CAAC;AACF,gBAAe;AACf,IAAI,MAAM;AACV,CAAC;;;;;;;;;;;;;;ECND,CAAC,UAAU,IAAI,EAAE;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,IAAI,OAAO,GAAG,UAAU,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE;AACxD,GAAC,IAAI,QAAQ,GAAG,MAAM,YAAY,WAAW;KAC1C,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,YAAY,MAAM,CAAC;;GAE5D,IAAI,CAAC,QAAQ,EAAE;AAChB,IAAE,MAAM,IAAI,KAAK,CAAC,6CAA6C,CAAC;AAChE,GAAA;;AAEA,GAAC,UAAU,GAAG,UAAU,IAAI,CAAC;GAC5B,UAAU,GAAG,UAAU,IAAI,MAAM,CAAC,UAAU,sBAAsB,MAAM,CAAC,MAAM;;AAEhF,GAAC,IAAI,CAAC,KAAK,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC,MAAM,IAAI,MAAM,EAAE,UAAU,EAAE,UAAU,CAAC;;AAE7E,GAAC,IAAI,CAAC,SAAS,GAAG,KAAK;EACvB,CAAC;;AAED;AACA;EACA,OAAO,CAAC,QAAQ,GAAG,IAAI,QAAQ,CAAC,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEnD,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,EAAE,QAAQ,EAAE;GAClD,GAAG,EAAE,YAAY,EAAE,OAAO,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA,CAAE;GAChH,UAAU,EAAE,IAAI;AACjB,GAAC,YAAY,EAAE;AACf,GAAC,CAAC;;EAEF,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,EAAE,YAAY,EAAE;GACtD,GAAG,EAAE,YAAY,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA,CAAE;GAC9C,UAAU,EAAE,IAAI;AACjB,GAAC,YAAY,EAAE;AACf,GAAC,CAAC;;EAEF,OAAO,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,MAAM,EAAE,EAAE,EAAE;GACjD,IAAI,EAAE,EAAE;AACT,IAAE,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,MAAM,GAAG,CAAC,CAAC;AAC9C,GAAA,CAAE,MAAM;AACR,IAAE,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK,MAAM,GAAG,CAAC,CAAC,CAAC;AACjD,GAAA;EACA,CAAC;;EAED,OAAO,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE;AAC5D,GAAC,IAAI,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,MAAM,CAAC;;AAEjD,GAAC,IAAI,IAAI,GAAG,SAAS,EAAE;AACvB,IAAE,MAAM,IAAI,KAAK,CAAC,aAAa,GAAG,IAAI,GAAG,sBAAsB,GAAG,MAAM,GAAG,IAAI,GAAG,SAAS,GAAG,YAAY,CAAC;AAC3G,GAAA;;GAEC,IAAI,KAAK,GAAG,CAAC;GACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG;AAC5B,IAAE,IAAI,SAAS,GAAG,IAAI,GAAG,CAAC;AAC1B,IAAE,IAAI,SAAS,GAAG,MAAM,GAAG,CAAC;IAC1B,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC;;AAE3C;AACA,IAAE,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,SAAS,CAAC;;IAE7C,IAAI,IAAI,EAAE,QAAQ;AACpB,IAAE,IAAI,IAAI,CAAC,SAAS,EAAE;AACtB;AACA,KAAG,IAAI,GAAG,EAAE,IAAI,IAAI,IAAI,CAAC;AACzB;AACA,KAAG,QAAQ,GAAG,CAAC,WAAW,KAAK,CAAC,GAAG,IAAI,GAAG,SAAS,CAAC,IAAI,IAAI;;KAEzD,KAAK,KAAK,IAAI;KACd,KAAK,IAAI,QAAQ;AACpB,IAAA,CAAG,MAAM;AACT;AACA,KAAG,IAAI,GAAG,EAAE,IAAI,IAAI,IAAI,CAAC;AACzB;AACA,KAAG,QAAQ,GAAG,CAAC,WAAW,IAAI,SAAS,IAAI,IAAI;;AAE/C,KAAG,KAAK,IAAI,QAAQ,IAAI,CAAC;AACzB,IAAA;;IAEE,MAAM,IAAI,IAAI;IACd,CAAC,IAAI,IAAI;AACX,GAAA;;GAEC,IAAI,MAAM,EAAE;AACb;AACA;AACA;AACA,IAAE,IAAI,IAAI,KAAK,EAAE,IAAI,KAAK,IAAI,CAAC,KAAK,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE;KAC7C,KAAK,IAAI,EAAE,IAAI,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC;AAClC,IAAA;;AAEA,IAAE,OAAO,KAAK;AACd,GAAA;;GAEC,OAAO,KAAK,KAAK,CAAC;EACnB,CAAC;;EAED,OAAO,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE;AAC3D,GAAC,IAAI,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,MAAM,CAAC;;AAEjD,GAAC,IAAI,IAAI,GAAG,SAAS,EAAE;AACvB,IAAE,MAAM,IAAI,KAAK,CAAC,aAAa,GAAG,IAAI,GAAG,sBAAsB,GAAG,MAAM,GAAG,IAAI,GAAG,SAAS,GAAG,YAAY,CAAC;AAC3G,GAAA;;GAEC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG;AAC5B,IAAE,IAAI,SAAS,GAAG,IAAI,GAAG,CAAC;AAC1B,IAAE,IAAI,SAAS,GAAG,MAAM,GAAG,CAAC;AAC5B,IAAE,IAAI,UAAU,GAAG,MAAM,IAAI,CAAC;AAC9B,IAAE,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,SAAS,CAAC;;AAEhD,IAAE,IAAI,IAAI,EAAE,SAAS,EAAE,QAAQ;AAC/B,IAAE,IAAI,IAAI,CAAC,SAAS,EAAE;AACtB;AACA,KAAG,IAAI,GAAG,EAAE,EAAE,IAAI,KAAK,CAAC;AACxB;AACA,KAAG,SAAS,GAAG,CAAC,KAAK,KAAK,IAAI,GAAG,CAAC,GAAG,KAAK,CAAC,IAAI,IAAI;;AAEnD,KAAG,IAAI,SAAS,GAAG,CAAC,GAAG,SAAS,GAAG,KAAK;AACxC;AACA,KAAG,QAAQ,GAAG,EAAE,IAAI,IAAI,SAAS,CAAC;;AAElC,KAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;MACrB,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,QAAQ;SAC/B,SAAS,IAAI,SAAS,CAAC;;AAE9B,IAAA,CAAG,MAAM;AACT;AACA,KAAG,IAAI,GAAG,EAAE,IAAI,IAAI,KAAK,CAAC;AAC1B;AACA,KAAG,SAAS,GAAG,KAAK,GAAG,IAAI;KACxB,KAAK,KAAK,KAAK;;AAElB;AACA,KAAG,QAAQ,GAAG,EAAE,IAAI,IAAI,SAAS,CAAC;;AAElC,KAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;MACrB,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,QAAQ;SAC/B,SAAS,IAAI,SAAS,CAAC;AAC9B,IAAA;;IAEE,MAAM,IAAI,KAAK;IACf,CAAC,IAAI,KAAK;AACZ,GAAA;EACA,CAAC;;AAED,EAAA,OAAO,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,MAAM,EAAE;AACjD,GAAC,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC;EAC5C,CAAC;AACD,EAAA,OAAO,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,MAAM,EAAE;GAC7C,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC;EACrC,CAAC;AACD,EAAA,OAAO,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,MAAM,EAAE;GAC9C,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,KAAK,CAAC;EACtC,CAAC;AACD,EAAA,OAAO,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,MAAM,EAAE;GAC9C,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,EAAE,IAAI,CAAC;EACtC,CAAC;AACD,EAAA,OAAO,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,MAAM,EAAE;GAC/C,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,EAAE,KAAK,CAAC;EACvC,CAAC;AACD,EAAA,OAAO,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,MAAM,EAAE;GAC9C,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,EAAE,IAAI,CAAC;EACtC,CAAC;AACD,EAAA,OAAO,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,MAAM,EAAE;GAC/C,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,EAAE,KAAK,CAAC;EACvC,CAAC;AACD,EAAA,OAAO,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,MAAM,EAAE;AACjD,GAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;GACrD,OAAO,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;EACtC,CAAC;AACD,EAAA,OAAO,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,MAAM,EAAE;AACjD,GAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AACtD;AACA,GAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;GACxD,OAAO,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;EACtC,CAAC;;EAED,OAAO,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,MAAM,EAAE,KAAK,EAAE;AACxD,GAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;EACvC,CAAC;EACD,OAAO,CAAC,SAAS,CAAC,OAAO;EACzB,OAAO,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,MAAM,EAAE,KAAK,EAAE;GACrD,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;EAC/B,CAAC;EACD,OAAO,CAAC,SAAS,CAAC,QAAQ;EAC1B,OAAO,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,MAAM,EAAE,KAAK,EAAE;GACtD,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC;EAChC,CAAC;EACD,OAAO,CAAC,SAAS,CAAC,QAAQ;EAC1B,OAAO,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,MAAM,EAAE,KAAK,EAAE;GACtD,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC;EAChC,CAAC;EACD,OAAO,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,MAAM,EAAE,KAAK,EAAE;GACvD,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,EAAE,KAAK,CAAC;AACtC,GAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;EACxD,CAAC;EACD,OAAO,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,MAAM,EAAE,KAAK,EAAE;GACvD,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,EAAE,KAAK,CAAC;AACtC,GAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;AACxD,GAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;EAC3D,CAAC;EACD,OAAO,CAAC,SAAS,CAAC,cAAc,GAAG,UAAU,MAAM,EAAE,UAAU,EAAE;AACjE,GAAC,IAAI,MAAM,GAAG,IAAI,UAAU,CAAC,UAAU,CAAC;AACxC,GAAC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;AACtC,IAAE,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AAC7C,GAAA;AACA,GAAC,OAAO,MAAM;EACd,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAA,IAAI,MAAM,GAAG,UAAU,IAAI,EAAE,IAAI,EAAE;AACnC,GAAC,OAAO,YAAY;IAClB,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE;AACzC,KAAG,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC;AAC/D,IAAA;AACA,IAAE,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;AACzC,IAAE,IAAI,CAAC,MAAM,IAAI,IAAI;AACrB,IAAE,OAAO,GAAG;GACZ,CAAE;EACF,CAAC;;AAED,EAAA,IAAI,MAAM,GAAG,UAAU,IAAI,EAAE,IAAI,EAAE;GAClC,OAAO,UAAU,KAAK,EAAE;AACzB,IAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC;AACtC,IAAE,IAAI,CAAC,MAAM,IAAI,IAAI;GACrB,CAAE;EACF,CAAC;;AAED,EAAA,SAAS,eAAe,CAAC,MAAM,EAAE,KAAK,EAAE;GACvC,OAAO,UAAU,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC;AACxC,EAAA;;AAEA,EAAA,SAAS,cAAc,CAAC,MAAM,EAAE,KAAK,EAAE;GACtC,OAAO,UAAU,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC;AACvC,EAAA;;AAEA,EAAA,SAAS,UAAU,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE;AACzC,GAAC,IAAI,KAAK,KAAK,CAAC,EAAE;AAClB,IAAE,OAAO,EAAE;AACX,GAAA;GACC,IAAI,CAAC,GAAG,CAAC;GACT,IAAI,KAAK,GAAG,EAAE;GACd,IAAI,MAAM,GAAG,IAAI;AAClB,GAAC,IAAI,WAAW,GAAG,CAAC,CAAC,KAAK;GACzB,IAAI,CAAC,KAAK,EAAE;AACb,IAAE,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,IAAI,CAAC,CAAC;AAC1D,GAAA;;AAEA;AACA;AACA,GAAC,OAAO,CAAC,GAAG,KAAK,EAAE;AACnB,IAAE,IAAI,CAAC,GAAG,MAAM,CAAC,SAAS,EAAE;;AAE5B;AACA,IAAE,IAAI,CAAC,KAAK,IAAI,EAAE;KACf,MAAM,GAAG,KAAK;;AAEjB;KACG,IAAI,CAAC,WAAW,EAAE;MACjB;AACJ,KAAA;AACA,IAAA;IACE,IAAI,MAAM,EAAE;AACd,KAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;AAChB,IAAA;;AAEA,IAAE,CAAC,EAAE;AACL,GAAA;;AAEA,GAAC,IAAI,MAAM,GAAG,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC;GACnD,IAAI,IAAI,EAAE;AACX,IAAE,IAAI;KACH,OAAO,kBAAkB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;IAC7C,CAAG,CAAC,OAAO,CAAC,EAAE;AACd,KAAG,OAAO,MAAM;AAChB,IAAA;AACA,GAAA,CAAE,MAAM;AACR,IAAE,OAAO,MAAM;AACf,GAAA;AACA,EAAA;;AAEA,EAAA,SAAS,gBAAgB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE;GAChD,IAAI,MAAM,GAAG,KAAK,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;;AAEzC,GAAC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;AAClC,IAAE,MAAM,CAAC,UAAU,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AACpE,GAAA;AACA,EAAA;;AAEA,EAAA,SAAS,eAAe,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE;AAChD,GAAC,IAAI,SAAS,GAAG,iBAAiB,CAAC,MAAM,CAAC;;GAEzC,IAAI,MAAM,GAAG,KAAK,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;AAC5C,GAAC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;AAClC,IAAE,MAAM,CAAC,UAAU,CAAC,CAAC,GAAG,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AAC/D,GAAA;AACA,EAAA;;EAEA,SAAS,iBAAiB,CAAC,GAAG,EAAE;AAChC,GAAC,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,OAAO;AACvB,GAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAClC,IAAE,OAAO,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;AAC7B;AACA,IAAE,IAAI,OAAO,IAAI,IAAI,EAAE;AACvB,KAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;AAClB;AACA,IAAA,CAAG,MAAM,IAAI,OAAO,IAAI,KAAK,EAAE;KAC5B,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC,IAAI,IAAI,CAAC;KAC7B,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,GAAG,IAAI,IAAI,IAAI,CAAC;AAClC;AACA,IAAA,CAAG,MAAM,IAAI,OAAO,IAAI,MAAM,EAAE;KAC7B,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,IAAI,EAAE,IAAI,IAAI,CAAC;AACjC,KAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC;KACtC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,GAAG,IAAI,IAAI,IAAI,CAAC;AAClC;AACA,IAAA,CAAG,MAAM;KACN,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,IAAI,EAAE,IAAI,IAAI,CAAC;AACjC,KAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,IAAI,EAAE,IAAI,IAAI,IAAI,IAAI,CAAC;AAC1C,KAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC;KACtC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,GAAG,IAAI,IAAI,IAAI,CAAC;AAClC,IAAA;AACA,GAAA;;AAEA,GAAC,OAAO,CAAC;AACT,EAAA;;EAEA,IAAI,SAAS,GAAG,UAAU,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE;AAC1D,GAAC,IAAI,QAAQ,GAAG,MAAM,YAAY,WAAW;KAC1C,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,YAAY,MAAM,CAAC;;GAE5D,IAAI,EAAE,MAAM,YAAY,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE;AAChD,IAAE,MAAM,IAAI,KAAK,CAAC,qDAAqD,CAAC;AACxE,GAAA;;GAEC,IAAI,QAAQ,EAAE;AACf,IAAE,IAAI,CAAC,KAAK,GAAG,IAAI,OAAO,CAAC,MAAM,EAAE,UAAU,EAAE,UAAU,CAAC;AAC1D,GAAA,CAAE,MAAM;AACR,IAAE,IAAI,CAAC,KAAK,GAAG,MAAM;AACrB,GAAA;;AAEA,GAAC,IAAI,CAAC,MAAM,GAAG,CAAC;AAChB,GAAC,IAAI,CAAC,WAAW,GAAG,CAAC;GACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC;EACzC,CAAC;;EAED,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,SAAS,EAAE,OAAO,EAAE;AACpD,GAAC,GAAG,EAAE,YAAY,EAAE,OAAO,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,CAAA,CAAE;AAC5D,GAAC,GAAG,EAAE,UAAU,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,CAAA,CAAE;GAC7D,UAAU,EAAE,IAAI;AACjB,GAAC,YAAY,EAAE;AACf,GAAC,CAAC;;EAEF,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,SAAS,EAAE,QAAQ,EAAE;AACrD,GAAC,GAAG,EAAE,YAAY,EAAE,OAAO,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,CAAA,CAAE;AAC7D,GAAC,GAAG,EAAE,UAAU,GAAG,EAAE,EAAE,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,CAAA,CAAE;GAC9D,UAAU,IAAI,IAAI;AACnB,GAAC,YAAY,EAAE;AACf,GAAC,CAAC;;EAEF,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,SAAS,EAAE,UAAU,EAAE;AACvD,GAAC,GAAG,EAAE,YAAY,EAAE,OAAO,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,CAAA,CAAE;GACvD,UAAU,IAAI,IAAI;AACnB,GAAC,YAAY,EAAE;AACf,GAAC,CAAC;;EAEF,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,SAAS,EAAE,WAAW,EAAE;AACxD;AACA;AACA,GAAC,GAAG,EAAE,YAAY,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAA,CAAE;AACxD,GAAC,GAAG,EAAE,UAAU,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,CAAA,CAAE;GAC9C,UAAU,EAAE,IAAI;AACjB,GAAC,YAAY,EAAE;AACf,GAAC,CAAC;;EAEF,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,SAAS,EAAE,QAAQ,EAAE;GACpD,GAAG,EAAE,YAAY,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA,CAAE;GAC9C,UAAU,EAAE,IAAI;AACjB,GAAC,YAAY,EAAE;AACf,GAAC,CAAC;;EAEF,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,SAAS,EAAE,MAAM,EAAE;GAClD,GAAG,EAAE,YAAY,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,CAAA,CAAE;GACvC,UAAU,EAAE,IAAI;AACjB,GAAC,YAAY,EAAE;AACf,GAAC,CAAC;;EAEF,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,SAAS,EAAE,WAAW,EAAE;GACvD,GAAG,EAAE,YAAY,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAA,CAAE;AAClD,GAAC,GAAG,EAAE,UAAU,GAAG,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,GAAG,CAAC,CAAA,CAAE;GACnD,UAAU,EAAE,IAAI;AACjB,GAAC,YAAY,EAAE;AACf,GAAC,CAAC;;EAEF,SAAS,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,IAAI,EAAE,MAAM,EAAE;AACvD,GAAC,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC;AACxD,GAAC,IAAI,CAAC,MAAM,IAAI,IAAI;AACpB,GAAC,OAAO,GAAG;EACX,CAAC;;EAED,SAAS,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,KAAK,EAAE,IAAI,EAAE;AACvD,GAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC;AAC7C,GAAC,IAAI,CAAC,MAAM,IAAI,IAAI;EACpB,CAAC;;EAED,SAAS,CAAC,SAAS,CAAC,WAAW,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC;EACzD,SAAS,CAAC,SAAS,CAAC,QAAQ,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;EACnD,SAAS,CAAC,SAAS,CAAC,SAAS,GAAG,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC;EACrD,SAAS,CAAC,SAAS,CAAC,SAAS,GAAG,MAAM,CAAC,UAAU,EAAE,EAAE,CAAC;EACtD,SAAS,CAAC,SAAS,CAAC,UAAU,GAAG,MAAM,CAAC,WAAW,EAAE,EAAE,CAAC;EACxD,SAAS,CAAC,SAAS,CAAC,SAAS,GAAG,MAAM,CAAC,UAAU,EAAE,EAAE,CAAC;EACtD,SAAS,CAAC,SAAS,CAAC,UAAU,GAAG,MAAM,CAAC,WAAW,EAAE,EAAE,CAAC;EACxD,SAAS,CAAC,SAAS,CAAC,WAAW,GAAG,MAAM,CAAC,YAAY,EAAE,EAAE,CAAC;EAC1D,SAAS,CAAC,SAAS,CAAC,WAAW,GAAG,MAAM,CAAC,YAAY,EAAE,EAAE,CAAC;;EAE1D,SAAS,CAAC,SAAS,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC;EAC1D,SAAS,CAAC,SAAS,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;EACpD,SAAS,CAAC,SAAS,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC;EACtD,SAAS,CAAC,SAAS,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,EAAE,EAAE,CAAC;EACvD,SAAS,CAAC,SAAS,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,EAAE,EAAE,CAAC;EACzD,SAAS,CAAC,SAAS,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,EAAE,EAAE,CAAC;EACvD,SAAS,CAAC,SAAS,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,EAAE,EAAE,CAAC;EACzD,SAAS,CAAC,SAAS,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,EAAE,EAAE,CAAC;EAC3D,SAAS,CAAC,SAAS,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,EAAE,EAAE,CAAC;;AAE3D,EAAA,SAAS,CAAC,SAAS,CAAC,eAAe,GAAG,UAAU,KAAK,EAAE;AACvD,GAAC,OAAO,eAAe,CAAC,IAAI,EAAE,KAAK,CAAC;EACpC,CAAC;;AAED,EAAA,SAAS,CAAC,SAAS,CAAC,cAAc,GAAG,UAAU,KAAK,EAAE;AACtD,GAAC,OAAO,cAAc,CAAC,IAAI,EAAE,KAAK,CAAC;EACnC,CAAC;;EAED,SAAS,CAAC,SAAS,CAAC,gBAAgB,GAAG,UAAU,MAAM,EAAE,KAAK,EAAE;AAChE,GAAC,gBAAgB,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,CAAC;EACtC,CAAC;;EAED,SAAS,CAAC,SAAS,CAAC,eAAe,GAAG,UAAU,MAAM,EAAE,KAAK,EAAE;AAC/D,GAAC,eAAe,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,CAAC;EACrC,CAAC;AACD,EAAA,SAAS,CAAC,SAAS,CAAC,aAAa,GAAG,SAAS,SAAS,EAAE;GACvD,IAAI,KAAK,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC;AACtC,GAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM;AAChC,GAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM;AAC3B,GAAC,KAAK,CAAC,MAAM,GAAG,SAAS;AACzB,GAAC,IAAI,CAAC,MAAM,IAAI,SAAS;AACzB,GAAC,OAAO,KAAK;EACb,CAAC;;EAED,SAAS,CAAC,SAAS,CAAC,cAAc,GAAG,SAAS,MAAM,EAAE,MAAM,EAAE;GAC7D,IAAI,CAAC,MAAM,EAAE;AACd,IAAE,MAAM,GAAG,MAAM,CAAC,QAAQ;AAC1B,GAAA;;AAEA,GAAC,IAAI,WAAW;AAChB,GAAC,OAAO,MAAM,GAAG,CAAC,EAAE;IAClB,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC;AACpC,IAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,WAAW,CAAC;IACzD,MAAM,IAAI,WAAW;AACvB,GAAA;EACA,CAAC;;AAED,EAAA,SAAS,CAAC,SAAS,CAAC,eAAe,GAAG,SAAS,UAAU,EAAE;AAC3D,GAAC,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,CAAC;AAChE,GAAC,IAAI,CAAC,MAAM,KAAK,UAAU,GAAG,CAAC,CAAC;AAChC,GAAC,OAAO,MAAM;EACd,CAAC;;EAED,SAAS,CAAC,SAAS,CAAC,gBAAgB,GAAG,SAAS,MAAM,EAAE,UAAU,EAAE;AACpE,GAAC,IAAI,CAAC,cAAc,CAAC,IAAI,SAAS,CAAC,MAAM,CAAC,EAAE,UAAU,GAAG,CAAC,CAAC;EAC3D,CAAC;;AAED;EAUK,IAAqC,MAAM,CAAC,OAAO,EAAE;AAC1D,GAAC,MAAA,CAAA,OAAA,GAAiB;IAChB,OAAO,EAAE,OAAO;AAClB,IAAE,SAAS,EAAE;IACX;AACF,EAAA;;EAEA,CAAC,CAAK,CAAC,EAAA;;;;;;;ACpfJ,IAAC,WAAW,GAAG,GAAG;AACrB,WAAW,CAAC,YAAY,GAAG,UAAU,aAAa,EAAE;AACpD,IAAI,OAAO,aAAa;AACxB,SAAS,MAAM,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,KAAK;AACvC,QAAQ,IAAI,KAAK,KAAK,CAAC;AACvB,YAAY,OAAO,KAAK,CAAC;AACzB,QAAQ,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,KAAK,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;AAC5D,IAAI,CAAC,EAAE,EAAE,CAAC;AACV,SAAS,MAAM,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,KAAK,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC;AACtE,KAAK;AACL,CAAC,CAAC;AACF,WAAW,CAAC,OAAO,GAAG,UAAU,GAAG,EAAE,GAAG,EAAE;AAC1C,IAAI,MAAM,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;AACxC,IAAI,IAAI,GAAG;AACX,QAAQ,OAAO,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACtC,IAAI,OAAO,GAAG,CAAC;AACf,CAAC,CAAC;AACF,WAAW,CAAC,OAAO,GAAG,UAAU,MAAM,EAAE;AACxC,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;AACvC,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,2DAA2D,EAAE,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACxG,IAAI,CAAC;AACL,SAAS,IAAI,CAAC,WAAW,CAAC,8BAA8B,CAAC,MAAM,CAAC,EAAE;AAClE,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,0DAA0D,CAAC,CAAC,CAAC;AACtF,IAAI,CAAC;AACL,IAAI,OAAO,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC;AACF,WAAW,CAAC,SAAS,GAAG,UAAU,MAAM,EAAE;AAC1C,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;AACvC,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,2DAA2D,EAAE,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACxG,IAAI,CAAC;AACL,SAAS,IAAI,CAAC,WAAW,CAAC,8BAA8B,CAAC,MAAM,CAAC,EAAE;AAClE,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,0DAA0D,CAAC,CAAC,CAAC;AACtF,IAAI,CAAC;AACL,IAAI,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC;AACnE,IAAI,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;AAC5B,QAAQ,OAAO,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;AACrC,IAAI,CAAC;AACL,SAAS;AACT,QAAQ,OAAO,CAAC,CAAC;AACjB,IAAI,CAAC;AACL,CAAC,CAAC;AACF,WAAW,CAAC,SAAS,GAAG,UAAU,KAAK,EAAE;AACzC,IAAI,MAAM,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC;AAC1D,IAAI,IAAI,IAAI,GAAG,IAAI,QAAQ,CAAC,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC;AACxD,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AAC9B,IAAI,MAAM,GAAG,KAAK;AAClB,SAAS,KAAK,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;AACnC,SAAS,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,SAAS,IAAI,CAAC,EAAE,CAAC,CAAC;AAClB,IAAI,OAAO,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;AACzD,CAAC,CAAC;AACF,WAAW,CAAC,SAAS,GAAG,UAAU,IAAI,EAAE,IAAI,EAAE;AAC9C,IAAI,IAAI,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC;AACvB,IAAI,IAAI,IAAI,GAAG,EAAE;AACjB,QAAQ,MAAM,IAAI,UAAU,CAAC,4CAA4C,CAAC,CAAC;AAC3E,IAAI,IAAI,KAAK,EAAE,GAAG,IAAI,CAAC;AACvB,IAAI,IAAI,KAAK,EAAE,GAAG,IAAI,CAAC;AACvB,IAAI,OAAO,IAAI,CAAC;AAChB,CAAC,CAAC;AACF,WAAW,CAAC,OAAO,GAAG,UAAU,GAAG,EAAE;AACrC,IAAI,OAAO,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AAC5D,CAAC,CAAC;AACF,WAAW,CAAC,OAAO,GAAG,UAAU,GAAG,EAAE;AACrC,IAAI,OAAO,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;AACxE,CAAC,CAAC;AACF,WAAW,CAAC,KAAK,GAAG,UAAU,GAAG,EAAE,CAAC,EAAE;AACtC,IAAI,IAAI,GAAG,GAAG,EAAE,CAAC;AACjB,IAAI,IAAI,CAAC,CAAC;AACV,IAAI,IAAI,GAAG,CAAC;AACZ,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE;AACnD,QAAQ,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACnC,IAAI,CAAC;AACL,IAAI,OAAO,GAAG,CAAC;AACf,CAAC,CAAC;AACF,WAAW,CAAC,qBAAqB,GAAG,UAAU,MAAM,EAAE;AACtD,IAAI,MAAM,SAAS,GAAG,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;AACnD,IAAI,IAAI,KAAK,GAAG,EAAE,CAAC;AACnB,IAAI,SAAS,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK;AAChC,QAAQ,MAAM,GAAG,GAAG,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAC9C,QAAQ,IAAI,GAAG,EAAE;AACjB,YAAY,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC5B,QAAQ,CAAC;AACT,IAAI,CAAC,CAAC,CAAC;AACP,IAAI,OAAO,KAAK,CAAC;AACjB,CAAC,CAAC;AACF,WAAW,CAAC,yBAAyB,GAAG,UAAU,MAAM,EAAE;AAC1D,IAAI,MAAM,SAAS,GAAG,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;AACnD,IAAI,IAAI,KAAK,GAAG,EAAE,CAAC;AACnB,IAAI,SAAS,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK;AAChC,QAAQ,MAAM,GAAG,GAAG,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAC9C,QAAQ,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAE;AAC/C,YAAY,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC5B,QAAQ,CAAC;AACT,IAAI,CAAC,CAAC,CAAC;AACP,IAAI,OAAO,KAAK,CAAC;AACjB,CAAC,CAAC;AACF,WAAW,CAAC,WAAW,GAAG,UAAU,IAAI,EAAE;AAC1C,IAAI,IAAI,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;AACxB,IAAI,IAAI;AACR,QAAQ,MAAM,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,OAAO,KAAK;AAC1C,YAAY,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AAC1D,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,KAAK;AACvC,YAAY,OAAO,IAAI,GAAG,IAAI,CAAC;AAC/B,QAAQ,CAAC,CAAC,CAAC;AACX,QAAQ,OAAO,IAAI,CAAC;AACpB,IAAI,CAAC;AACL,IAAI,OAAO,GAAG,EAAE;AAChB,QAAQ,OAAO,IAAI,CAAC;AACpB,IAAI,CAAC;AACL,CAAC,CAAC;AACF,WAAW,CAAC,SAAS,GAAG,UAAU,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE;AAC1D,IAAI,IAAI,KAAK,GAAG,CAAC,EAAE;AACnB,QAAQ,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;AAC5D,IAAI,CAAC;AACL,IAAI,OAAO,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;AACrF,CAAC,CAAC;AACF,WAAW,CAAC,eAAe,GAAG,UAAU,SAAS,EAAE,OAAO,EAAE;AAC5D,IAAI,IAAI,YAAY,CAAC;AACrB,IAAI,IAAI,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;AACpC,QAAQ,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC9C,IAAI,CAAC;AACL,SAAS;AACT,QAAQ,YAAY,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC;AACzC,IAAI,CAAC;AACL,IAAI,IAAI,OAAO,EAAE;AACjB,QAAQ,YAAY,GAAG,YAAY,CAAC,OAAO,EAAE,CAAC;AAC9C,IAAI,CAAC;AACL,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC;AAClB,IAAI,KAAK,IAAI,CAAC,GAAG,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AACvD,QAAQ,KAAK,GAAG,CAAC,KAAK,GAAG,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;AAChD,IAAI,CAAC;AACL,IAAI,OAAO,KAAK,CAAC;AACjB,CAAC,CAAC;AACF,WAAW,CAAC,IAAI,GAAG,UAAU,OAAO,EAAE;AACtC,IAAI,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AACvC,CAAC,CAAC;AACF,WAAW,CAAC,IAAI,GAAG,UAAU,OAAO,EAAE;AACtC,IAAI,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACpC,CAAC,CAAC;AACF,WAAW,CAAC,SAAS,GAAG,UAAU,GAAG,EAAE,SAAS,EAAE,SAAS,EAAE;AAC7D,IAAI,IAAI,SAAS,IAAI,GAAG,CAAC,MAAM,EAAE;AACjC,QAAQ,IAAI,CAAC,GAAG,SAAS,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;AAC3C,QAAQ,OAAO,CAAC,EAAE,EAAE;AACpB,YAAY,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAChC,QAAQ,CAAC;AACT,IAAI,CAAC;AACL,IAAI,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1D,IAAI,OAAO,GAAG,CAAC;AACf,CAAC,CAAC;AACF,WAAW,CAAC,gBAAgB,GAAG,UAAU,IAAI,EAAE;AAC/C,IAAI,OAAO,IAAI,CAAC,UAAU,EAAE;AAC5B,QAAQ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC1C,IAAI,CAAC;AACL,CAAC,CAAC;AACF,WAAW,CAAC,QAAQ,GAAG,UAAU,GAAG,EAAE;AACtC,IAAI,QAAQ,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,YAAY,MAAM,EAAE;AAC9D,CAAC,CAAC;AACF,WAAW,CAAC,8BAA8B,GAAG,UAAU,GAAG,EAAE;AAC5D,IAAI,OAAO,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,KAAK,CAAC;AAC7C,CAAC,CAAC;AACF,WAAW,CAAC,WAAW,GAAG,UAAU,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE;AACrD,IAAI,IAAI,KAAK,GAAG,CAAC,EAAE;AACnB,QAAQ,MAAM,IAAI,KAAK,CAAC,kDAAkD,CAAC,CAAC;AAC5E,IAAI,CAAC;AACL,SAAS,IAAI,KAAK,IAAI,IAAI,CAAC,MAAM,EAAE;AACnC,QAAQ,MAAM,IAAI,KAAK,CAAC,wEAAwE,CAAC,CAAC;AAClG,IAAI,CAAC;AACL,IAAI,IAAI,EAAE,EAAE;AACZ,QAAQ,OAAO,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;AACxH,IAAI,CAAC;AACL,IAAI,OAAO,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;AACpH,CAAC,CAAC;AACF,WAAW,CAAC,QAAQ,GAAG,UAAU,CAAC,EAAE;AACpC,IAAI,OAAO,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AACzE,CAAC,CAAC;AACF,WAAW,CAAC,MAAM,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE;AACrC,IAAI,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACrC,CAAC,CAAC;AACF,WAAW,CAAC,SAAS,GAAG,UAAU,CAAC,EAAE;AACrC,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AAClB,IAAI,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC;AACF,WAAW,CAAC,gBAAgB,GAAG,UAAU,KAAK,EAAE;AAChD,IAAI,OAAO;AACX,QAAQ,SAAS,EAAE,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAC9D,QAAQ,WAAW,EAAE,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;AAC7D,KAAK,CAAC;AACN,CAAC,CAAC;AACF,WAAW,CAAC,0BAA0B,GAAG,CAAC,GAAG,KAAK;AAClD,IAAI,IAAI,EAAE,GAAG,IAAIA,wBAAO,CAAC,GAAG,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC;AAC9C,IAAI,EAAE,CAAC,SAAS,GAAG,IAAI,CAAC;AACxB,IAAI,OAAO,WAAW,CAAC,2BAA2B,CAAC,EAAE,CAAC,CAAC;AACvD,CAAC,CAAC;AACF,WAAW,CAAC,2BAA2B,GAAG,CAAC,EAAE,EAAE,KAAK,GAAG,CAAC,KAAK;AAC7D,IAAI,OAAO;AACX,QAAQ,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;AACtC,QAAQ,SAAS,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,GAAG,EAAE,EAAE,EAAE,CAAC;AAC7C,KAAK,CAAC;AACN,CAAC,CAAC;AACF,WAAW,CAAC,sBAAsB,GAAG,UAAU,OAAO,EAAE,SAAS,EAAE;AACnE,IAAI,MAAM,eAAe,GAAG,WAAW,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;AAC7D,IAAI,MAAM,iBAAiB,GAAG,WAAW,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;AACjE,IAAI,OAAO,eAAe,GAAG,iBAAiB,CAAC;AAC/C,CAAC;;AC3MD,MAAM,kBAAkB,CAAC;AACzB;AACA,IAAI,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,gBAAgB,EAAE;AACtD;AACA,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAC1B;AACA,QAAQ,IAAI,CAAC,MAAM,GAAG,QAAQ,KAAK,CAAC,KAAK,QAAQ,GAAG,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC5E;AACA,QAAQ,IAAI,CAAC,MAAM,GAAG,QAAQ,KAAK,CAAC,KAAK,QAAQ,GAAG,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC5E;AACA,QAAQ,IAAI,CAAC,iBAAiB,GAAG,gBAAgB,GAAG,gBAAgB,GAAG,mBAAmB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;AAC5G,IAAI,CAAC;AACL;AACA,IAAI,IAAI,IAAI,GAAG;AACf,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC;AAC1B,IAAI,CAAC;AACL;AACA,IAAI,IAAI,KAAK,GAAG;AAChB,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC;AAC3B,IAAI,CAAC;AACL;AACA,IAAI,IAAI,KAAK,GAAG;AAChB,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC;AAC3B,IAAI,CAAC;AACL;AACA;AACA,IAAI,IAAI,gBAAgB,GAAG;AAC3B,QAAQ,OAAO,IAAI,CAAC,iBAAiB,CAAC;AACtC,IAAI,CAAC;AACL;AACA;AACA,IAAI,eAAe,CAAC,MAAM,EAAE;AAC5B,QAAQ,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE;AAC5B,YAAY,IAAI,CAAC,iBAAiB,GAAG,GAAG,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;AAC5F,QAAQ,CAAC;AACT,aAAa;AACb,YAAY,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AAClF,QAAQ,CAAC;AACT,IAAI,CAAC;AACL;AACA,CAAC;AAED,SAAS,mBAAmB,CAAC,KAAK,EAAE;AACpC,IAAI,IAAI,KAAK,GAAG,CAAC,EAAE;AACnB,QAAQ,OAAO,WAAW,CAAC,OAAO,CAAC,CAAC,KAAK,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;AACrD,IAAI,CAAC;AACL,IAAI,OAAO,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AACtC;;AC/CA,MAAM,aAAa,CAAC;AACpB;AACA,IAAI,WAAW,CAAC,IAAI,EAAE,OAAO,EAAE,kBAAkB,EAAE;AACnD,QAAQ,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AACtC,YAAY,MAAM,OAAO,GAAG,IAAI,CAAC;AACjC;AACA,YAAY,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;AACvC;AACA,YAAY,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;AAC7C;AACA,YAAY,IAAI,CAAC,mBAAmB,GAAG,OAAO,CAAC,mBAAmB,CAAC;AACnE;AACA,YAAY,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AAC/B,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC9D,gBAAgB,MAAM,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AACnD,gBAAgB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;AACrG,YAAY,CAAC;AACb,YAAY,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,MAAM,CAAC;AACvE,QAAQ,CAAC;AACT,aAAa;AACb,YAAY,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAC9B,YAAY,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;AACpC,YAAY,IAAI,CAAC,mBAAmB,GAAG,kBAAkB,CAAC;AAC1D,YAAY,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AAC/B,YAAY,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;AACjC,QAAQ,CAAC;AACT,IAAI,CAAC;AACL;AACA;AACA,IAAI,IAAI,IAAI,GAAG;AACf,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC;AAC1B,IAAI,CAAC;AACL;AACA;AACA,IAAI,IAAI,OAAO,GAAG;AAClB,QAAQ,OAAO,IAAI,CAAC,QAAQ,CAAC;AAC7B,IAAI,CAAC;AACL;AACA;AACA,IAAI,IAAI,kBAAkB,GAAG;AAC7B,QAAQ,OAAO,IAAI,CAAC,mBAAmB,CAAC;AACxC,IAAI,CAAC;AACL;AACA;AACA,IAAI,IAAI,OAAO,GAAG;AAClB,QAAQ,OAAO,IAAI,CAAC,QAAQ,CAAC;AAC7B,IAAI,CAAC;AACL;AACA,IAAI,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,gBAAgB,EAAE;AACpD,QAAQ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,kBAAkB,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,gBAAgB,CAAC,CAAC,CAAC;AACzF,IAAI,CAAC;AACL;AACA;AACA,IAAI,gBAAgB,CAAC,KAAK,EAAE;AAC5B,QAAQ,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,EAAE,OAAO,MAAM,CAAC,IAAI,KAAK,QAAQ,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,IAAI,MAAM,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACpJ,QAAQ,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;AAClC,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,iEAAiE,EAAE,KAAK,CAAC,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACnI,QAAQ,CAAC;AACT,QAAQ,MAAM,mBAAmB,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,EAAE,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACtH,QAAQ,OAAO,mBAAmB,GAAG,mBAAmB,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;AACtE,IAAI,CAAC;AACL;AACA;AACA,IAAI,2BAA2B,CAAC,KAAK,EAAE;AACvC,QAAQ,IAAI,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE;AAC5C,YAAY,MAAM,aAAa,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;AACrF;AACA,YAAY,MAAM,kBAAkB,GAAG,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AACzE,YAAY,IAAI,kBAAkB,EAAE;AACpC,gBAAgB,MAAM,IAAI,KAAK,CAAC,CAAC,iEAAiE,EAAE,KAAK,CAAC,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACvI,YAAY,CAAC;AACb,YAAY,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;AACpE,QAAQ,CAAC;AACT,QAAQ,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,EAAE,OAAO,MAAM,CAAC,IAAI,KAAK,QAAQ,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,IAAI,MAAM,CAAC,gBAAgB,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/J,QAAQ,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;AAClC,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,iEAAiE,EAAE,KAAK,CAAC,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACnI,QAAQ,CAAC;AACT,QAAQ,MAAM,mBAAmB,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,EAAE,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACtH,QAAQ,OAAO,mBAAmB,GAAG,mBAAmB,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;AACtE,IAAI,CAAC;AACL;AACA;AACA,IAAI,eAAe,CAAC,IAAI,EAAE;AAC1B,QAAQ,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,EAAE,OAAO,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5G,IAAI,CAAC;AACL;AACA,IAAI,eAAe,GAAG;AACtB,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;AACxC,YAAY,OAAO;AACnB,QAAQ,CAAC;AACT,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,UAAU,KAAK;AACrE,YAAY,QAAQ,KAAK,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,GAAG,KAAK,GAAG,UAAU,EAAE;AACzE,QAAQ,CAAC,CAAC,CAAC;AACX,QAAQ,MAAM,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,EAAE,OAAO,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChG,QAAQ,IAAI,CAAC,UAAU,GAAG,kBAAkB,GAAG,QAAQ,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,GAAG,QAAQ,CAAC,gBAAgB,CAAC,MAAM,CAAC;AACvH,QAAQ,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,MAAM,KAAK;AAC1C,YAAY,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACpD,QAAQ,CAAC,CAAC,CAAC;AACX,IAAI,CAAC;AACL;AACA;;;;;;;;;;CCnGA,IAAI,OAAO,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,OAAO,MAAM,CAAC,QAAQ,KAAK,QAAQ,GAAG,UAAU,GAAG,EAAE,EAAE,OAAO,OAAO,GAAG,CAAC,CAAA,CAAE,GAAG,UAAU,GAAG,EAAE,EAAE,OAAO,GAAG,IAAI,OAAO,MAAM,KAAK,UAAU,IAAI,GAAG,CAAC,WAAW,KAAK,MAAM,IAAI,GAAG,KAAK,MAAM,CAAC,SAAS,GAAG,QAAQ,GAAG,OAAO,GAAG,CAAC,CAAA,CAAE;;AAE5Q,CAAA,MAAM,CAAC,cAAc,CAACC,QAAO,EAAE,YAAY,EAAE;AAC7C,GAAE,KAAK,EAAE;AACT,EAAC,CAAC;AACF,CAAAA,QAAA,CAAA,MAAc,GAAG,SAAS;;CAE1B,IAAI,YAAY,GAAG,YAAY;AAC/B,GAAE,SAAS,gBAAgB,CAAC,MAAM,EAAE,KAAK,EAAE;AAC3C,KAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC3C,OAAM,IAAI,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC;OACzB,UAAU,CAAC,UAAU,GAAG,UAAU,CAAC,UAAU,IAAI,KAAK;AAC5D,OAAM,UAAU,CAAC,YAAY,GAAG,IAAI;OAC9B,IAAI,OAAO,IAAI,UAAU,EAAE,UAAU,CAAC,QAAQ,GAAG,IAAI;OACrD,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,UAAU,CAAC,GAAG,EAAE,UAAU,CAAC;AAC/D,KAAA;AACA,GAAA;;AAEA,GAAE,OAAO,UAAU,WAAW,EAAE,UAAU,EAAE,WAAW,EAAE;KACrD,IAAI,UAAU,EAAE,gBAAgB,CAAC,WAAW,CAAC,SAAS,EAAE,UAAU,CAAC;KACnE,IAAI,WAAW,EAAE,gBAAgB,CAAC,WAAW,EAAE,WAAW,CAAC;AAC/D,KAAI,OAAO,WAAW;GACtB,CAAG;AACH,CAAA,CAAC,EAAE;;CAEH,IAAI,OAAO,GAAG,UAAiB;;AAE/B,CAAA,SAAS,eAAe,CAAC,QAAQ,EAAE,WAAW,EAAE;AAChD,GAAE,IAAI,EAAE,QAAQ,YAAY,WAAW,CAAC,EAAE;AAC1C,KAAI,MAAM,IAAI,SAAS,CAAC,mCAAmC,CAAC;AAC5D,GAAA;AACA,CAAA;;AAEA,CAAA,SAAS,0BAA0B,CAAC,IAAI,EAAE,IAAI,EAAE;GAC9C,IAAI,CAAC,IAAI,EAAE;AACb,KAAI,MAAM,IAAI,cAAc,CAAC,2DAA2D,CAAC;AACzF,GAAA;GACE,OAAO,IAAI,KAAK,CAAC,OAAO,IAAI,KAAK,WAAW,GAAG,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,QAAQ,IAAI,OAAO,IAAI,KAAK,UAAU,CAAC,GAAG,IAAI,GAAG,IAAI;AACvI,CAAA;;AAEA,CAAA,SAAS,SAAS,CAAC,QAAQ,EAAE,UAAU,EAAE;GACvC,IAAI,OAAO,UAAU,KAAK,UAAU,IAAI,UAAU,KAAK,IAAI,EAAE;AAC/D,KAAI,MAAM,IAAI,SAAS,CAAC,0DAA0D,IAAI,OAAO,UAAU,KAAK,WAAW,GAAG,WAAW,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;AAC7J,GAAA;AACA,GAAE,QAAQ,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,IAAI,UAAU,CAAC,SAAS,EAAE;AACzE,KAAI,WAAW,EAAE;OACX,KAAK,EAAE,QAAQ;OACf,UAAU,EAAE,KAAK;OACjB,QAAQ,EAAE,IAAI;AACpB,OAAM,YAAY,EAAE;AACpB;AACA,IAAG,CAAC;GACF,IAAI,UAAU,EAAE,MAAM,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC,QAAQ,EAAE,UAAU,CAAC,GAAG,QAAQ,CAAC,SAAS,GAAG,UAAU;AACvH,CAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAA,IAAI,MAAM,GAAG,UAAU,SAAS,EAAE;AAClC,GAAE,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC;;GAE5B,SAAS,MAAM,GAAG;AACpB,KAAI,eAAe,CAAC,IAAI,EAAE,MAAM,CAAC;;KAE7B,IAAI,KAAK,GAAG,0BAA0B,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;;AAEhH,KAAI,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI;AAC5B,KAAI,KAAK,CAAC,MAAM,GAAG,EAAE;AACrB,KAAI,KAAK,CAAC,GAAG,GAAG,CAAC;AACjB,KAAI,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAC,IAAI;AACjC,KAAI,OAAO,KAAK;AAChB,GAAA;;AAEA,GAAE,YAAY,CAAC,MAAM,EAAE,CAAC;KACpB,GAAG,EAAE,QAAQ;KACb,KAAK,EAAE,SAAS,MAAM,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE;AAClD,OAAM,KAAK,GAAG,OAAO,KAAK,KAAK,QAAQ,GAAG,KAAK,CAAC,QAAQ,EAAE,GAAG,KAAK;AAClE,OAAM,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC7C,SAAQ,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;AACxB,SAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;AAC5C,SAAQ,IAAI,CAAC,MAAM,IAAI,CAAC;SAChB,IAAI,CAAC,GAAG,EAAE;;SAEV,QAAQ,IAAI,CAAC,KAAK;WAChB,KAAK,KAAK,CAAC,IAAI;aACb,IAAI,CAAC,KAAK,GAAG,EAAE,IAAI,CAAC,cAAc,EAAE;aACpC;;WAEF,KAAK,KAAK,CAAC,QAAQ;aACjB,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE;eAC7B,IAAI,CAAC,mBAAmB,EAAE;AACxC,aAAA;aACY,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE;eAC7B,IAAI,CAAC,gBAAgB,EAAE;AACrC,aAAA;aACY,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE;eAClE,IAAI,CAAC,aAAa,EAAE;AAClC,aAAA;aACY,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE;eAClE,IAAI,CAAC,eAAe,EAAE;AACpC,aAAA;AACA,aAAY,IAAI,CAAC,KAAK,GAAG,EAAE;AAC3B,eAAc,IAAI,IAAI,KAAK,GAAG,EAAE;AAChC,iBAAgB,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,YAAY;AACpD,eAAA;eACc,IAAI,CAAC,eAAe,EAAE;AACpC,aAAA;aACY;;WAEF,KAAK,KAAK,CAAC,WAAW;AAChC,aAAY,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE,IAAI,CAAC,iBAAiB,EAAE;aACvD;;WAEF,KAAK,KAAK,CAAC,KAAK;aACd,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE,IAAI,CAAC,WAAW,EAAE;aACtF;;WAEF,KAAK,KAAK,CAAC,cAAc;aACvB,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE,IAAI,CAAC,aAAa,EAAE;aACxF;AACZ;AACA,OAAA;AACA,OAAM,IAAI,EAAE;AACZ,KAAA;AACA,IAAG,EAAE;KACD,GAAG,EAAE,eAAe;AACxB,KAAI,KAAK,EAAE,SAAS,aAAa,GAAG;AACpC,OAAM,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;AAClD,OAAM,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AAC1C,OAAM,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;AACnB,OAAM,OAAO,GAAG;AAChB,KAAA;AACA,IAAG,EAAE;KACD,GAAG,EAAE,gBAAgB;AACzB,KAAI,KAAK,EAAE,SAAS,cAAc,GAAG;OAC/B,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,IAAI,EAAE;OACtC,IAAI,IAAI,EAAE;SACR,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC;AACpC,OAAA;AACA,OAAM,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,QAAQ;AACjC,OAAM,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO;AACrC,KAAA;AACA,IAAG,EAAE;KACD,GAAG,EAAE,iBAAiB;AAC1B,KAAI,KAAK,EAAE,SAAS,eAAe,GAAG;AACtC,OAAM,IAAI,GAAG,GAAG,IAAI,CAAC,aAAa,EAAE;;OAE9B,IAAI,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC;AACtD,WAAU,IAAI,GAAG,gBAAgB,CAAC,IAAI;AACtC,WAAU,UAAU,GAAG,gBAAgB,CAAC,UAAU;;AAElD,OAAM,IAAI,IAAI,KAAK,IAAI,EAAE;AACzB,SAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,KAAK,CAAC,8BAA8B,GAAG,GAAG,CAAC,CAAC;AAChF,OAAA;;AAEA,OAAM,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,IAAI,QAAQ,CAAC,OAAO,EAAE;SACpD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,EAAE,UAAU,CAAC;AACpD,OAAA;;AAEA,OAAM,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,KAAK,QAAQ,CAAC,OAAO,EAAE;SACrD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,EAAE,UAAU,CAAC;AACrD,OAAA;AACA,OAAM,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,KAAK,QAAQ,CAAC,YAAY,EAAE;AAClE,SAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,UAAU,CAAC,WAAW,KAAK,MAAM,EAAE;AACvF,WAAU,UAAU,GAAG,EAAE,iBAAiB,EAAE,IAAI,EAAE;AAClD,SAAA;SACQ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,EAAE,UAAU,CAAC;SAC5C,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,EAAE,UAAU,CAAC;AACrD,OAAA;;AAEA,OAAM,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI;AAC7B,OAAM,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,IAAI;AAClC,KAAA;AACA,IAAG,EAAE;KACD,GAAG,EAAE,kBAAkB;AAC3B,KAAI,KAAK,EAAE,SAAS,gBAAgB,GAAG;OACjC,IAAI,CAAC,aAAa,EAAE;AAC1B,OAAM,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO;AACrC,KAAA;AACA,IAAG,EAAE;KACD,GAAG,EAAE,qBAAqB;AAC9B,KAAI,KAAK,EAAE,SAAS,mBAAmB,GAAG;OACpC,IAAI,CAAC,aAAa,EAAE;AAC1B,OAAM,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,WAAW;AACpC,KAAA;AACA,IAAG,EAAE;KACD,GAAG,EAAE,mBAAmB;AAC5B,KAAI,KAAK,EAAE,SAAS,iBAAiB,GAAG;AACxC,OAAM,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;AACpB,OAAM,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,EAAE;;OAE/B,IAAI,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;AACvD,WAAU,IAAI,GAAG,gBAAgB,CAAC,IAAI;AACtC,WAAU,UAAU,GAAG,gBAAgB,CAAC,UAAU;;AAElD,OAAM,IAAI,IAAI,KAAK,IAAI,EAAE;AACzB,SAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,KAAK,CAAC,+BAA+B,GAAG,IAAI,CAAC,CAAC;AAClF,OAAA;OACM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,EAAE,UAAU,CAAC;AACrD,OAAM,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI;AAC7B,KAAA;AACA,IAAG,EAAE;KACD,GAAG,EAAE,eAAe;AACxB,KAAI,KAAK,EAAE,SAAS,aAAa,GAAG;OAC9B,IAAI,CAAC,aAAa,EAAE;AAC1B,OAAM,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK;AAC9B,KAAA;AACA,IAAG,EAAE;KACD,GAAG,EAAE,aAAa;AACtB,KAAI,KAAK,EAAE,SAAS,WAAW,GAAG;AAClC,OAAM,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;OAChC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC1E,OAAM,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI;;OAEvB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC;AACnC,KAAA;AACA,IAAG,EAAE;KACD,GAAG,EAAE,iBAAiB;AAC1B,KAAI,KAAK,EAAE,SAAS,eAAe,GAAG;AACtC,OAAM,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,cAAc;AACvC,KAAA;AACA,IAAG,EAAE;KACD,GAAG,EAAE,eAAe;AACxB,KAAI,KAAK,EAAE,SAAS,aAAa,GAAG;OAC9B,IAAI,CAAC,aAAa,EAAE;AAC1B,OAAM,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI;AAC7B,KAAA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG,EAAE;KACD,GAAG,EAAE,iBAAiB;AAC1B,KAAI,KAAK,EAAE,SAAS,eAAe,CAAC,GAAG,EAAE;AACzC;;AAEA,OAAM,IAAI,IAAI,GAAG,MAAM;OACjB,IAAI,YAAY,GAAG,sCAAsC,CAAC,IAAI,CAAC,GAAG,CAAC;OACnE,IAAI,YAAY,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;AACnD,SAAQ,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC;SACtB,IAAI,gBAAgB,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;SAC9C,IAAI,eAAe,GAAG,yCAAyC;SAC/D,IAAI,KAAK,GAAG,eAAe,CAAC,IAAI,CAAC,gBAAgB,CAAC;SAClD,IAAI,UAAU,GAAG,EAAE;AAC3B,SAAQ,OAAO,KAAK,IAAI,IAAI,EAAE;WACpB,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;AACzC,WAAU,KAAK,GAAG,eAAe,CAAC,IAAI,CAAC,gBAAgB,CAAC;AACxD,SAAA;SACQ,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;AAC3C,WAAU,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AAChD,SAAA;SACQ,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,UAAU,EAAE;AACrD,OAAA;OACM,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE;AAC3C,KAAA;AACA,IAAG,CAAC,CAAC;;AAEL,GAAE,OAAO,MAAM;AACf,CAAA,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC;;AAEnB,CAAAA,QAAA,CAAA,OAAe,GAAG,MAAM;;AAExB,CAAA,IAAI,KAAK,GAAG;GACV,IAAI,EAAE,CAAC;GACP,QAAQ,EAAE,CAAC;GACX,WAAW,EAAE,CAAC;GACd,cAAc,EAAE,CAAC;AACnB,GAAE,KAAK,EAAE;EACR;;AAED,CAAA,IAAI,QAAQ,GAAG;GACb,IAAI,EAAE,CAAC;GACP,OAAO,EAAE,CAAC;GACV,OAAO,EAAE,CAAC;AACZ,GAAE,YAAY,EAAE;EACf;;CAED,IAAI,MAAM,GAAGA,QAAA,CAAA,MAAc,GAAG;GAC5B,KAAK,EAAE,OAAO;GACd,IAAI,EAAE,MAAM;GACZ,WAAW,EAAE,aAAa;GAC1B,QAAQ,EAAE,SAAS;GACnB,SAAS,EAAE,UAAU;AACvB,GAAE,KAAK,EAAE;EACR;;;;;;;;;;;CC1TD,IAAI,OAAO,GAAGC,aAAA,EAAmB;;AAEjC,CAAA,IAAI,QAAQ,GAAG,sBAAsB,CAAC,OAAO,CAAC;;AAE9C,CAAA,SAAS,sBAAsB,CAAC,GAAG,EAAE,EAAE,OAAO,GAAG,IAAI,GAAG,CAAC,UAAU,GAAG,GAAG,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,CAAA;;AAE7F,CAAA,IAAc,GAAG,QAAQ,CAAC,OAAO;;;;;;;ACEjC,MAAMC,YAAU,GAAG,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAClD,MAAMC,WAAS,GAAG,OAAO,CAACD,YAAU,CAAC,CAAC;AACtC;AACG,IAAC,eAAe,GAAG,GAAG;AACzB,eAAe,CAAC,YAAY,GAAG,IAAIE,cAAY,EAAE,CAAC;AAClD;AACA,eAAe,CAAC,QAAQ,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,UAAU,KAAK;AAClE,IAAI,MAAM,MAAM,GAAG,EAAE,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;AAClD,IAAI,eAAe,CAAC,kBAAkB,CAAC,MAAM,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;AACvE,CAAC,CAAC;AACF;AACA,eAAe,CAAC,kBAAkB,GAAG,CAAC,MAAM,EAAE,UAAU,EAAE,UAAU,KAAK;AACzE,IAAI,eAAe,CAAC,IAAI,GAAG,EAAE,CAAC;AAC9B,IAAI,eAAe,CAAC,OAAO,GAAG,EAAE,CAAC;AACjC,IAAI,eAAe,CAAC,SAAS,GAAG,EAAE,CAAC;AACnC,IAAI,eAAe,CAAC,UAAU,GAAG,EAAE,CAAC;AACpC,IAAI,eAAe,CAAC,KAAK,GAAG,EAAE,CAAC;AAC/B,IAAI,MAAM,YAAY,GAAG,eAAe,CAAC,eAAe,EAAE,CAAC;AAC3D,IAAI,eAAe,CAAC,GAAG,GAAG,IAAI,SAAS,EAAE,CAAC;AAC1C,IAAI,QAAQ,CAAC,MAAM,EAAE,eAAe,CAAC,GAAG,EAAE,CAAC,GAAG,KAAK;AACnD,QAAQ,IAAI,GAAG,EAAE;AACjB,YAAY,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC/B,YAAY,MAAM,GAAG,CAAC;AACtB,QAAQ,CAAC;AACT,QAAQ,eAAe,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,OAAO,KAAK;AACnD,YAAY,OAAO,CAAC,eAAe,EAAE,CAAC;AACtC,QAAQ,CAAC,CAAC,CAAC;AACX,QAAQ,MAAM,YAAY,GAAG,eAAe,CAAC,UAAU,CAAC,gBAAgB,CAAC;AACzE,QAAQ,MAAM,YAAY,GAAG,eAAe,CAAC,UAAU,CAAC,gBAAgB,CAAC;AACzE,QAAQ,MAAM,YAAY,GAAG,eAAe,CAAC,UAAU,CAAC,YAAY,CAAC;AACrE,QAAQ,MAAM,QAAQ,GAAG,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/D,QAAQ,eAAe,EAAE,CAAC;AAC1B,QAAQ,yBAAyB,EAAE,CAAC;AACpC,QAAQ,eAAe,CAAC,IAAI,GAAG;AAC/B,YAAY,MAAM,EAAE;AACpB,gBAAgB,OAAO,EAAE,QAAQ,CAAC,YAAY,CAAC;AAC/C,gBAAgB,OAAO,EAAE,QAAQ,CAAC,YAAY,CAAC;AAC/C,gBAAgB,UAAU,EAAE,QAAQ,CAAC,QAAQ,CAAC;AAC9C,aAAa;AACb,YAAY,SAAS,EAAE,eAAe,CAAC,OAAO;AAC9C,YAAY,WAAW,EAAE,eAAe,CAAC,SAAS;AAClD,SAAS,CAAC;AACV,QAAQ,IAAI,UAAU,EAAE;AACxB,YAAY,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,UAAU,CAAC,EAAE,IAAI,EAAE;AAC/E,gBAAgB,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE,YAAY,CAAC,CAAC,EAAE,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;AACpG,YAAY,CAAC,CAAC,CAAC;AACf,QAAQ,CAAC;AACT,QAAQ,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,IAAI,CAAC,CAAC;AAChF,IAAI,CAAC,CAAC,CAAC;AACP,IAAI,IAAI,aAAa,GAAG;AACxB,QAAQ,IAAI,EAAE,EAAE;AAChB,QAAQ,GAAG,EAAE,IAAI;AACjB,KAAK,CAAC;AACN,IAAI,eAAe,CAAC,GAAG,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,IAAI,EAAE,KAAK,KAAK;AACvD,QAAQ,IAAI,IAAI,KAAK,YAAY,EAAE;AACnC,YAAY,eAAe,CAAC,UAAU,CAAC,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC;AACzE,YAAY,eAAe,CAAC,UAAU,CAAC,gBAAgB,GAAG,KAAK,CAAC,gBAAgB,CAAC;AACjF,YAAY,eAAe,CAAC,UAAU,CAAC,gBAAgB,GAAG,KAAK,CAAC,gBAAgB,CAAC;AACjF,QAAQ,CAAC;AACT,aAAa,IAAI,IAAI,KAAK,MAAM,EAAE;AAClC,YAAY,IAAI,OAAO,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;AAC3C,YAAY,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAChD,YAAY,aAAa,GAAG;AAC5B,gBAAgB,IAAI,EAAE,MAAM;AAC5B,gBAAgB,GAAG,EAAE,OAAO;AAC5B,aAAa,CAAC;AACd,QAAQ,CAAC;AACT,aAAa,IAAI,IAAI,KAAK,QAAQ,EAAE;AACpC,YAAY,IAAI,MAAM,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;AAC5C,YAAY,MAAM,CAAC,UAAU,GAAG,EAAE,CAAC;AACnC,YAAY,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACjD,YAAY,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AAC5D,YAAY,aAAa,GAAG;AAC5B,gBAAgB,IAAI,EAAE,QAAQ;AAC9B,gBAAgB,GAAG,EAAE,MAAM;AAC3B,aAAa,CAAC;AACd,QAAQ,CAAC;AACT,aAAa,IAAI,IAAI,KAAK,WAAW,EAAE;AACvC,YAAY,IAAI,aAAa,CAAC,IAAI,KAAK,MAAM,EAAE;AAC/C,gBAAgB,aAAa,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;AAChF,YAAY,CAAC;AACb,iBAAiB;AACjB,gBAAgB,MAAM,SAAS,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC;AACxD,gBAAgB,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC7D,YAAY,CAAC;AACb,QAAQ,CAAC;AACT,IAAI,CAAC,CAAC,CAAC;AACP,IAAI,SAAS,SAAS,CAAC,cAAc,EAAE;AACvC,QAAQ,OAAO,IAAI,aAAa,CAAC,cAAc,CAAC,IAAI,EAAE,cAAc,CAAC,OAAO,EAAE,cAAc,CAAC,kBAAkB,CAAC,CAAC;AACjH,IAAI,CAAC;AAEL,IAAI,SAAS,WAAW,CAAC,gBAAgB,EAAE;AAC3C,QAAQ,OAAO;AACf,YAAY,SAAS,EAAE,gBAAgB,CAAC,OAAO;AAC/C,YAAY,cAAc,EAAE,gBAAgB,CAAC,YAAY;AACzD,YAAY,YAAY,EAAE,gBAAgB,CAAC,UAAU;AACrD,YAAY,MAAM,EAAE,gBAAgB,CAAC,IAAI;AACzC,YAAY,MAAM,EAAE,gBAAgB,CAAC,IAAI;AACzC,SAAS,CAAC;AACV,IAAI,CAAC;AAEL,IAAI,SAAS,cAAc,CAAC,mBAAmB,EAAE;AACjD,QAAQ,OAAO;AACf,YAAY,OAAO,EAAE,mBAAmB,CAAC,GAAG;AAC5C,YAAY,MAAM,EAAE,mBAAmB,CAAC,IAAI;AAC5C,YAAY,MAAM,EAAE,mBAAmB,CAAC,IAAI;AAC5C,YAAY,UAAU,EAAE,mBAAmB,CAAC,QAAQ;AACpD,YAAY,UAAU,EAAE,mBAAmB,CAAC,QAAQ;AACpD,YAAY,WAAW,EAAE,mBAAmB,CAAC,MAAM;AACnD,YAAY,SAAS,EAAE,eAAe,CAAC,mBAAmB,CAAC,OAAO,CAAC;AACnE,YAAY,OAAO,EAAE,mBAAmB,CAAC,KAAK;AAC9C,YAAY,MAAM,EAAE,OAAO,CAAC,mBAAmB,CAAC,IAAI,CAAC;AACrD,YAAY,OAAO,EAAE,mBAAmB,CAAC,KAAK;AAC9C,SAAS,CAAC;AACV,QAAQ,SAAS,eAAe,CAAC,UAAU,EAAE;AAC7C,YAAY,IAAI,CAAC,UAAU,EAAE;AAC7B,gBAAgB,OAAO,SAAS,CAAC;AACjC,YAAY,CAAC;AACb,YAAY,UAAU,GAAG,UAAU;AACnC,iBAAiB,OAAO,CAAC,IAAI,MAAM,CAAC,OAAO,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC;AACxD,iBAAiB,OAAO,CAAC,IAAI,MAAM,CAAC,OAAO,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC;AACxD,iBAAiB,OAAO,CAAC,IAAI,MAAM,CAAC,OAAO,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC;AACvD,iBAAiB,OAAO,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC;AACtD,iBAAiB,OAAO,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC;AACtD,iBAAiB,OAAO,CAAC,IAAI,MAAM,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;AAC1D,YAAY,OAAO,UAAU,CAAC;AAC9B,QAAQ,CAAC;AACT,IAAI,CAAC;AAEL,IAAI,SAAS,eAAe,GAAG;AAC/B,QAAQ,YAAY,CAAC,OAAO,CAAC,CAAC,MAAM,KAAK;AACzC,YAAY,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;AACzD,gBAAgB,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK;AACrD,oBAAoB,OAAO,MAAM,CAAC,IAAI,IAAI,EAAE,MAAM,CAAC,IAAI,YAAY,aAAa,CAAC,CAAC;AAClF,gBAAgB,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,KAAK;AACvC,oBAAoB,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACvD,gBAAgB,CAAC,CAAC,CAAC;AACnB,gBAAgB,eAAe,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACxD,YAAY,CAAC;AACb,QAAQ,CAAC,CAAC,CAAC;AACX,IAAI,CAAC;AAEL,IAAI,SAAS,yBAAyB,GAAG;AACzC,QAAQ,eAAe,CAAC,yBAAyB,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;AAC3E,IAAI,CAAC;AAML,IAAI,SAAS,OAAO,CAAC,IAAI,EAAE;AAC3B,QAAQ,OAAO,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,KAAK,EAAE,OAAO,OAAO,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1F,IAAI,CAAC;AAEL,CAAC,CAAC;AACF;AACA,eAAe,CAAC,eAAe,GAAG,MAAM;AACxC,IAAI,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAACD,WAAS,EAAE,oCAAuC,CAAC,CAAC;AACnF,IAAI,MAAM,IAAI,GAAG,EAAE,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AACpD,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC5B,CAAC,CAAC;AACF;AACA,eAAe,CAAC,yBAAyB,GAAG,CAAC,UAAU,KAAK;AAC5D,IAAI,MAAM,eAAe,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,EAAE,OAAO,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACvH,IAAI,eAAe,CAAC,OAAO,CAAC,CAAC,MAAM,KAAK;AACxC,QAAQ,IAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE;AAC7D,YAAY,MAAM,CAAC,uBAAuB,GAAG,MAAM,CAAC,UAAU,CAAC;AAC/D,YAAY,MAAM,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,cAAc,KAAK,EAAE,OAAO,cAAc,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACpH,YAAY,IAAI,UAAU,EAAE;AAC5B,gBAAgB,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,aAAa,EAAE,KAAK,KAAK;AACxE,oBAAoB,IAAI,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,eAAe,KAAK,EAAE,OAAO,eAAe,EAAE,IAAI,KAAK,aAAa,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/I,oBAAoB,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;AAC9E,gBAAgB,CAAC,CAAC,CAAC;AACnB,YAAY,CAAC;AACb,QAAQ,CAAC;AACT,IAAI,CAAC,CAAC,CAAC;AACP,CAAC;;ACxLD,MAAM,aAAa,GAAG,+KAA+K;AACrM,MAAM,QAAQ,GAAG,aAAa,GAAG,8CAA8C;AACxE,MAAM,UAAU,GAAG,GAAG,GAAG,aAAa,GAAG,IAAI,GAAG,QAAQ,GAAG,IAAI;AACtE,MAAM,SAAS,GAAG,IAAI,MAAM,CAAC,GAAG,GAAG,UAAU,GAAG,GAAG,CAAC;;AAE7C,SAAS,aAAa,CAAC,MAAM,EAAE,KAAK,EAAE;AAC7C,EAAE,MAAM,OAAO,GAAG,EAAE;AACpB,EAAE,IAAI,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC;AAChC,EAAE,OAAO,KAAK,EAAE;AAChB,IAAI,MAAM,UAAU,GAAG,EAAE;AACzB,IAAI,UAAU,CAAC,UAAU,GAAG,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM;AAC7D,IAAI,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM;AAC5B,IAAI,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,GAAG,EAAE,KAAK,EAAE,EAAE;AAC9C,MAAM,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACnC,IAAI;AACJ,IAAI,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC;AAC5B,IAAI,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC;AAC9B,EAAE;AACF,EAAE,OAAO,OAAO;AAChB;;AAEO,MAAM,MAAM,GAAG,SAAS,MAAM,EAAE;AACvC,EAAE,MAAM,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC;AACtC,EAAE,OAAO,EAAE,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,WAAW,CAAC;AAC1D;;AAEO,SAAS,OAAO,CAAC,CAAC,EAAE;AAC3B,EAAE,OAAO,OAAO,CAAC,KAAK,WAAW;AACjC;;AAoCA;AACA;;AC/DA,MAAME,gBAAc,GAAG;AACvB,EAAE,sBAAsB,EAAE,KAAK;AAC/B,EAAE,YAAY,EAAE;AAChB,CAAC;;AAED;AACO,SAAS,QAAQ,CAAC,OAAO,EAAE,OAAO,EAAE;AAC3C,EAAE,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAEA,gBAAc,EAAE,OAAO,CAAC;;AAEtD;AACA;AACA;AACA,EAAE,MAAM,IAAI,GAAG,EAAE;AACjB,EAAE,IAAI,QAAQ,GAAG,KAAK;;AAEtB;AACA,EAAE,IAAI,WAAW,GAAG,KAAK;;AAEzB,EAAE,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;AAC/B;AACA,IAAI,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AAC/B,EAAE;AACF;AACA,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;AAE3C,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AACpD,MAAM,CAAC,EAAE,CAAC;AACV,MAAM,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;AAC3B,MAAM,IAAI,CAAC,CAAC,GAAG,EAAE,OAAO,CAAC;AACzB,IAAI,CAAC,KAAK,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AAClC;AACA;AACA,MAAM,IAAI,WAAW,GAAG,CAAC;AACzB,MAAM,CAAC,EAAE;AACT;AACA,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AAC9B,QAAQ,CAAC,GAAG,mBAAmB,CAAC,OAAO,EAAE,CAAC,CAAC;AAC3C,QAAQ;AACR,MAAM,CAAC,MAAM;AACb,QAAQ,IAAI,UAAU,GAAG,KAAK;AAC9B,QAAQ,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AAChC;AACA,UAAU,UAAU,GAAG,IAAI;AAC3B,UAAU,CAAC,EAAE;AACb,QAAQ;AACR;AACA,QAAQ,IAAI,OAAO,GAAG,EAAE;AACxB,QAAQ,OAAO,CAAC,GAAG,OAAO,CAAC,MAAM;AACjC,UAAU,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG;AAC5B,UAAU,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG;AAC5B,UAAU,OAAO,CAAC,CAAC,CAAC,KAAK,IAAI;AAC7B,UAAU,OAAO,CAAC,CAAC,CAAC,KAAK,IAAI;AAC7B,UAAU,OAAO,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC;AAChC,UAAU;AACV,UAAU,OAAO,IAAI,OAAO,CAAC,CAAC,CAAC;AAC/B,QAAQ;AACR,QAAQ,OAAO,GAAG,OAAO,CAAC,IAAI,EAAE;AAChC;;AAEA,QAAQ,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;AACjD;AACA,UAAU,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;AAC5D;AACA,UAAU,CAAC,EAAE;AACb,QAAQ;AACR,QAAQ,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE;AACvC,UAAU,IAAI,GAAG;AACjB,UAAU,IAAI,OAAO,CAAC,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE;AAC3C,YAAY,GAAG,GAAG,0BAA0B;AAC5C,UAAU,CAAC,MAAM;AACjB,YAAY,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC,uBAAuB;AACzD,UAAU;AACV,UAAU,OAAO,cAAc,CAAC,YAAY,EAAE,GAAG,EAAE,wBAAwB,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;AACxF,QAAQ;;AAER,QAAQ,MAAM,MAAM,GAAG,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC;AACnD,QAAQ,IAAI,MAAM,KAAK,KAAK,EAAE;AAC9B,UAAU,OAAO,cAAc,CAAC,aAAa,EAAE,kBAAkB,CAAC,OAAO,CAAC,oBAAoB,EAAE,wBAAwB,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;AACrI,QAAQ;AACR,QAAQ,IAAI,OAAO,GAAG,MAAM,CAAC,KAAK;AAClC,QAAQ,CAAC,GAAG,MAAM,CAAC,KAAK;;AAExB,QAAQ,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;AACjD;AACA,UAAU,MAAM,YAAY,GAAG,CAAC,GAAG,OAAO,CAAC,MAAM;AACjD,UAAU,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;AAC5D,UAAU,MAAM,OAAO,GAAG,uBAAuB,CAAC,OAAO,EAAE,OAAO,CAAC;AACnE,UAAU,IAAI,OAAO,KAAK,IAAI,EAAE;AAChC,YAAY,QAAQ,GAAG,IAAI;AAC3B;AACA,UAAU,CAAC,MAAM;AACjB;AACA;AACA;AACA,YAAY,OAAO,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,wBAAwB,CAAC,OAAO,EAAE,YAAY,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACxI,UAAU;AACV,QAAQ,CAAC,MAAM,IAAI,UAAU,EAAE;AAC/B,UAAU,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;AACjC,YAAY,OAAO,cAAc,CAAC,YAAY,EAAE,eAAe,CAAC,OAAO,CAAC,gCAAgC,EAAE,wBAAwB,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;AAC/I,UAAU,CAAC,MAAM,IAAI,OAAO,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;AAChD,YAAY,OAAO,cAAc,CAAC,YAAY,EAAE,eAAe,CAAC,OAAO,CAAC,8CAA8C,EAAE,wBAAwB,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;AACvK,UAAU,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;AACxC,YAAY,OAAO,cAAc,CAAC,YAAY,EAAE,eAAe,CAAC,OAAO,CAAC,wBAAwB,EAAE,wBAAwB,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;AACjJ,UAAU,CAAC,MAAM;AACjB,YAAY,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE;AAClC,YAAY,IAAI,OAAO,KAAK,GAAG,CAAC,OAAO,EAAE;AACzC,cAAc,IAAI,OAAO,GAAG,wBAAwB,CAAC,OAAO,EAAE,GAAG,CAAC,WAAW,CAAC;AAC9E,cAAc,OAAO,cAAc,CAAC,YAAY;AAChD,gBAAgB,wBAAwB,CAAC,GAAG,CAAC,OAAO,CAAC,oBAAoB,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,OAAO,CAAC,IAAI;AACrJ,gBAAgB,wBAAwB,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;AAC/D,YAAY;;AAEZ;AACA,YAAY,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;AAClC,cAAc,WAAW,GAAG,IAAI;AAChC,YAAY;AACZ,UAAU;AACV,QAAQ,CAAC,MAAM;AACf,UAAU,MAAM,OAAO,GAAG,uBAAuB,CAAC,OAAO,EAAE,OAAO,CAAC;AACnE,UAAU,IAAI,OAAO,KAAK,IAAI,EAAE;AAChC;AACA;AACA;AACA,YAAY,OAAO,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,wBAAwB,CAAC,OAAO,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAC9I,UAAU;;AAEV;AACA,UAAU,IAAI,WAAW,KAAK,IAAI,EAAE;AACpC,YAAY,OAAO,cAAc,CAAC,YAAY,EAAE,qCAAqC,EAAE,wBAAwB,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;AAC5H,UAAU,CAAC,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,CAEtD,MAAM;AACjB,YAAY,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;AAC7C,UAAU;AACV,UAAU,QAAQ,GAAG,IAAI;AACzB,QAAQ;;AAER;AACA;AACA,QAAQ,KAAK,CAAC,EAAE,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC3C,UAAU,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AAClC,YAAY,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;AACxC;AACA,cAAc,CAAC,EAAE;AACjB,cAAc,CAAC,GAAG,mBAAmB,CAAC,OAAO,EAAE,CAAC,CAAC;AACjD,cAAc;AACd,YAAY,CAAC,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AAC7C,cAAc,CAAC,GAAG,MAAM,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;AACtC,cAAc,IAAI,CAAC,CAAC,GAAG,EAAE,OAAO,CAAC;AACjC,YAAY,CAAC,MAAK;AAClB,cAAc;AACd,YAAY;AACZ,UAAU,CAAC,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AACzC,YAAY,MAAM,QAAQ,GAAG,iBAAiB,CAAC,OAAO,EAAE,CAAC,CAAC;AAC1D,YAAY,IAAI,QAAQ,IAAI,EAAE;AAC9B,cAAc,OAAO,cAAc,CAAC,aAAa,EAAE,2BAA2B,EAAE,wBAAwB,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;AACrH,YAAY,CAAC,GAAG,QAAQ;AACxB,UAAU,CAAC,KAAI;AACf,YAAY,IAAI,WAAW,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;AACnE,cAAc,OAAO,cAAc,CAAC,YAAY,EAAE,uBAAuB,EAAE,wBAAwB,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;AAChH,YAAY;AACZ,UAAU;AACV,QAAQ,CAAC;AACT,QAAQ,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AAChC,UAAU,CAAC,EAAE;AACb,QAAQ;AACR,MAAM;AACN,IAAI,CAAC,MAAM;AACX,MAAM,KAAK,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;AACrC,QAAQ;AACR,MAAM;AACN,MAAM,OAAO,cAAc,CAAC,aAAa,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,oBAAoB,EAAE,wBAAwB,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;AAC1H,IAAI;AACJ,EAAE;;AAEF,EAAE,IAAI,CAAC,QAAQ,EAAE;AACjB,IAAI,OAAO,cAAc,CAAC,YAAY,EAAE,qBAAqB,EAAE,CAAC,CAAC;AACjE,EAAE,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;AAC9B,MAAM,OAAO,cAAc,CAAC,YAAY,EAAE,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,wBAAwB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;AACxI,EAAE,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;AAC7B,MAAM,OAAO,cAAc,CAAC,YAAY,EAAE,WAAW;AACrD,UAAU,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;AACjF,UAAU,UAAU,EAAE,CAAC,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACxC,EAAE;;AAEF,EAAE,OAAO,IAAI;AACb;AAEA,SAAS,YAAY,CAAC,IAAI,CAAC;AAC3B,EAAE,OAAO,IAAI,KAAK,GAAG,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,MAAM,CAAC,OAAO,EAAE,CAAC,EAAE;AAC5B,EAAE,MAAM,KAAK,GAAG,CAAC;AACjB,EAAE,OAAO,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAClC,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE;AAChD;AACA,MAAM,MAAM,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,GAAG,KAAK,CAAC;AACtD,MAAM,IAAI,CAAC,GAAG,CAAC,IAAI,OAAO,KAAK,KAAK,EAAE;AACtC,QAAQ,OAAO,cAAc,CAAC,YAAY,EAAE,4DAA4D,EAAE,wBAAwB,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;AAC/I,MAAM,CAAC,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE;AAC7D;AACA,QAAQ,CAAC,EAAE;AACX,QAAQ;AACR,MAAM,CAAC,MAAM;AACb,QAAQ;AACR,MAAM;AACN,IAAI;AACJ,EAAE;AACF,EAAE,OAAO,CAAC;AACV;;AAEA,SAAS,mBAAmB,CAAC,OAAO,EAAE,CAAC,EAAE;AACzC,EAAE,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;AAClF;AACA,IAAI,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1C,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;AAClF,QAAQ,CAAC,IAAI,CAAC;AACd,QAAQ;AACR,MAAM;AACN,IAAI;AACJ,EAAE,CAAC,MAAM;AACT,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC;AAC1B,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG;AAC1B,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG;AAC1B,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG;AAC1B,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG;AAC1B,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG;AAC1B,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG;AAC1B,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK;AACvB,IAAI;AACJ,IAAI,IAAI,kBAAkB,GAAG,CAAC;AAC9B,IAAI,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1C,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AAC9B,QAAQ,kBAAkB,EAAE;AAC5B,MAAM,CAAC,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AACrC,QAAQ,kBAAkB,EAAE;AAC5B,QAAQ,IAAI,kBAAkB,KAAK,CAAC,EAAE;AACtC,UAAU;AACV,QAAQ;AACR,MAAM;AACN,IAAI;AACJ,EAAE,CAAC,MAAM;AACT,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC;AAC1B,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG;AAC1B,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG;AAC1B,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG;AAC1B,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG;AAC1B,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG;AAC1B,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG;AAC1B,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK;AACvB,IAAI;AACJ,IAAI,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1C,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;AAClF,QAAQ,CAAC,IAAI,CAAC;AACd,QAAQ;AACR,MAAM;AACN,IAAI;AACJ,EAAE;;AAEF,EAAE,OAAO,CAAC;AACV;;AAEA,MAAM,WAAW,GAAG,GAAG;AACvB,MAAM,WAAW,GAAG,GAAG;;AAEvB;AACA;AACA;AACA;AACA;AACA,SAAS,gBAAgB,CAAC,OAAO,EAAE,CAAC,EAAE;AACtC,EAAE,IAAI,OAAO,GAAG,EAAE;AAClB,EAAE,IAAI,SAAS,GAAG,EAAE;AACpB,EAAE,IAAI,SAAS,GAAG,KAAK;AACvB,EAAE,OAAO,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAClC,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,WAAW,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,WAAW,EAAE;AAClE,MAAM,IAAI,SAAS,KAAK,EAAE,EAAE;AAC5B,QAAQ,SAAS,GAAG,OAAO,CAAC,CAAC,CAAC;AAC9B,MAAM,CAAC,MAAM,IAAI,SAAS,KAAK,OAAO,CAAC,CAAC,CAAC,EAAE,CAEpC,MAAM;AACb,QAAQ,SAAS,GAAG,EAAE;AACtB,MAAM;AACN,IAAI,CAAC,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AACnC,MAAM,IAAI,SAAS,KAAK,EAAE,EAAE;AAC5B,QAAQ,SAAS,GAAG,IAAI;AACxB,QAAQ;AACR,MAAM;AACN,IAAI;AACJ,IAAI,OAAO,IAAI,OAAO,CAAC,CAAC,CAAC;AACzB,EAAE;AACF,EAAE,IAAI,SAAS,KAAK,EAAE,EAAE;AACxB,IAAI,OAAO,KAAK;AAChB,EAAE;;AAEF,EAAE,OAAO;AACT,IAAI,KAAK,EAAE,OAAO;AAClB,IAAI,KAAK,EAAE,CAAC;AACZ,IAAI,SAAS,EAAE;AACf,GAAG;AACH;;AAEA;AACA;AACA;AACA,MAAM,iBAAiB,GAAG,IAAI,MAAM,CAAC,yDAAyD,EAAE,GAAG,CAAC;;AAEpG;;AAEA,SAAS,uBAAuB,CAAC,OAAO,EAAE,OAAO,EAAE;AACnD;;AAEA;;AAEA,EAAE,MAAM,OAAO,GAAG,aAAa,CAAC,OAAO,EAAE,iBAAiB,CAAC;AAC3D,EAAE,MAAM,SAAS,GAAG,EAAE;;AAEtB,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC3C,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;AACpC;AACA,MAAM,OAAO,cAAc,CAAC,aAAa,EAAE,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,6BAA6B,EAAE,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACtI,IAAI,CAAC,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,SAAS,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,SAAS,EAAE;AAC3E,MAAM,OAAO,cAAc,CAAC,aAAa,EAAE,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,qBAAqB,EAAE,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/H,IAAI,CAAC,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,SAAS,IAAI,CAAC,OAAO,CAAC,sBAAsB,EAAE;AAC/E;AACA,MAAM,OAAO,cAAc,CAAC,aAAa,EAAE,qBAAqB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,mBAAmB,EAAE,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AACrI,IAAI;AACJ;AACA;AACA;AACA,IAAI,MAAM,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,IAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAE;AACrC,MAAM,OAAO,cAAc,CAAC,aAAa,EAAE,aAAa,CAAC,QAAQ,CAAC,uBAAuB,EAAE,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5H,IAAI;AACJ,IAAI,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;AAC7C;AACA,MAAM,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC;AAC7B,IAAI,CAAC,MAAM;AACX,MAAM,OAAO,cAAc,CAAC,aAAa,EAAE,aAAa,CAAC,QAAQ,CAAC,gBAAgB,EAAE,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AACrH,IAAI;AACJ,EAAE;;AAEF,EAAE,OAAO,IAAI;AACb;;AAEA,SAAS,uBAAuB,CAAC,OAAO,EAAE,CAAC,EAAE;AAC7C,EAAE,IAAI,EAAE,GAAG,IAAI;AACf,EAAE,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AAC1B,IAAI,CAAC,EAAE;AACP,IAAI,EAAE,GAAG,YAAY;AACrB,EAAE;AACF,EAAE,OAAO,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAClC,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG;AAC1B,MAAM,OAAO,CAAC;AACd,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC;AAC7B,MAAM;AACN,EAAE;AACF,EAAE,OAAO,EAAE;AACX;;AAEA,SAAS,iBAAiB,CAAC,OAAO,EAAE,CAAC,EAAE;AACvC;AACA,EAAE,CAAC,EAAE;AACL,EAAE,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG;AACxB,IAAI,OAAO,EAAE;AACb,EAAE,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AAC1B,IAAI,CAAC,EAAE;AACP,IAAI,OAAO,uBAAuB,CAAC,OAAO,EAAE,CAAC,CAAC;AAC9C,EAAE;AACF,EAAE,IAAI,KAAK,GAAG,CAAC;AACf,EAAE,OAAO,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,EAAE;AAC3C,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,GAAG,EAAE;AAC5C,MAAM;AACN,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG;AAC1B,MAAM;AACN,IAAI,OAAO,EAAE;AACb,EAAE;AACF,EAAE,OAAO,CAAC;AACV;;AAEA,SAAS,cAAc,CAAC,IAAI,EAAE,OAAO,EAAE,UAAU,EAAE;AACnD,EAAE,OAAO;AACT,IAAI,GAAG,EAAE;AACT,MAAM,IAAI,EAAE,IAAI;AAChB,MAAM,GAAG,EAAE,OAAO;AAClB,MAAM,IAAI,EAAE,UAAU,CAAC,IAAI,IAAI,UAAU;AACzC,MAAM,GAAG,EAAE,UAAU,CAAC,GAAG;AACzB,KAAK;AACL,GAAG;AACH;;AAEA,SAAS,gBAAgB,CAAC,QAAQ,EAAE;AACpC,EAAE,OAAO,MAAM,CAAC,QAAQ,CAAC;AACzB;;AAEA;;AAEA,SAAS,eAAe,CAAC,OAAO,EAAE;AAClC,EAAE,OAAO,MAAM,CAAC,OAAO,CAAC;AACxB;;AAEA;AACA,SAAS,wBAAwB,CAAC,OAAO,EAAE,KAAK,EAAE;AAClD,EAAE,MAAM,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;AAC1D,EAAE,OAAO;AACT,IAAI,IAAI,EAAE,KAAK,CAAC,MAAM;;AAEtB;AACA,IAAI,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG;AAC1C,GAAG;AACH;;AAEA;AACA,SAAS,oBAAoB,CAAC,KAAK,EAAE;AACrC,EAAE,OAAO,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM;AAC3C;;ACvaO,MAAM,cAAc,GAAG;AAC9B,IAAI,aAAa,EAAE,KAAK;AACxB,IAAI,mBAAmB,EAAE,IAAI;AAC7B,IAAI,mBAAmB,EAAE,KAAK;AAC9B,IAAI,YAAY,EAAE,OAAO;AACzB,IAAI,gBAAgB,EAAE,IAAI;AAC1B,IAAI,cAAc,EAAE,KAAK;AACzB,IAAI,sBAAsB,EAAE,KAAK;AACjC;AACA,IAAI,aAAa,EAAE,IAAI;AACvB,IAAI,mBAAmB,EAAE,KAAK;AAC9B,IAAI,UAAU,EAAE,IAAI;AACpB,IAAI,aAAa,EAAE,KAAK;AACxB,IAAI,kBAAkB,EAAE;AACxB,MAAM,GAAG,EAAE,IAAI;AACf,MAAM,YAAY,EAAE,IAAI;AACxB,MAAM,SAAS,EAAE;AACjB,KAAK;AACL,IAAI,iBAAiB,EAAE,SAAS,OAAO,EAAE,GAAG,EAAE;AAC9C,MAAM,OAAO,GAAG;AAChB,IAAI,CAAC;AACL,IAAI,uBAAuB,EAAE,SAAS,QAAQ,EAAE,GAAG,EAAE;AACrD,MAAM,OAAO,GAAG;AAChB,IAAI,CAAC;AACL,IAAI,SAAS,EAAE,EAAE;AACjB,IAAI,oBAAoB,EAAE,KAAK;AAC/B,IAAI,OAAO,EAAE,MAAM,KAAK;AACxB,IAAI,eAAe,EAAE,KAAK;AAC1B,IAAI,YAAY,EAAE,EAAE;AACpB,IAAI,eAAe,EAAE,IAAI;AACzB,IAAI,YAAY,EAAE,KAAK;AACvB,IAAI,iBAAiB,EAAE,KAAK;AAC5B,IAAI,YAAY,EAAE,KAAK;AACvB,IAAI,gBAAgB,EAAE,KAAK;AAC3B,IAAI,sBAAsB,EAAE,KAAK;AACjC,IAAI,SAAS,EAAE,SAAS,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC;AAC9C,MAAM,OAAO;AACb,IAAI,CAAC;AACL;AACA,IAAI,eAAe,EAAE,KAAK;AAC1B,CAAC;AACD;AACO,MAAM,YAAY,GAAG,SAAS,OAAO,EAAE;AAC9C,IAAI,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,cAAc,EAAE,OAAO,CAAC;AACrD,CAAC;;AC3CD,IAAIC,iBAAe;;AAEnB,IAAI,OAAO,MAAM,KAAK,UAAU,EAAE;AAClC,EAAEA,iBAAe,GAAG,eAAe;AACnC,CAAC,MAAM;AACP,EAAEA,iBAAe,GAAG,MAAM,CAAC,mBAAmB,CAAC;AAC/C;;AAEe,MAAM,OAAO;AAC5B,EAAE,WAAW,CAAC,OAAO,EAAE;AACvB,IAAI,IAAI,CAAC,OAAO,GAAG,OAAO;AAC1B,IAAI,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;AACpB,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;AACpB,EAAE;AACF,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;AACd;AACA,IAAI,GAAG,GAAG,KAAK,WAAW,EAAE,GAAG,GAAG,YAAY;AAC9C,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;AACnC,EAAE;AACF,EAAE,QAAQ,CAAC,IAAI,EAAE,UAAU,EAAE;AAC7B,IAAI,GAAG,IAAI,CAAC,OAAO,KAAK,WAAW,EAAE,IAAI,CAAC,OAAO,GAAG,YAAY;AAChE,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;AACxD,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;AAC1E,IAAI,CAAC,KAAI;AACT,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;AACtD,IAAI;AACJ;AACA,IAAI,IAAI,UAAU,KAAK,SAAS,EAAE;AAClC;AACA;AACA,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAACA,iBAAe,CAAC,GAAG,EAAE,UAAU,EAAE;AACzE,IAAI;AACJ,EAAE;AACF;AACA,EAAE,OAAO,iBAAiB,GAAG;AAC7B,IAAI,OAAOA,iBAAe;AAC1B,EAAE;AACF;;ACrCA;AACe,SAAS,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC;AAC/C;AACA,IAAI,MAAM,QAAQ,GAAG,EAAE;AACvB,IAAI,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG;AAC9B,SAAS,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG;AAC/B,SAAS,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG;AAC/B,SAAS,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG;AAC/B,SAAS,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG;AAC/B,SAAS,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG;AAC/B,IAAI;AACJ,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;AACf,QAAQ,IAAI,kBAAkB,GAAG,CAAC;AAClC,QAAQ,IAAI,OAAO,GAAG,KAAK,EAAE,OAAO,GAAG,KAAK;AAC5C,QAAQ,IAAI,GAAG,GAAG,EAAE;AACpB,QAAQ,KAAK,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC;AAClC,YAAY,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,EAAE;AAChD,gBAAgB,IAAI,OAAO,IAAI,MAAM,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;AAC5D,oBAAoB,CAAC,IAAI,CAAC,CAAC;AAC3B,oBAAoB,IAAI,UAAU,EAAE,GAAG;AACvC,oBAAoB,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AACpE,oBAAoB,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE;AAC9C,wBAAwB,QAAQ,EAAE,UAAU,EAAE,GAAG;AACjD,4BAA4B,IAAI,GAAG,MAAM,EAAE,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AACjE,4BAA4B,GAAG,EAAE;AACjC,yBAAyB;AACzB,gBAAgB;AAChB,qBAAqB,IAAI,OAAO,IAAI,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC,CAAC,GAAG;AACpE,oBAAoB,CAAC,IAAI,CAAC,CAAC;AAC3B,oBAAoB,MAAM,CAAC,KAAK,CAAC,GAAG,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/D,oBAAoB,CAAC,GAAG,KAAK;AAC7B,gBAAgB,CAAC,KAAK,IAAI,OAAO,IAAI,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;AACnE,oBAAoB,CAAC,IAAI,CAAC,CAAC;AAC3B;AACA;AACA,gBAAgB,CAAC,KAAK,IAAI,OAAO,IAAI,MAAM,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC,CAAC,EAAE;AACrE,oBAAoB,CAAC,IAAI,CAAC,CAAC;AAC3B,oBAAoB,MAAM,CAAC,KAAK,CAAC,GAAG,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AAChE,oBAAoB,CAAC,GAAG,KAAK;AAC7B,gBAAgB,CAAC,KAAK,IAAI,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,IAAI;AACnE,qBAAqB,MAAM,IAAI,KAAK,CAAC,CAAC,eAAe,CAAC,CAAC;;AAEvD,gBAAgB,kBAAkB,EAAE;AACpC,gBAAgB,GAAG,GAAG,EAAE;AACxB,YAAY,CAAC,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AAC3C,gBAAgB,GAAG,OAAO,CAAC;AAC3B,oBAAoB,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC;AACzE,wBAAwB,OAAO,GAAG,KAAK;AACvC,wBAAwB,kBAAkB,EAAE;AAC5C,oBAAoB;AACpB,gBAAgB,CAAC,KAAI;AACrB,oBAAoB,kBAAkB,EAAE;AACxC,gBAAgB;AAChB,gBAAgB,IAAI,kBAAkB,KAAK,CAAC,EAAE;AAC9C,kBAAkB;AAClB,gBAAgB;AAChB,YAAY,CAAC,KAAK,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC;AACzC,gBAAgB,OAAO,GAAG,IAAI;AAC9B,YAAY,CAAC,KAAI;AACjB,gBAAgB,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC;AACjC,YAAY;AACZ,QAAQ;AACR,QAAQ,GAAG,kBAAkB,KAAK,CAAC,CAAC;AACpC,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,gBAAgB,CAAC,CAAC;AAC/C,QAAQ;AACR,IAAI,CAAC,KAAI;AACT,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,8BAA8B,CAAC,CAAC;AACzD,IAAI;AACJ,IAAI,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;AACxB;;AAEA,MAAM,cAAc,GAAG,CAAC,IAAI,EAAE,KAAK,KAAK;AACxC,IAAI,OAAO,KAAK,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;AAC1D,QAAQ,KAAK,EAAE;AACf,IAAI;AACJ,IAAI,OAAO,KAAK;AAChB,CAAC;;AAED,SAAS,aAAa,CAAC,OAAO,EAAE,CAAC,EAAE;AACnC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,IAAI,CAAC,GAAG,cAAc,CAAC,OAAO,EAAE,CAAC,CAAC;;AAElC;AACA,IAAI,IAAI,UAAU,GAAG,EAAE;AACvB,IAAI,OAAO,CAAC,GAAG,OAAO,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AACrG,QAAQ,UAAU,IAAI,OAAO,CAAC,CAAC,CAAC;AAChC,QAAQ,CAAC,EAAE;AACX,IAAI;AACJ,IAAI,kBAAkB,CAAC,UAAU,CAAC;;AAElC;AACA,IAAI,CAAC,GAAG,cAAc,CAAC,OAAO,EAAE,CAAC,CAAC;;AAElC;AACA,IAAI,IAAI,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,EAAE,KAAK,QAAQ,EAAE;AAChE,QAAQ,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC;AAC9D,IAAI,CAAC,KAAK,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AAClC,QAAQ,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC;AAC/D,IAAI;;AAEJ;AACA,IAAI,IAAI,WAAW,GAAG,EAAE;AACxB,IAAI,CAAC,CAAC,EAAE,WAAW,CAAC,GAAG,iBAAiB,CAAC,OAAO,EAAE,CAAC,EAAE,QAAQ,CAAC;AAC9D,IAAI,CAAC,EAAE;AACP,IAAI,OAAO,CAAC,UAAU,EAAE,WAAW,EAAE,CAAC,EAAE;AACxC;;AAEA,SAAS,eAAe,CAAC,OAAO,EAAE,CAAC,EAAE;AACrC;AACA,IAAI,CAAC,GAAG,cAAc,CAAC,OAAO,EAAE,CAAC,CAAC;;AAElC;AACA,IAAI,IAAI,YAAY,GAAG,EAAE;AACzB,IAAI,OAAO,CAAC,GAAG,OAAO,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;AACzD,QAAQ,YAAY,IAAI,OAAO,CAAC,CAAC,CAAC;AAClC,QAAQ,CAAC,EAAE;AACX,IAAI;AACJ,IAAI,kBAAkB,CAAC,YAAY,CAAC;;AAEpC;AACA,IAAI,CAAC,GAAG,cAAc,CAAC,OAAO,EAAE,CAAC,CAAC;;AAElC;AACA,IAAI,MAAM,cAAc,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,EAAE;AACpE,IAAI,IAAI,cAAc,KAAK,QAAQ,IAAI,cAAc,KAAK,QAAQ,EAAE;AACpE,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,kCAAkC,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC;AAC/E,IAAI;AACJ,IAAI,CAAC,IAAI,cAAc,CAAC,MAAM;;AAE9B;AACA,IAAI,CAAC,GAAG,cAAc,CAAC,OAAO,EAAE,CAAC,CAAC;;AAElC;AACA,IAAI,IAAI,gBAAgB,GAAG,IAAI;AAC/B,IAAI,IAAI,gBAAgB,GAAG,IAAI;;AAE/B,IAAI,IAAI,cAAc,KAAK,QAAQ,EAAE;AACrC,QAAQ,CAAC,CAAC,EAAE,gBAAgB,EAAE,GAAG,iBAAiB,CAAC,OAAO,EAAE,CAAC,EAAE,kBAAkB,CAAC;;AAElF;AACA,QAAQ,CAAC,GAAG,cAAc,CAAC,OAAO,EAAE,CAAC,CAAC;;AAEtC;AACA,QAAQ,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AACtD,YAAY,CAAC,CAAC,EAAE,gBAAgB,EAAE,GAAG,iBAAiB,CAAC,OAAO,EAAE,CAAC,CAAC,kBAAkB,CAAC;AACrF,QAAQ;AACR,IAAI,CAAC,MAAM,IAAI,cAAc,KAAK,QAAQ,EAAE;AAC5C;AACA,QAAQ,CAAC,CAAC,EAAE,gBAAgB,EAAE,GAAG,iBAAiB,CAAC,OAAO,EAAE,CAAC,EAAE,kBAAkB,CAAC;;AAElF,QAAQ,IAAI,CAAC,gBAAgB,EAAE;AAC/B,YAAY,MAAM,IAAI,KAAK,CAAC,yDAAyD,CAAC;AACtF,QAAQ;AACR,IAAI;AACJ;AACA,IAAI,OAAO,CAAC,YAAY,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;AACzE;;AAEA,SAAS,iBAAiB,CAAC,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE;AAC7C,IAAI,IAAI,aAAa,GAAG,EAAE;AAC1B,IAAI,MAAM,SAAS,GAAG,OAAO,CAAC,CAAC,CAAC;AAChC,IAAI,IAAI,SAAS,KAAK,GAAG,IAAI,SAAS,KAAK,GAAG,EAAE;AAChD,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,+BAA+B,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;AACvE,IAAI;AACJ,IAAI,CAAC,EAAE;;AAEP,IAAI,OAAO,CAAC,GAAG,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,SAAS,EAAE;AAC3D,QAAQ,aAAa,IAAI,OAAO,CAAC,CAAC,CAAC;AACnC,QAAQ,CAAC,EAAE;AACX,IAAI;;AAEJ,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,SAAS,EAAE;AAClC,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,aAAa,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AACrD,IAAI;AACJ,IAAI,CAAC,EAAE;AACP,IAAI,OAAO,CAAC,CAAC,EAAE,aAAa,CAAC;AAC7B;;AAEA,SAAS,cAAc,CAAC,OAAO,EAAE,CAAC,EAAE;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,CAAC,GAAG,cAAc,CAAC,OAAO,EAAE,CAAC,CAAC;;AAElC;AACA,IAAI,IAAI,WAAW,GAAG,EAAE;AACxB,IAAI,OAAO,CAAC,GAAG,OAAO,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;AACzD,QAAQ,WAAW,IAAI,OAAO,CAAC,CAAC,CAAC;AACjC,QAAQ,CAAC,EAAE;AACX,IAAI;;AAEJ;AACA,IAAI,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,EAAE;AAC1C,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,uBAAuB,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC;AACjE,IAAI;;AAEJ;AACA,IAAI,CAAC,GAAG,cAAc,CAAC,OAAO,EAAE,CAAC,CAAC;AAClC,IAAI,IAAI,YAAY,GAAG,EAAE;AACzB;AACA,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;AAC5D,SAAS,GAAG,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;AAC/D,SAAS,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AACjC,QAAQ,CAAC,EAAE,CAAC;;AAEZ;AACA,QAAQ,OAAO,CAAC,GAAG,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AACzD,YAAY,YAAY,IAAI,OAAO,CAAC,CAAC,CAAC;AACtC,YAAY,CAAC,EAAE;AACf,QAAQ;AACR,QAAQ,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AAChC,YAAY,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC;AACzD,QAAQ;;AAER,IAAI,CAAC,KAAI;AACT,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,mCAAmC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5E,IAAI;AACJ;AACA,IAAI,OAAO;AACX,QAAQ,WAAW;AACnB,QAAQ,YAAY,EAAE,YAAY,CAAC,IAAI,EAAE;AACzC,QAAQ,KAAK,EAAE;AACf,KAAK;AACL;;AAsHA,SAAS,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;AAC5B,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC;AACjC,QAAQ,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,KAAK;AAC7C,IAAI;AACJ,IAAI,OAAO,IAAI;AACf;;AAEA,SAAS,kBAAkB,CAAC,IAAI,CAAC;AACjC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC;AACpB,CAAC,OAAO,IAAI;AACZ;AACA,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC,CAAC;AACtD;;AChXA,MAAM,QAAQ,GAAG,uBAAuB;AACxC,MAAM,QAAQ,GAAG,oCAAoC;AACrD;AACA;;AAEA;AACA,MAAM,QAAQ,GAAG;AACjB,IAAI,GAAG,IAAI,IAAI;AACf;AACA,IAAI,YAAY,EAAE,IAAI;AACtB,IAAI,YAAY,EAAE,IAAI;AACtB,IAAI,SAAS,EAAE,IAAI;AACnB;AACA,CAAC;;AAEc,SAAS,QAAQ,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE,CAAC;AACnD,IAAI,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,QAAQ,EAAE,OAAO,EAAE;AACnD,IAAI,GAAG,CAAC,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,GAAG,OAAO,GAAG;AACnD;AACA,IAAI,IAAI,UAAU,IAAI,GAAG,CAAC,IAAI,EAAE;AAChC;AACA,IAAI,GAAG,OAAO,CAAC,QAAQ,KAAK,SAAS,IAAI,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,OAAO,GAAG;AACtF,SAAS,GAAG,GAAG,GAAG,GAAG,EAAE,OAAO,CAAC;AAC/B,SAAS,IAAI,OAAO,CAAC,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;AACvD,QAAQ,OAAO,SAAS,CAAC,UAAU,EAAE,EAAE,CAAC;AACxC;AACA;AACA,IAAI,CAAC,KAAK,IAAI,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,EAAE;AACnD,QAAQ,OAAO,gBAAgB,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC;AACvD;AACA;AACA,IAAI,CAAC,KAAI;AACT;AACA,QAAQ,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC;AAC/C;AACA,QAAQ,GAAG,KAAK,CAAC;AACjB,YAAY,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE;AACvC,YAAY,MAAM,YAAY,GAAG,KAAK,CAAC,CAAC,CAAC;AACzC,YAAY,IAAI,iBAAiB,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,YAAY,MAAM,6BAA6B,GAAG,IAAI;AACtD,gBAAgB,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG;AAClD,kBAAkB,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,GAAG;;AAElD;AACA,YAAY,GAAG,CAAC,OAAO,CAAC,YAAY;AACpC,oBAAoB,YAAY,CAAC,MAAM,GAAG,CAAC;AAC3C,wBAAwB,YAAY,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC,CAAC;AACtF;AACA,gBAAgB,OAAO,GAAG;AAC1B,YAAY;AACZ,iBAAgB;AAChB,gBAAgB,MAAM,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC;AAC9C,gBAAgB,MAAM,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC;;AAE7C,gBAAgB,IAAI,GAAG,KAAK,CAAC,EAAE,OAAO,GAAG;AACzC,gBAAgB,GAAG,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;AACnD,oBAAoB,GAAG,OAAO,CAAC,SAAS,EAAE,OAAO,GAAG;AACpD,yBAAyB,OAAO,GAAG;AACnC,gBAAgB,CAAC,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;AACxD,oBAAoB,GAAG,SAAS,KAAK,GAAG,EAAE,OAAO,GAAG,CAAC;AACrD,yBAAyB,GAAG,SAAS,KAAK,iBAAiB,EAAE,OAAO,GAAG,CAAC;AACxE,yBAAyB,IAAI,SAAS,KAAK,CAAC,EAAE,IAAI,CAAC,EAAE,iBAAiB,CAAC,CAAC,EAAE,OAAO,GAAG;AACpF,yBAAyB,OAAO,GAAG;AACnC,gBAAgB;AAChB;AACA,gBAAgB,IAAI,CAAC,GAAG,YAAY,EAAE,iBAAiB,GAAG,UAAU;AACpE,gBAAgB,GAAG,YAAY,CAAC;AAChC;AACA,oBAAoB,OAAO,CAAC,CAAC,KAAK,SAAS,MAAM,IAAI,CAAC,CAAC,KAAK,SAAS,CAAC,GAAG,GAAG,GAAG;AAC/E,gBAAgB,CAAC,MAAM;AACvB;AACA,oBAAoB,OAAO,CAAC,CAAC,KAAK,SAAS,MAAM,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,GAAG;AAC/E,gBAAgB;AAChB,YAAY;AACZ,QAAQ,CAAC,KAAI;AACb,YAAY,OAAO,GAAG;AACtB,QAAQ;AACR,IAAI;AACJ;;AAEA,MAAM,aAAa,GAAG,yCAAyC;AAC/D,SAAS,gBAAgB,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC;AACjD,IAAI,GAAG,CAAC,OAAO,CAAC,SAAS,EAAE,OAAO,GAAG;AACrC,IAAI,MAAM,QAAQ,GAAG,UAAU,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;AACrD,IAAI,GAAG,QAAQ,CAAC;AAChB,QAAQ,IAAI,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,EAAE;AACpC,QAAQ,MAAM,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,GAAG,GAAG,GAAG;AACjE,QAAQ,MAAM,YAAY,GAAG,QAAQ,CAAC,CAAC,CAAC;AACxC,QAAQ,MAAM,uBAAuB,GAAG,IAAI;AAC5C,YAAY,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,KAAK;AAChD,cAAc,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,KAAK;;AAEhD,QAAQ,GAAG,YAAY,CAAC,MAAM,GAAG,CAAC,IAAI,uBAAuB,EAAE,OAAO,GAAG;AACzE,aAAa,GAAG,YAAY,CAAC,MAAM,KAAK,CAAC;AACzC,gBAAgB,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC;AACjF,gBAAgB,OAAO,MAAM,CAAC,UAAU,CAAC;AACzC,QAAQ,CAAC,KAAK,GAAG,OAAO,CAAC,YAAY,IAAI,CAAC,uBAAuB,CAAC;AAClE;AACA,YAAY,UAAU,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,QAAQ,CAAC,CAAC,CAAC;AAC1D,YAAY,OAAO,MAAM,CAAC,UAAU,CAAC;AACrC,QAAQ,CAAC,KAAK,OAAO,GAAG;AACxB,IAAI,CAAC,KAAI;AACT,QAAQ,OAAO,GAAG;AAClB,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS,CAAC,MAAM,CAAC;AAC1B,IAAI,GAAG,MAAM,IAAI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;AAC5C,QAAQ,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AAC3C,QAAQ,GAAG,MAAM,KAAK,GAAG,GAAG,MAAM,GAAG,GAAG;AACxC,aAAa,GAAG,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,MAAM,GAAG,GAAG,CAAC,MAAM;AACvD,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;AAC9F,QAAQ,OAAO,MAAM;AACrB,IAAI;AACJ,IAAI,OAAO,MAAM;AACjB;;AAEA,SAAS,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC;AAChC;AACA,IAAI,GAAG,QAAQ,EAAE,OAAO,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC;AAC9C,SAAS,GAAG,MAAM,CAAC,QAAQ,EAAE,OAAO,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC;AACjE,SAAS,GAAG,MAAM,IAAI,MAAM,CAAC,QAAQ,EAAE,OAAO,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC;AAC3E,SAAS,MAAM,IAAI,KAAK,CAAC,8DAA8D;AACvF;;AChIe,SAAS,qBAAqB,CAAC,gBAAgB,EAAE;AAChE,IAAI,IAAI,OAAO,gBAAgB,KAAK,UAAU,EAAE;AAChD,QAAQ,OAAO;AACf,IAAI;AACJ,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,gBAAgB,CAAC,EAAE;AACzC,QAAQ,OAAO,CAAC,QAAQ,KAAK;AAC7B,YAAY,KAAK,MAAM,OAAO,IAAI,gBAAgB,EAAE;AACpD,gBAAgB,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,QAAQ,KAAK,OAAO,EAAE;AACzE,oBAAoB,OAAO;AAC3B,gBAAgB;AAChB,gBAAgB,IAAI,OAAO,YAAY,MAAM,IAAI,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;AACzE,oBAAoB,OAAO;AAC3B,gBAAgB;AAChB,YAAY;AACZ,QAAQ;AACR,IAAI;AACJ,IAAI,OAAO,MAAM;AACjB;;ACRA;AACA;AACA;;AAEA;AACA;;AAEe,MAAM,gBAAgB;AACrC,EAAE,WAAW,CAAC,OAAO,CAAC;AACtB,IAAI,IAAI,CAAC,OAAO,GAAG,OAAO;AAC1B,IAAI,IAAI,CAAC,WAAW,GAAG,IAAI;AAC3B,IAAI,IAAI,CAAC,aAAa,GAAG,EAAE;AAC3B,IAAI,IAAI,CAAC,eAAe,GAAG,EAAE;AAC7B,IAAI,IAAI,CAAC,YAAY,GAAG;AACxB,MAAM,MAAM,GAAG,EAAE,KAAK,EAAE,oBAAoB,EAAE,GAAG,GAAG,GAAG,CAAC;AACxD,MAAM,IAAI,GAAG,EAAE,KAAK,EAAE,kBAAkB,EAAE,GAAG,GAAG,GAAG,CAAC;AACpD,MAAM,IAAI,GAAG,EAAE,KAAK,EAAE,kBAAkB,EAAE,GAAG,GAAG,GAAG,CAAC;AACpD,MAAM,MAAM,GAAG,EAAE,KAAK,EAAE,oBAAoB,EAAE,GAAG,GAAG,IAAI,CAAC;AACzD,KAAK;AACL,IAAI,IAAI,CAAC,SAAS,GAAG,EAAE,KAAK,EAAE,mBAAmB,EAAE,GAAG,GAAG,GAAG,CAAC;AAC7D,IAAI,IAAI,CAAC,YAAY,GAAG;AACxB,MAAM,OAAO,EAAE,EAAE,KAAK,EAAE,gBAAgB,EAAE,GAAG,EAAE,GAAG,EAAE;AACpD;AACA;AACA;AACA;AACA;AACA,MAAM,MAAM,GAAG,EAAE,KAAK,EAAE,gBAAgB,EAAE,GAAG,EAAE,GAAG,EAAE;AACpD,MAAM,OAAO,GAAG,EAAE,KAAK,EAAE,iBAAiB,EAAE,GAAG,EAAE,GAAG,EAAE;AACtD,MAAM,KAAK,GAAG,EAAE,KAAK,EAAE,eAAe,EAAE,GAAG,EAAE,GAAG,EAAE;AAClD,MAAM,MAAM,GAAG,EAAE,KAAK,EAAE,iBAAiB,EAAE,GAAG,EAAE,GAAG,EAAE;AACrD,MAAM,WAAW,GAAG,EAAE,KAAK,EAAE,gBAAgB,EAAE,GAAG,EAAE,GAAG,EAAE;AACzD,MAAM,KAAK,GAAG,EAAE,KAAK,EAAE,eAAe,EAAE,GAAG,EAAE,GAAG,EAAE;AAClD,MAAM,KAAK,GAAG,EAAE,KAAK,EAAE,gBAAgB,EAAE,GAAG,EAAE,GAAG,EAAE;AACnD,MAAM,SAAS,EAAE,EAAE,KAAK,EAAE,kBAAkB,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,GAAG,KAAK,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE;AAChH,MAAM,SAAS,EAAE,EAAE,KAAK,EAAE,yBAAyB,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,GAAG,KAAK,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,EAAE;AACvH,KAAK;AACL,IAAI,IAAI,CAAC,mBAAmB,GAAG,mBAAmB;AAClD,IAAI,IAAI,CAAC,QAAQ,GAAG,QAAQ;AAC5B,IAAI,IAAI,CAAC,aAAa,GAAG,aAAa;AACtC,IAAI,IAAI,CAAC,gBAAgB,GAAG,gBAAgB;AAC5C,IAAI,IAAI,CAAC,kBAAkB,GAAG,kBAAkB;AAChD,IAAI,IAAI,CAAC,YAAY,GAAG,YAAY;AACpC,IAAI,IAAI,CAAC,oBAAoB,GAAG,oBAAoB;AACpD,IAAI,IAAI,CAAC,gBAAgB,GAAG,gBAAgB;AAC5C,IAAI,IAAI,CAAC,mBAAmB,GAAG,mBAAmB;AAClD,IAAI,IAAI,CAAC,QAAQ,GAAG,QAAQ;AAC5B,IAAI,IAAI,CAAC,kBAAkB,GAAG,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB;AACjF,EAAE;;AAEF;;AAEA,SAAS,mBAAmB,CAAC,gBAAgB,CAAC;AAC9C,EAAE,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC;AAC/C,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC3C,IAAI,MAAM,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC;AAC1B,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG;AAC7B,OAAO,KAAK,EAAE,IAAI,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;AACzC,OAAO,GAAG,GAAG,gBAAgB,CAAC,GAAG;AACjC;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,aAAa,CAAC,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,aAAa,EAAE,UAAU,EAAE,cAAc,EAAE;AACjG,EAAE,IAAI,GAAG,KAAK,SAAS,EAAE;AACzB,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,IAAI,CAAC,QAAQ,EAAE;AAC9C,MAAM,GAAG,GAAG,GAAG,CAAC,IAAI,EAAE;AACtB,IAAI;AACJ,IAAI,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;AACtB,MAAM,GAAG,CAAC,cAAc,EAAE,GAAG,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC;AAC9D;AACA,MAAM,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,OAAO,EAAE,GAAG,EAAE,KAAK,EAAE,aAAa,EAAE,UAAU,CAAC;AACnG,MAAM,GAAG,MAAM,KAAK,IAAI,IAAI,MAAM,KAAK,SAAS,CAAC;AACjD;AACA,QAAQ,OAAO,GAAG;AAClB,MAAM,CAAC,KAAK,GAAG,OAAO,MAAM,KAAK,OAAO,GAAG,IAAI,MAAM,KAAK,GAAG,CAAC;AAC9D;AACA,QAAQ,OAAO,MAAM;AACrB,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;AACvC,QAAQ,OAAO,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC;AAC3F,MAAM,CAAC,KAAI;AACX,QAAQ,MAAM,UAAU,GAAG,GAAG,CAAC,IAAI,EAAE;AACrC,QAAQ,GAAG,UAAU,KAAK,GAAG,CAAC;AAC9B,UAAU,OAAO,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC;AAC7F,QAAQ,CAAC,KAAI;AACb,UAAU,OAAO,GAAG;AACpB,QAAQ;AACR,MAAM;AACN,IAAI;AACJ,EAAE;AACF;;AAEA,SAAS,gBAAgB,CAAC,OAAO,EAAE;AACnC,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;AACnC,IAAI,MAAM,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC;AACnC,IAAI,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,GAAG,GAAG,EAAE;AACvD,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,OAAO,EAAE;AAC7B,MAAM,OAAO,EAAE;AACf,IAAI;AACJ,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;AAC3B,MAAM,OAAO,GAAG,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;AAChC,IAAI;AACJ,EAAE;AACF,EAAE,OAAO,OAAO;AAChB;;AAEA;AACA;AACA,MAAM,SAAS,GAAG,IAAI,MAAM,CAAC,8CAA8C,EAAE,IAAI,CAAC;;AAElF,SAAS,kBAAkB,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE;AACrD,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,gBAAgB,KAAK,IAAI,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;AAC7E;AACA;;AAEA,IAAI,MAAM,OAAO,GAAG,aAAa,CAAC,OAAO,EAAE,SAAS,CAAC;AACrD,IAAI,MAAM,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC;AAC/B,IAAI,MAAM,KAAK,GAAG,EAAE;AACpB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AAClC,MAAM,MAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3D,MAAM,IAAI,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE,KAAK,CAAC,EAAE;AACpD,QAAQ;AACR,MAAM;AACN,MAAM,IAAI,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,MAAM,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,mBAAmB,GAAG,QAAQ;AAC7D,MAAM,IAAI,QAAQ,CAAC,MAAM,EAAE;AAC3B,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,sBAAsB,EAAE;AACjD,UAAU,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC,KAAK,CAAC;AAC5D,QAAQ;AACR,QAAQ,GAAG,KAAK,KAAK,WAAW,EAAE,KAAK,IAAI,YAAY;AACvD,QAAQ,IAAI,MAAM,KAAK,SAAS,EAAE;AAClC,UAAU,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;AACvC,YAAY,MAAM,GAAG,MAAM,CAAC,IAAI,EAAE;AAClC,UAAU;AACV,UAAU,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC;AACpD,UAAU,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAC;AACtF,UAAU,GAAG,MAAM,KAAK,IAAI,IAAI,MAAM,KAAK,SAAS,CAAC;AACrD;AACA,YAAY,KAAK,CAAC,KAAK,CAAC,GAAG,MAAM;AACjC,UAAU,CAAC,KAAK,GAAG,OAAO,MAAM,KAAK,OAAO,MAAM,IAAI,MAAM,KAAK,MAAM,CAAC;AACxE;AACA,YAAY,KAAK,CAAC,KAAK,CAAC,GAAG,MAAM;AACjC,UAAU,CAAC,KAAI;AACf;AACA,YAAY,KAAK,CAAC,KAAK,CAAC,GAAG,UAAU;AACrC,cAAc,MAAM;AACpB,cAAc,IAAI,CAAC,OAAO,CAAC,mBAAmB;AAC9C,cAAc,IAAI,CAAC,OAAO,CAAC;AAC3B,aAAa;AACb,UAAU;AACV,QAAQ,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,sBAAsB,EAAE;AACxD,UAAU,KAAK,CAAC,KAAK,CAAC,GAAG,IAAI;AAC7B,QAAQ;AACR,MAAM;AACN,IAAI;AACJ,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE;AACpC,MAAM;AACN,IAAI;AACJ,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE;AAC1C,MAAM,MAAM,cAAc,GAAG,EAAE;AAC/B,MAAM,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,GAAG,KAAK;AAC9D,MAAM,OAAO,cAAc;AAC3B,IAAI;AACJ,IAAI,OAAO;AACX,EAAE;AACF;;AAEA,MAAM,QAAQ,GAAG,SAAS,OAAO,EAAE;AACnC,EAAE,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AAC5C,EAAE,MAAM,MAAM,GAAG,IAAIC,OAAO,CAAC,MAAM,CAAC;AACpC,EAAE,IAAI,WAAW,GAAG,MAAM;AAC1B,EAAE,IAAI,QAAQ,GAAG,EAAE;AACnB,EAAE,IAAI,KAAK,GAAG,EAAE;AAChB,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC;AACtC,IAAI,MAAM,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC;AACzB,IAAI,GAAG,EAAE,KAAK,GAAG,CAAC;AAClB;AACA;AACA,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AAChC,QAAQ,MAAM,UAAU,GAAG,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,EAAE,4BAA4B;AACzF,QAAQ,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,EAAE;;AAE9D,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC;AACvC,UAAU,MAAM,UAAU,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC;AACjD,UAAU,GAAG,UAAU,KAAK,EAAE,CAAC;AAC/B,YAAY,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;AAClD,UAAU;AACV,QAAQ;;AAER,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE;AAC1C,UAAU,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,OAAO,CAAC;AAC1D,QAAQ;;AAER,QAAQ,GAAG,WAAW,CAAC;AACvB,UAAU,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,WAAW,EAAE,KAAK,CAAC;AAC3E,QAAQ;;AAER;AACA,QAAQ,MAAM,WAAW,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACrE,QAAQ,GAAG,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE;AACzE,UAAU,MAAM,IAAI,KAAK,CAAC,CAAC,+CAA+C,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;AACvF,QAAQ;AACR,QAAQ,IAAI,SAAS,GAAG;AACxB,QAAQ,GAAG,WAAW,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,EAAE,EAAE;AACjF,UAAU,SAAS,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;AACrE,UAAU,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE;AAClC,QAAQ,CAAC,KAAI;AACb,UAAU,SAAS,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC;AAC5C,QAAQ;AACR,QAAQ,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC;;AAE7C,QAAQ,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC;AAC/C,QAAQ,QAAQ,GAAG,EAAE;AACrB,QAAQ,CAAC,GAAG,UAAU;AACtB,MAAM,CAAC,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;;AAEvC,QAAQ,IAAI,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC;AACxD,QAAQ,GAAG,CAAC,OAAO,EAAE,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC;;AAE7D,QAAQ,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,WAAW,EAAE,KAAK,CAAC;AACzE,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,iBAAiB,IAAI,OAAO,CAAC,OAAO,KAAK,MAAM,KAAK,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAE/F,KAAI;AACb;AACA,UAAU,MAAM,SAAS,GAAG,IAAIA,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC;AACxD,UAAU,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC;AACtD;AACA,UAAU,GAAG,OAAO,CAAC,OAAO,KAAK,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,cAAc,CAAC;AAC1E,YAAY,SAAS,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC,OAAO,CAAC;AAC7F,UAAU;AACV,UAAU,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;AACzD,QAAQ;;;AAGR,QAAQ,CAAC,GAAG,OAAO,CAAC,UAAU,GAAG,CAAC;AAClC,MAAM,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,KAAK,EAAE;AACpD,QAAQ,MAAM,QAAQ,GAAG,gBAAgB,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,wBAAwB;AACvF,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC;AACxC,UAAU,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE,QAAQ,GAAG,CAAC,CAAC;;AAEhE,UAAU,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,WAAW,EAAE,KAAK,CAAC;;AAE3E,UAAU,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,IAAI,OAAO,EAAE,EAAE,CAAC;AACtG,QAAQ;AACR,QAAQ,CAAC,GAAG,QAAQ;AACpB,MAAM,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE;AACpD,QAAQ,MAAM,MAAM,GAAG,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC;AAC9C,QAAQ,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,QAAQ;AAC9C,QAAQ,CAAC,GAAG,MAAM,CAAC,CAAC;AACpB,MAAM,CAAC,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE;AAClD,QAAQ,MAAM,UAAU,GAAG,gBAAgB,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,sBAAsB,CAAC,GAAG,CAAC;AAC1F,QAAQ,MAAM,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC;;AAE1D,QAAQ,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,WAAW,EAAE,KAAK,CAAC;;AAEzE,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,WAAW,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC;AACjG,QAAQ,GAAG,GAAG,IAAI,SAAS,EAAE,GAAG,GAAG,EAAE;;AAErC;AACA,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;AACtC,UAAU,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,IAAI,MAAM,EAAE,EAAE,CAAC;AACnG,QAAQ,CAAC,KAAI;AACb,UAAU,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,GAAG,CAAC;AACzD,QAAQ;AACR;AACA,QAAQ,CAAC,GAAG,UAAU,GAAG,CAAC;AAC1B,MAAM,CAAC,KAAK;AACZ,QAAQ,IAAI,MAAM,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC;AACvE,QAAQ,IAAI,OAAO,EAAE,MAAM,CAAC,OAAO;AACnC,QAAQ,MAAM,UAAU,GAAG,MAAM,CAAC,UAAU;AAC5C,QAAQ,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM;AAClC,QAAQ,IAAI,cAAc,GAAG,MAAM,CAAC,cAAc;AAClD,QAAQ,IAAI,UAAU,GAAG,MAAM,CAAC,UAAU;;AAE1C,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE;AAC3C,UAAU,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,OAAO,CAAC;AAC1D,QAAQ;AACR;AACA;AACA,QAAQ,IAAI,WAAW,IAAI,QAAQ,EAAE;AACrC,UAAU,GAAG,WAAW,CAAC,OAAO,KAAK,MAAM,CAAC;AAC5C;AACA,YAAY,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,WAAW,EAAE,KAAK,EAAE,KAAK,CAAC;AACpF,UAAU;AACV,QAAQ;;AAER;AACA,QAAQ,MAAM,OAAO,GAAG,WAAW;AACnC,QAAQ,GAAG,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE;AACjF,UAAU,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE;AAChD,UAAU,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;AAC5D,QAAQ;AACR,QAAQ,GAAG,OAAO,KAAK,MAAM,CAAC,OAAO,CAAC;AACtC,UAAU,KAAK,IAAI,KAAK,GAAG,GAAG,GAAG,OAAO,GAAG,OAAO;AAClD,QAAQ;AACR,QAAQ,MAAM,UAAU,GAAG,CAAC;AAC5B,QAAQ,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,KAAK,EAAE,OAAO,CAAC,EAAE;AACvE,UAAU,IAAI,UAAU,GAAG,EAAE;AAC7B;AACA,UAAU,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;AAChF,YAAY,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC;AACnD,cAAc,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;AAC7D,cAAc,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;AACvD,cAAc,MAAM,GAAG,OAAO;AAC9B,YAAY,CAAC,KAAI;AACjB,cAAc,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;AAC1D,YAAY;AACZ,YAAY,CAAC,GAAG,MAAM,CAAC,UAAU;AACjC,UAAU;AACV;AACA,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;AACpE;AACA,YAAY,CAAC,GAAG,MAAM,CAAC,UAAU;AACjC,UAAU;AACV;AACA,eAAc;AACd;AACA,YAAY,MAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAU,EAAE,UAAU,GAAG,CAAC,CAAC;AACrF,YAAY,GAAG,CAAC,MAAM,EAAE,MAAM,IAAI,KAAK,CAAC,CAAC,kBAAkB,EAAE,UAAU,CAAC,CAAC,CAAC;AAC1E,YAAY,CAAC,GAAG,MAAM,CAAC,CAAC;AACxB,YAAY,UAAU,GAAG,MAAM,CAAC,UAAU;AAC1C,UAAU;;AAEV,UAAU,MAAM,SAAS,GAAG,IAAIA,OAAO,CAAC,OAAO,CAAC;;AAEhD,UAAU,GAAG,OAAO,KAAK,MAAM,IAAI,cAAc,CAAC;AAClD,YAAY,SAAS,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC;AAC7E,UAAU;AACV,UAAU,GAAG,UAAU,EAAE;AACzB,YAAY,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,IAAI,CAAC;AACzG,UAAU;AACV;AACA,UAAU,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;AACzD,UAAU,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,UAAU,CAAC;AAC9D;AACA,UAAU,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,SAAS,EAAE,KAAK,EAAE,UAAU,CAAC;AAClE,QAAQ,CAAC,KAAI;AACb;AACA,UAAU,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;AAChF,YAAY,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC;AACnD,cAAc,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;AAC7D,cAAc,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;AACvD,cAAc,MAAM,GAAG,OAAO;AAC9B,YAAY,CAAC,KAAI;AACjB,cAAc,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;AAC1D,YAAY;AACZ;AACA,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE;AAC9C,cAAc,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,OAAO,CAAC;AAC9D,YAAY;;AAEZ,YAAY,MAAM,SAAS,GAAG,IAAIA,OAAO,CAAC,OAAO,CAAC;AAClD,YAAY,GAAG,OAAO,KAAK,MAAM,IAAI,cAAc,CAAC;AACpD,cAAc,SAAS,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC;AAC/E,YAAY;AACZ,YAAY,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,SAAS,EAAE,KAAK,EAAE,UAAU,CAAC;AACpE,YAAY,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;AAC3D,UAAU;AACV;AACA,eAAc;AACd,YAAY,MAAM,SAAS,GAAG,IAAIA,OAAO,EAAE,OAAO,CAAC;AACnD,YAAY,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC;AAChD;AACA,YAAY,GAAG,OAAO,KAAK,MAAM,IAAI,cAAc,CAAC;AACpD,cAAc,SAAS,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC;AAC/E,YAAY;AACZ,YAAY,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,SAAS,EAAE,KAAK,EAAE,UAAU,CAAC;AACpE,YAAY,WAAW,GAAG,SAAS;AACnC,UAAU;AACV,UAAU,QAAQ,GAAG,EAAE;AACvB,UAAU,CAAC,GAAG,UAAU;AACxB,QAAQ;AACR,MAAM;AACN,IAAI,CAAC,KAAI;AACT,MAAM,QAAQ,IAAI,OAAO,CAAC,CAAC,CAAC;AAC5B,IAAI;AACJ,EAAE;AACF,EAAE,OAAO,MAAM,CAAC,KAAK;AACrB;;AAEA,SAAS,QAAQ,CAAC,WAAW,EAAE,SAAS,EAAE,KAAK,EAAE,UAAU,CAAC;AAC5D;AACA,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,UAAU,GAAG,SAAS;AAC3D,EAAE,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC;AACjF,EAAE,GAAG,MAAM,KAAK,KAAK,CAAC,CACnB,MAAM,GAAG,OAAO,MAAM,KAAK,QAAQ,CAAC;AACvC,IAAI,SAAS,CAAC,OAAO,GAAG;AACxB,IAAI,WAAW,CAAC,QAAQ,CAAC,SAAS,EAAE,UAAU,CAAC;AAC/C,EAAE,CAAC,KAAI;AACP,IAAI,WAAW,CAAC,QAAQ,CAAC,SAAS,EAAE,UAAU,CAAC;AAC/C,EAAE;AACF;;AAEA,MAAM,oBAAoB,GAAG,SAAS,GAAG,CAAC;;AAE1C,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC;AAClC,IAAI,IAAI,IAAI,UAAU,IAAI,IAAI,CAAC,eAAe,CAAC;AAC/C,MAAM,MAAM,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC;AACrD,MAAM,GAAG,GAAG,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,GAAG,CAAC;AACjD,IAAI;AACJ,IAAI,IAAI,IAAI,UAAU,IAAI,IAAI,CAAC,YAAY,CAAC;AAC5C,MAAM,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;AAClD,MAAM,GAAG,GAAG,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,CAAC;AAClD,IAAI;AACJ,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;AACjC,MAAM,IAAI,IAAI,UAAU,IAAI,IAAI,CAAC,YAAY,CAAC;AAC9C,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;AACpD,QAAQ,GAAG,GAAG,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,CAAC;AACpD,MAAM;AACN,IAAI;AACJ,IAAI,GAAG,GAAG,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;AAChE,EAAE;AACF,EAAE,OAAO,GAAG;AACZ;AACA,SAAS,mBAAmB,CAAC,QAAQ,EAAE,WAAW,EAAE,KAAK,EAAE,UAAU,EAAE;AACvE,EAAE,IAAI,QAAQ,EAAE;AAChB,IAAI,GAAG,UAAU,KAAK,SAAS,EAAE,UAAU,GAAG,WAAW,CAAC,KAAK,CAAC,MAAM,KAAK;AAC3E;AACA,IAAI,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ;AAC1C,MAAM,WAAW,CAAC,OAAO;AACzB,MAAM,KAAK;AACX,MAAM,KAAK;AACX,MAAM,WAAW,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,GAAG,KAAK;AAC7E,MAAM,UAAU,CAAC;;AAEjB,IAAI,IAAI,QAAQ,KAAK,SAAS,IAAI,QAAQ,KAAK,EAAE;AACjD,MAAM,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,QAAQ,CAAC;AAC1D,IAAI,QAAQ,GAAG,EAAE;AACjB,EAAE;AACF,EAAE,OAAO,QAAQ;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY,CAAC,SAAS,EAAE,KAAK,EAAE,cAAc,CAAC;AACvD,EAAE,MAAM,WAAW,GAAG,IAAI,GAAG,cAAc;AAC3C,EAAE,KAAK,MAAM,YAAY,IAAI,SAAS,EAAE;AACxC,IAAI,MAAM,WAAW,GAAG,SAAS,CAAC,YAAY,CAAC;AAC/C,IAAI,IAAI,WAAW,KAAK,WAAW,IAAI,KAAK,KAAK,WAAW,IAAI,OAAO,IAAI;AAC3E,EAAE;AACF,EAAE,OAAO,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,sBAAsB,CAAC,OAAO,EAAE,CAAC,EAAE,WAAW,GAAG,GAAG,CAAC;AAC9D,EAAE,IAAI,YAAY;AAClB,EAAE,IAAI,MAAM,GAAG,EAAE;AACjB,EAAE,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;AACvD,IAAI,IAAI,EAAE,GAAG,OAAO,CAAC,KAAK,CAAC;AAC3B,IAAI,IAAI,YAAY,EAAE;AACtB,QAAQ,IAAI,EAAE,KAAK,YAAY,EAAE,YAAY,GAAG,EAAE,CAAC;AACnD,IAAI,CAAC,MAAM,IAAI,EAAE,KAAK,GAAG,IAAI,EAAE,KAAK,GAAG,EAAE;AACzC,QAAQ,YAAY,GAAG,EAAE;AACzB,IAAI,CAAC,MAAM,IAAI,EAAE,KAAK,WAAW,CAAC,CAAC,CAAC,EAAE;AACtC,MAAM,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;AACxB,QAAQ,GAAG,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC;AACjD,UAAU,OAAO;AACjB,YAAY,IAAI,EAAE,MAAM;AACxB,YAAY,KAAK,EAAE;AACnB;AACA,QAAQ;AACR,MAAM,CAAC,KAAI;AACX,QAAQ,OAAO;AACf,UAAU,IAAI,EAAE,MAAM;AACtB,UAAU,KAAK,EAAE;AACjB;AACA,MAAM;AACN,IAAI,CAAC,MAAM,IAAI,EAAE,KAAK,IAAI,EAAE;AAC5B,MAAM,EAAE,GAAG;AACX,IAAI;AACJ,IAAI,MAAM,IAAI,EAAE;AAChB,EAAE;AACF;;AAEA,SAAS,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,CAAC;AAClD,EAAE,MAAM,YAAY,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;AAC9C,EAAE,GAAG,YAAY,KAAK,EAAE,CAAC;AACzB,IAAI,MAAM,IAAI,KAAK,CAAC,MAAM;AAC1B,EAAE,CAAC,KAAI;AACP,IAAI,OAAO,YAAY,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC;AACxC,EAAE;AACF;;AAEA,SAAS,UAAU,CAAC,OAAO,CAAC,CAAC,EAAE,cAAc,EAAE,WAAW,GAAG,GAAG,CAAC;AACjE,EAAE,MAAM,MAAM,GAAG,sBAAsB,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC;AAClE,EAAE,GAAG,CAAC,MAAM,EAAE;AACd,EAAE,IAAI,MAAM,GAAG,MAAM,CAAC,IAAI;AAC1B,EAAE,MAAM,UAAU,GAAG,MAAM,CAAC,KAAK;AACjC,EAAE,MAAM,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;AAC5C,EAAE,IAAI,OAAO,GAAG,MAAM;AACtB,EAAE,IAAI,cAAc,GAAG,IAAI;AAC3B,EAAE,GAAG,cAAc,KAAK,EAAE,CAAC;AAC3B,IAAI,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,cAAc,CAAC;AACjD,IAAI,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC,SAAS,EAAE;AAC7D,EAAE;;AAEF,EAAE,MAAM,UAAU,GAAG,OAAO;AAC5B,EAAE,GAAG,cAAc,CAAC;AACpB,IAAI,MAAM,UAAU,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC;AAC3C,IAAI,GAAG,UAAU,KAAK,EAAE,CAAC;AACzB,MAAM,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;AAC5C,MAAM,cAAc,GAAG,OAAO,KAAK,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC;AACrE,IAAI;AACJ,EAAE;;AAEF,EAAE,OAAO;AACT,IAAI,OAAO,EAAE,OAAO;AACpB,IAAI,MAAM,EAAE,MAAM;AAClB,IAAI,UAAU,EAAE,UAAU;AAC1B,IAAI,cAAc,EAAE,cAAc;AAClC,IAAI,UAAU,EAAE,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,gBAAgB,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;AAC9C,EAAE,MAAM,UAAU,GAAG,CAAC;AACtB;AACA,EAAE,IAAI,YAAY,GAAG,CAAC;;AAEtB,EAAE,OAAO,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAClC,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC;AAC3B,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AAChC,UAAU,MAAM,UAAU,GAAG,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,cAAc,CAAC,CAAC;AAC1F,UAAU,IAAI,YAAY,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,EAAE;AACrE,UAAU,GAAG,YAAY,KAAK,OAAO,CAAC;AACtC,YAAY,YAAY,EAAE;AAC1B,YAAY,IAAI,YAAY,KAAK,CAAC,EAAE;AACpC,cAAc,OAAO;AACrB,gBAAgB,UAAU,EAAE,OAAO,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,CAAC;AAC5D,gBAAgB,CAAC,GAAG;AACpB;AACA,YAAY;AACZ,UAAU;AACV,UAAU,CAAC,CAAC,UAAU;AACtB,QAAQ,CAAC,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AACxC,UAAU,MAAM,UAAU,GAAG,gBAAgB,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,yBAAyB;AAC3F,UAAU,CAAC,CAAC,UAAU;AACtB,QAAQ,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,KAAK,EAAE;AACtD,UAAU,MAAM,UAAU,GAAG,gBAAgB,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,yBAAyB;AAC5F,UAAU,CAAC,CAAC,UAAU;AACtB,QAAQ,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE;AACrD,UAAU,MAAM,UAAU,GAAG,gBAAgB,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,yBAAyB,CAAC,GAAG,CAAC;AAC/F,UAAU,CAAC,CAAC,UAAU;AACtB,QAAQ,CAAC,MAAM;AACf,UAAU,MAAM,OAAO,GAAG,UAAU,CAAC,OAAO,EAAE,CAAC,EAAE,GAAG;;AAEpD,UAAU,IAAI,OAAO,EAAE;AACvB,YAAY,MAAM,WAAW,GAAG,OAAO,IAAI,OAAO,CAAC,OAAO;AAC1D,YAAY,IAAI,WAAW,KAAK,OAAO,IAAI,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AAC5F,cAAc,YAAY,EAAE;AAC5B,YAAY;AACZ,YAAY,CAAC,CAAC,OAAO,CAAC,UAAU;AAChC,UAAU;AACV,QAAQ;AACR,MAAM;AACN,EAAE,CAAC;AACH;;AAEA,SAAS,UAAU,CAAC,GAAG,EAAE,WAAW,EAAE,OAAO,EAAE;AAC/C,EAAE,IAAI,WAAW,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AAC9C;AACA,IAAI,MAAM,MAAM,GAAG,GAAG,CAAC,IAAI,EAAE;AAC7B,IAAI,GAAG,MAAM,KAAK,MAAM,GAAG,OAAO,IAAI;AACtC,SAAS,GAAG,MAAM,KAAK,OAAO,GAAG,OAAO,KAAK;AAC7C,SAAS,OAAO,QAAQ,CAAC,GAAG,EAAE,OAAO,CAAC;AACtC,EAAE,CAAC,MAAM;AACT,IAAI,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE;AACtB,MAAM,OAAO,GAAG;AAChB,IAAI,CAAC,MAAM;AACX,MAAM,OAAO,EAAE;AACf,IAAI;AACJ,EAAE;AACF;;ACzlBA,MAAM,eAAe,GAAG,OAAO,CAAC,iBAAiB,EAAE;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACe,SAAS,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC;AAC/C,EAAE,OAAO,QAAQ,EAAE,IAAI,EAAE,OAAO,CAAC;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ,CAAC,GAAG,EAAE,OAAO,EAAE,KAAK,CAAC;AACtC,EAAE,IAAI,IAAI;AACV,EAAE,MAAM,aAAa,GAAG,EAAE;AAC1B,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACvC,IAAI,MAAM,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC;AACzB,IAAI,MAAM,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC;AACrC,IAAI,IAAI,QAAQ,GAAG,EAAE;AACrB,IAAI,GAAG,KAAK,KAAK,SAAS,EAAE,QAAQ,GAAG,QAAQ;AAC/C,SAAS,QAAQ,GAAG,KAAK,GAAG,GAAG,GAAG,QAAQ;;AAE1C,IAAI,GAAG,QAAQ,KAAK,OAAO,CAAC,YAAY,CAAC;AACzC,MAAM,GAAG,IAAI,KAAK,SAAS,EAAE,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC;AACpD,WAAW,IAAI,IAAI,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAC;AACxC,IAAI,CAAC,KAAK,GAAG,QAAQ,KAAK,SAAS,CAAC;AACpC,MAAM;AACN,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;AAC9B;AACA,MAAM,IAAI,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,QAAQ,CAAC;AAC7D,MAAM,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,EAAE,OAAO,CAAC;AAC5C,MAAM,IAAI,MAAM,CAAC,eAAe,CAAC,KAAK,SAAS,EAAE;AACjD,QAAQ,GAAG,CAAC,eAAe,CAAC,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC;AACvD,MAAM;;AAEN,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;AACtB,QAAQ,gBAAgB,EAAE,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,OAAO,CAAC;AAC/D,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,SAAS,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC;AACzH,QAAQ,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC;AACvC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC;AAC7C,QAAQ,GAAG,OAAO,CAAC,oBAAoB,EAAE,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,EAAE;AACvE,aAAa,GAAG,GAAG,EAAE;AACrB,MAAM;;AAEN,MAAM,GAAG,aAAa,CAAC,QAAQ,CAAC,KAAK,SAAS,IAAI,aAAa,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;AAC1F,QAAQ,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,EAAE;AACpD,YAAY,aAAa,CAAC,QAAQ,CAAC,GAAG,EAAE,aAAa,CAAC,QAAQ,CAAC,EAAE;AACjE,QAAQ;AACR,QAAQ,aAAa,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;AACzC,MAAM,CAAC,KAAI;AACX;AACA;AACA,QAAQ,IAAI,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE;AAC1D,UAAU,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC;AACzC,QAAQ,CAAC,KAAI;AACb,UAAU,aAAa,CAAC,QAAQ,CAAC,GAAG,GAAG;AACvC,QAAQ;AACR,MAAM;AACN,IAAI;AACJ;AACA,EAAE;AACF;AACA,EAAE,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC;AAC9B,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,aAAa,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,IAAI;AAClE,EAAE,CAAC,KAAK,GAAG,IAAI,KAAK,SAAS,EAAE,aAAa,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,IAAI;AACzE,EAAE,OAAO,aAAa;AACtB;;AAEA,SAAS,QAAQ,CAAC,GAAG,CAAC;AACtB,EAAE,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;AAC/B,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACxC,IAAI,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;AACvB,IAAI,GAAG,GAAG,KAAK,IAAI,EAAE,OAAO,GAAG;AAC/B,EAAE;AACF;;AAEA,SAAS,gBAAgB,CAAC,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC;AACvD,EAAE,IAAI,OAAO,EAAE;AACf,IAAI,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;AACrC,IAAI,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;AAC5B,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AAClC,MAAM,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC;AAC9B,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,KAAK,GAAG,GAAG,GAAG,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE;AACzE,QAAQ,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAE,OAAO,CAAC,QAAQ,CAAC,EAAE;AAC7C,MAAM,CAAC,MAAM;AACb,QAAQ,GAAG,CAAC,QAAQ,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC;AACzC,MAAM;AACN,IAAI;AACJ,EAAE;AACF;;AAEA,SAAS,SAAS,CAAC,GAAG,EAAE,OAAO,CAAC;AAChC,EAAE,MAAM,EAAE,YAAY,EAAE,GAAG,OAAO;AAClC,EAAE,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM;AAC3C;AACA,EAAE,IAAI,SAAS,KAAK,CAAC,EAAE;AACvB,IAAI,OAAO,IAAI;AACf,EAAE;;AAEF,EAAE;AACF,IAAI,SAAS,KAAK,CAAC;AACnB,KAAK,GAAG,CAAC,YAAY,CAAC,IAAI,OAAO,GAAG,CAAC,YAAY,CAAC,KAAK,SAAS,IAAI,GAAG,CAAC,YAAY,CAAC,KAAK,CAAC;AAC3F,IAAI;AACJ,IAAI,OAAO,IAAI;AACf,EAAE;;AAEF,EAAE,OAAO,KAAK;AACd;;AChHe,MAAM,SAAS;AAC9B;AACA,IAAI,WAAW,CAAC,OAAO,CAAC;AACxB,QAAQ,IAAI,CAAC,gBAAgB,GAAG,EAAE;AAClC,QAAQ,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC;AAC5C;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,CAAC,OAAO,CAAC,gBAAgB,CAAC;AACnC,QAAQ,GAAG,OAAO,OAAO,KAAK,QAAQ,CAAC,CAC9B,KAAK,IAAI,OAAO,CAAC,QAAQ,CAAC;AACnC,YAAY,OAAO,GAAG,OAAO,CAAC,QAAQ,EAAE;AACxC,QAAQ,CAAC,KAAI;AACb,YAAY,MAAM,IAAI,KAAK,CAAC,iDAAiD;AAC7E,QAAQ;AACR,QAAQ,IAAI,gBAAgB,CAAC;AAC7B,YAAY,GAAG,gBAAgB,KAAK,IAAI,EAAE,gBAAgB,GAAG,EAAE,CAAC;AAChE;AACA,YAAY,MAAM,MAAM,GAAG,QAAQ,CAAC,OAAO,EAAE,gBAAgB,CAAC;AAC9D,YAAY,IAAI,MAAM,KAAK,IAAI,EAAE;AACjC,cAAc,MAAM,KAAK,EAAE,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACnF,YAAY;AACZ,UAAU;AACV,QAAQ,MAAM,gBAAgB,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC;AACnE,QAAQ,gBAAgB,CAAC,mBAAmB,CAAC,IAAI,CAAC,gBAAgB,CAAC;AACnE,QAAQ,MAAM,aAAa,GAAG,gBAAgB,CAAC,QAAQ,CAAC,OAAO,CAAC;AAChE,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,IAAI,aAAa,KAAK,SAAS,EAAE,OAAO,aAAa;AAC1F,aAAa,OAAO,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC;AACzD,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,GAAG,EAAE,KAAK,CAAC;AACzB,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;AACrC,YAAY,MAAM,IAAI,KAAK,CAAC,6BAA6B;AACzD,QAAQ,CAAC,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;AACpE,YAAY,MAAM,IAAI,KAAK,CAAC,sEAAsE;AAClG,QAAQ,CAAC,KAAK,GAAG,KAAK,KAAK,GAAG,CAAC;AAC/B,YAAY,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC;AACxE,QAAQ,CAAC,KAAI;AACb,YAAY,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAAG,KAAK;AAC9C,QAAQ;AACR,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,iBAAiB,GAAG;AAC/B,QAAQ,OAAO,OAAO,CAAC,iBAAiB,EAAE;AAC1C,IAAI;AACJ;;AC/DA,MAAML,YAAU,GAAG,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAClD,MAAMC,WAAS,GAAG,OAAO,CAACD,YAAU,CAAC,CAAC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAe,gBAAgB,CAAC,EAAE,OAAO,EAAE,YAAY,EAAE,EAAE;AAClE,IAAI,MAAM,WAAW,GAAG,EAAE,CAAC;AAC3B,IAAI,MAAM,KAAK,GAAG,EAAE,CAAC;AACrB,IAAI,MAAM,OAAO,GAAG,EAAE,CAAC;AACvB,IAAI,MAAM,SAAS,GAAG,EAAE,CAAC;AACzB,IAAI,IAAI,UAAU,GAAG,EAAE,CAAC;AACxB,IAAI,IAAI,CAAC,YAAY,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;AACpD;AACA,QAAQ,IAAI;AACZ,YAAY,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAACC,WAAS,EAAE,oCAAuC,CAAC,CAAC;AAC5F,YAAY,MAAM,QAAQ,GAAG,MAAMK,IAAE,CAAC,QAAQ,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;AAClE,YAAY,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AAChD,QAAQ,CAAC;AACT,QAAQ,OAAO,CAAC,EAAE;AAClB;AACA,QAAQ,CAAC;AACT,IAAI,CAAC;AACL;AACA,IAAI,eAAe,SAAS,CAAC,OAAO,EAAE;AACtC,QAAQ,IAAI,WAAW,CAAC,OAAO,CAAC;AAChC,YAAY,OAAO;AACnB,QAAQ,MAAM,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC1C,QAAQ,IAAI,CAAC,QAAQ;AACrB,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,0BAA0B,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;AACpE,QAAQ,MAAM,GAAG,GAAG,MAAMA,IAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;AACxD,QAAQ,MAAM,MAAM,GAAG,IAAI,SAAS,CAAC,EAAE,gBAAgB,EAAE,KAAK,EAAE,mBAAmB,EAAE,EAAE,EAAE,sBAAsB,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC;AAC5I,QAAQ,MAAM,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACtC,QAAQ,MAAM,IAAI,GAAG,GAAG,CAAC,UAAU,CAAC;AACpC,QAAQ,IAAI,CAAC,UAAU,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,EAAE;AAC3D,YAAY,UAAU,GAAG;AACzB,gBAAgB,YAAY,EAAE,IAAI,CAAC,YAAY;AAC/C,gBAAgB,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;AACvD,gBAAgB,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;AACvD,aAAa,CAAC;AACd,QAAQ,CAAC;AACT;AACA,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE;AACxD,YAAY,MAAM,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;AACrE,kBAAkB,IAAI,CAAC,QAAQ,CAAC,WAAW;AAC3C,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;AAC9C,YAAY,KAAK,MAAM,GAAG,IAAI,QAAQ,EAAE;AACxC,gBAAgB,IAAI,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;AACjE,gBAAgB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;AACtC;AACA,oBAAoB,MAAM,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;AAClD,oBAAoB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;AAC1C,wBAAwB,OAAO,CAAC,IAAI,CAAC,CAAC,qDAAqD,EAAE,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;AACrH,wBAAwB,SAAS;AACjC,oBAAoB,CAAC;AACrB,gBAAgB,CAAC;AACjB,gBAAgB,MAAM,SAAS,CAAC,MAAM,CAAC,CAAC;AACxC,YAAY,CAAC;AACb,QAAQ,CAAC;AACT;AACA,QAAQ,IAAI,IAAI,CAAC,OAAO,EAAE;AAC1B,YAAY,MAAM,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC;AACtD,iBAAiB,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,KAAK,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC;AACjH,YAAY,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;AACtC,gBAAgB,IAAI,IAAI,CAAC,GAAG,KAAK,MAAM,EAAE;AACzC,oBAAoB,MAAM,OAAO,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;AACxG,oBAAoB,OAAO,CAAC,QAAQ,GAAG,EAAE,CAAC;AAC1C,oBAAoB,IAAI,IAAI,CAAC,SAAS,EAAE;AACxC,wBAAwB,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC1G,wBAAwB,KAAK,MAAM,IAAI,IAAI,OAAO,EAAE;AACpD,4BAA4B,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AACpG,wBAAwB,CAAC;AACzB,oBAAoB,CAAC;AACrB,oBAAoB,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACxC,gBAAgB,CAAC;AACjB,qBAAqB,IAAI,IAAI,CAAC,GAAG,KAAK,QAAQ,EAAE;AAChD,oBAAoB,MAAM,MAAM,GAAG;AACnC,wBAAwB,OAAO,EAAE,IAAI,CAAC,OAAO;AAC7C,wBAAwB,YAAY,EAAE,IAAI,CAAC,YAAY;AACvD,wBAAwB,UAAU,EAAE,IAAI,CAAC,UAAU;AACnD,wBAAwB,IAAI,EAAE,IAAI,CAAC,IAAI;AACvC,wBAAwB,IAAI,EAAE,IAAI,CAAC,IAAI;AACvC,wBAAwB,UAAU,EAAE,EAAE;AACtC,qBAAqB,CAAC;AACtB,oBAAoB,IAAI,IAAI,CAAC,SAAS,EAAE;AACxC,wBAAwB,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACxG,wBAAwB,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;AAClD,4BAA4B,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;AACzE,wBAAwB,CAAC;AACzB,oBAAoB,CAAC;AACrB,oBAAoB,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACzC,oBAAoB,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AACpD,gBAAgB,CAAC;AACjB,YAAY,CAAC;AACb,QAAQ,CAAC;AACT,QAAQ,WAAW,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC;AACpC,IAAI,CAAC;AACL;AACA,IAAI,SAAS,cAAc,CAAC,mBAAmB,EAAE;AACjD,QAAQ,OAAO;AACf,YAAY,KAAK,EAAE,mBAAmB,CAAC,GAAG;AAC1C,YAAY,IAAI,EAAE,mBAAmB,CAAC,IAAI;AAC1C,YAAY,IAAI,EAAE,mBAAmB,CAAC,IAAI;AAC1C,YAAY,QAAQ,EAAE,mBAAmB,CAAC,QAAQ;AAClD,YAAY,QAAQ,EAAE,mBAAmB,CAAC,QAAQ;AAClD,YAAY,SAAS,EAAE,mBAAmB,CAAC,MAAM;AACjD,YAAY,OAAO,EAAE,eAAe,CAAC,mBAAmB,CAAC,OAAO,CAAC;AACjE,YAAY,KAAK,EAAE,mBAAmB,CAAC,KAAK;AAC5C,YAAY,IAAI,EAAE,OAAO,CAAC,mBAAmB,CAAC,IAAI,CAAC;AACnD,YAAY,KAAK,EAAE,mBAAmB,CAAC,KAAK;AAC5C,SAAS,CAAC;AACV,QAAQ,SAAS,eAAe,CAAC,UAAU,EAAE;AAC7C,YAAY,IAAI,CAAC,UAAU,EAAE;AAC7B,gBAAgB,OAAO,SAAS,CAAC;AACjC,YAAY,CAAC;AACb;AACA,YAAY,OAAO,UAAU;AAC7B,iBAAiB,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC;AACxC,iBAAiB,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC;AACxC,iBAAiB,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC;AACvC,iBAAiB,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC;AACtC,iBAAiB,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC;AACtC,iBAAiB,OAAO,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;AACzC,QAAQ,CAAC;AACT,IAAI,CAAC;AACL,IAAI,SAAS,OAAO,CAAC,IAAI,EAAE;AAC3B,QAAQ,OAAO,KAAK,CAAC,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;AAC5D,IAAI,CAAC;AACL,IAAI,SAAS,eAAe,GAAG;AAC/B,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC;AACxC,YAAY,OAAO;AACnB,QAAQ,YAAY,CAAC,OAAO,CAAC,CAAC,MAAM,KAAK;AACzC,YAAY,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;AACzC,gBAAgB,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK;AACrD,oBAAoB,OAAO,MAAM,CAAC,IAAI,IAAI,EAAE,MAAM,CAAC,IAAI,YAAY,aAAa,CAAC,CAAC;AAClF,gBAAgB,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,KAAK;AACvC,oBAAoB,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACvD,gBAAgB,CAAC,CAAC,CAAC;AACnB,gBAAgB,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACxC,YAAY,CAAC;AACb,QAAQ,CAAC,CAAC,CAAC;AACX,IAAI,CAAC;AACL,IAAI,SAAS,yBAAyB,CAAC,UAAU,EAAE;AACnD,QAAQ,MAAM,eAAe,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;AAC/G,QAAQ,eAAe,CAAC,OAAO,CAAC,CAAC,MAAM,KAAK;AAC5C,YAAY,IAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE;AACjE,gBAAgB,MAAM,CAAC,uBAAuB,GAAG,MAAM,CAAC,UAAU,CAAC;AACnE,gBAAgB,MAAM,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,cAAc,KAAK,cAAc,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,CAAC,CAAC;AAC5G,gBAAgB,IAAI,UAAU,EAAE;AAChC,oBAAoB,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,aAAa,EAAE,KAAK,KAAK;AAC5E,wBAAwB,IAAI,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,eAAe,KAAK,eAAe,EAAE,IAAI,KAAK,aAAa,EAAE,IAAI,CAAC,CAAC;AACvI,wBAAwB,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;AAClF,oBAAoB,CAAC,CAAC,CAAC;AACvB,gBAAgB,CAAC;AACjB,YAAY,CAAC;AACb,QAAQ,CAAC,CAAC,CAAC;AACX,IAAI,CAAC;AACL,IAAI,MAAM,SAAS,CAAC,MAAM,CAAC,CAAC;AAC5B,IAAI,eAAe,EAAE,CAAC;AACtB,IAAI,yBAAyB,CAAC,OAAO,CAAC,CAAC;AACvC;AACA,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,eAAe,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC,CAAC;AACjE;AACA,IAAI,MAAM,YAAY,GAAG,UAAU,CAAC,gBAAgB,CAAC;AACrD,IAAI,MAAM,YAAY,GAAG,UAAU,CAAC,gBAAgB,CAAC;AACrD,IAAI,MAAM,YAAY,GAAG,UAAU,CAAC,YAAY,CAAC;AACjD,IAAI,MAAM,aAAa,GAAG,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AAC7D,IAAI,MAAM,QAAQ,GAAG,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AACvE,IAAI,MAAM,IAAI,GAAG;AACjB,QAAQ,IAAI,EAAE;AACd,YAAY,KAAK,EAAE,QAAQ,CAAC,YAAY,CAAC;AACzC,YAAY,KAAK,EAAE,QAAQ,CAAC,YAAY,CAAC;AACzC,YAAY,QAAQ;AACpB,SAAS;AACT,QAAQ,OAAO;AACf,QAAQ,SAAS;AACjB,KAAK,CAAC;AACN;AACA,IAAI,OAAO,IAAI,CAAC;AAChB;;ACtLA,MAAMJ,cAAY,GAAG,MAAM,CAAC,YAAY,CAAC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,eAAe,SAASA,cAAY,CAAC;AAC3C,IAAI,WAAW,CAAC,QAAQ,EAAE,EAAE,sBAAsB,GAAG,KAAK,EAAE,YAAY,GAAG,EAAE,EAAE,OAAO,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE;AACpG,QAAQ,KAAK,EAAE,CAAC;AAChB,QAAQ,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;AAC1B,QAAQ,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;AAC7B,QAAQ,IAAI,CAAC,sBAAsB,GAAG,sBAAsB,CAAC;AAC7D,QAAQ,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;AACzC,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC/B,IAAI,CAAC;AACL;AACA,IAAI,QAAQ,GAAG;AACf,QAAQ,MAAM,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC;AACpE,QAAQ,QAAQ,aAAa;AAC7B,YAAY,KAAK,KAAK;AACtB;AACA,gBAAgB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACnD,gBAAgB,MAAM;AACtB,YAAY,KAAK,MAAM,CAAC;AACxB,YAAY,KAAK,MAAM;AACvB,gBAAgB,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACzC,gBAAgB,MAAM;AACtB,YAAY;AACZ,gBAAgB,MAAM,IAAI,KAAK,CAAC,8FAA8F,CAAC,CAAC;AAChI,SAAS;AACT,IAAI,CAAC;AACL;AACA,IAAI,SAAS,CAAC,IAAI,EAAE;AACpB;AACA,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AACpC,IAAI,CAAC;AACL;AACA,IAAI,OAAO,CAAC,IAAI,EAAE;AAClB,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,KAAK,EAAE,OAAO,OAAO,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/E,IAAI,CAAC;AACL;AACA,IAAI,kBAAkB,CAAC,UAAU,EAAE;AACnC,QAAQ,MAAM,UAAU,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACtD,QAAQ,MAAM,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;AACzD,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC1D,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;AACrC,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;AAC3C,QAAQ,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;AAC5B,QAAQ,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;AAC1B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACtD,YAAY,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC3C,YAAY,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AACjD,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC/D,gBAAgB,MAAM,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACvD,gBAAgB,IAAI,SAAS,CAAC,IAAI,EAAE;AACpC,oBAAoB,SAAS,CAAC,IAAI,GAAG,IAAI,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AACvE,oBAAoB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC;AACvE,gBAAgB,CAAC;AACjB,YAAY,CAAC;AACb,QAAQ,CAAC;AACT,QAAQ,IAAI,gBAAgB,GAAG,KAAK,CAAC;AACrC,QAAQ,MAAM,YAAY,GAAG,eAAe,CAAC,eAAe,EAAE,CAAC;AAC/D,QAAQ,YAAY,CAAC,OAAO,CAAC,CAAC,MAAM,KAAK;AACzC,YAAY,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;AAC9C,gBAAgB,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,MAAM,KAAK;AACtD,oBAAoB,IAAI,MAAM,CAAC,IAAI,EAAE;AACrC,wBAAwB,MAAM,CAAC,IAAI,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AACnF,oBAAoB,CAAC;AACrB,gBAAgB,CAAC,CAAC,CAAC;AACnB,gBAAgB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AAC7C,gBAAgB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;AACrD,gBAAgB,gBAAgB,GAAG,IAAI,CAAC;AACxC,YAAY,CAAC;AACb,QAAQ,CAAC,CAAC,CAAC;AACX,QAAQ,IAAI,gBAAgB,EAAE;AAC9B,YAAY,eAAe,CAAC,yBAAyB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACpE,QAAQ,CAAC;AACT,QAAQ,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAClC,IAAI,CAAC;AACL;AACA,IAAI,iBAAiB,GAAG;AACxB,QAAQ,IAAI,IAAI,CAAC,sBAAsB,EAAE;AACzC,YAAY,gBAAgB,CAAC;AAC7B,gBAAgB,OAAO,EAAE,IAAI,CAAC,OAAO;AACrC,gBAAgB,YAAY,EAAE,IAAI,CAAC,YAAY;AAC/C,aAAa,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK;AAChC,gBAAgB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrC,gBAAgB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;AACxC,gBAAgB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;AAC9C,gBAAgB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;AAClD,gBAAgB,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAC1C,YAAY,CAAC,CAAC,CAAC;AACf,QAAQ,CAAC;AACT,aAAa;AACb,YAAY,eAAe,CAAC,YAAY,CAAC,EAAE,CAAC,cAAc,EAAE,CAAC,MAAM,KAAK;AACxE,gBAAgB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrC,gBAAgB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;AACxC,gBAAgB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;AAC9C,gBAAgB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;AAClD,gBAAgB,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAC1C,YAAY,CAAC,CAAC,CAAC;AACf,YAAY,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAChD,QAAQ,CAAC;AACT,IAAI,CAAC;AACL;AACA;;ACjIA,MAAM,wBAAwB,CAAC;AAC/B;AACA,IAAI,WAAW,CAAC,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE;AAC1C;AACA,QAAQ,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;AACzB;AACA,QAAQ,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC9B,QAAQ,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AAC/B,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AACnC;AACA,QAAQ,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;AACnC;AACA,QAAQ,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;AACrC;AACA,QAAQ,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;AACtC,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AAC3B,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC;AAClC,QAAQ,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;AAC9B,IAAI,CAAC;AACL;AACA,IAAI,IAAI,gBAAgB,GAAG;AAC3B,QAAQ,OAAO,IAAI,CAAC,iBAAiB,CAAC;AACtC,IAAI,CAAC;AACL;AACA,IAAI,IAAI,gBAAgB,CAAC,KAAK,EAAE;AAChC,QAAQ,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;AACvC,QAAQ,IAAI,IAAI,CAAC,gBAAgB,KAAK,IAAI,EAAE;AAC5C,YAAY,IAAI,CAAC,gBAAgB,GAAGK,6BAA2B,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;AACxF,QAAQ,CAAC;AACT,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AAC3B,QAAQ,IAAI,IAAI,CAAC,OAAO,EAAE;AAC1B,YAAY,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AACjD,QAAQ,CAAC;AACT,IAAI,CAAC;AACL;AACA,IAAI,IAAI,KAAK,GAAG;AAChB,QAAQ,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;AAClC,YAAY,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;AAClF,QAAQ,CAAC;AACT,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC;AAC3B,IAAI,CAAC;AACL;AACA,IAAI,IAAI,KAAK,CAAC,KAAK,EAAE;AACrB,QAAQ,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AAC5B,QAAQ,IAAI,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE;AAC3C,YAAY,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AACvD,QAAQ,CAAC;AACT,QAAQ,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,gCAAgC,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AACxG,QAAQ,IAAI,IAAI,CAAC,gBAAgB,KAAK,IAAI,EAAE;AAC5C,YAAY,IAAI,CAAC,gBAAgB,GAAGA,6BAA2B,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;AACxF,QAAQ,CAAC;AACT,QAAQ,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AAC7C,IAAI,CAAC;AACL;AACA,IAAI,IAAI,OAAO,GAAG;AAClB,QAAQ,OAAO,IAAI,CAAC,iBAAiB,CAAC;AACtC,IAAI,CAAC;AACL;AACA;AACA,IAAI,IAAI,QAAQ,GAAG;AACnB,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC;AAC9B,IAAI,CAAC;AACL;AACA;AACA,IAAI,IAAI,QAAQ,CAAC,QAAQ,EAAE;AAC3B,QAAQ,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAClC,IAAI,CAAC;AACL;AACA;AACA,IAAI,IAAI,MAAM,GAAG;AACjB,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC;AAC5B,IAAI,CAAC;AACL;AACA;AACA,IAAI,IAAI,MAAM,CAAC,MAAM,EAAE;AACvB,QAAQ,MAAM,aAAa,GAAG,IAAI,CAAC,OAAO,KAAK,MAAM,CAAC;AACtD,QAAQ,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;AAC9B,QAAQ,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;AAC5B,QAAQ,IAAI,aAAa,IAAI,IAAI,CAAC,cAAc,EAAE;AAClD,YAAY,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC;AACxG,YAAY,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,IAAI,CAAC;AACjD,YAAY,IAAI,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;AACxD,QAAQ,CAAC;AACT,IAAI,CAAC;AACL;AACA,IAAI,IAAI,MAAM,GAAG;AACjB,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC;AAC5B,IAAI,CAAC;AACL;AACA;AACA,IAAI,IAAI,MAAM,CAAC,MAAM,EAAE;AACvB,QAAQ,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;AAC9B,IAAI,CAAC;AACL;AACA,CAAC;AAED,SAASA,6BAA2B,CAAC,KAAK,EAAE;AAC5C,IAAI,OAAO,KAAK,CAAC,MAAM,CAAC;AACxB;;AClGA,MAAM,wBAAwB,CAAC;AAC/B;AACA,IAAI,WAAW,CAAC,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE;AAC1C;AACA,QAAQ,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;AACzB;AACA,QAAQ,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC9B,QAAQ,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AAC/B,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AACnC;AACA,QAAQ,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;AACnC;AACA,QAAQ,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;AACrC;AACA,QAAQ,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;AACtC,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AAC3B,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC;AAClC,QAAQ,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;AAC9B,IAAI,CAAC;AACL;AACA,IAAI,IAAI,gBAAgB,GAAG;AAC3B,QAAQ,OAAO,IAAI,CAAC,iBAAiB,CAAC;AACtC,IAAI,CAAC;AACL;AACA,IAAI,IAAI,gBAAgB,CAAC,KAAK,EAAE;AAChC,QAAQ,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;AACvC,QAAQ,IAAI,IAAI,CAAC,gBAAgB,KAAK,IAAI,EAAE;AAC5C,YAAY,IAAI,CAAC,gBAAgB,GAAG,2BAA2B,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;AACxF,QAAQ,CAAC;AACT,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AAC3B,QAAQ,IAAI,IAAI,CAAC,OAAO,EAAE;AAC1B,YAAY,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AACjD,QAAQ,CAAC;AACT,IAAI,CAAC;AACL;AACA,IAAI,IAAI,KAAK,GAAG;AAChB,QAAQ,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;AAClC,YAAY,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,gCAAgC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;AAClG,QAAQ,CAAC;AACT,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC;AAC3B,IAAI,CAAC;AACL;AACA,IAAI,IAAI,KAAK,CAAC,KAAK,EAAE;AACrB,QAAQ,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AAC5B,QAAQ,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,gCAAgC,CAAC,KAAK,EAAE,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AAChI,QAAQ,IAAI,IAAI,CAAC,gBAAgB,KAAK,IAAI,EAAE;AAC5C,YAAY,IAAI,CAAC,gBAAgB,GAAG,2BAA2B,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;AACxF,QAAQ,CAAC;AACT,QAAQ,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AAC7C,IAAI,CAAC;AACL;AACA,IAAI,IAAI,OAAO,GAAG;AAClB,QAAQ,OAAO,IAAI,CAAC,iBAAiB,CAAC;AACtC,IAAI,CAAC;AACL;AACA;AACA,IAAI,IAAI,QAAQ,GAAG;AACnB,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC;AAC9B,IAAI,CAAC;AACL;AACA;AACA,IAAI,IAAI,QAAQ,CAAC,QAAQ,EAAE;AAC3B,QAAQ,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAClC,IAAI,CAAC;AACL;AACA;AACA,IAAI,IAAI,MAAM,GAAG;AACjB,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC;AAC5B,IAAI,CAAC;AACL;AACA;AACA,IAAI,IAAI,MAAM,CAAC,MAAM,EAAE;AACvB,QAAQ,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;AAC9B,QAAQ,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;AAC5B,QAAQ,IAAI,IAAI,CAAC,cAAc,EAAE;AACjC,YAAY,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC;AACxG,QAAQ,CAAC;AACT,IAAI,CAAC;AACL;AACA,IAAI,IAAI,MAAM,GAAG;AACjB,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC;AAC5B,IAAI,CAAC;AACL;AACA;AACA,IAAI,IAAI,MAAM,CAAC,MAAM,EAAE;AACvB,QAAQ,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;AAC9B,IAAI,CAAC;AACL;AACA,CAAC;AAED,SAAS,2BAA2B,CAAC,KAAK,EAAE;AAC5C,IAAI,OAAO,KAAK,CAAC,MAAM,CAAC;AACxB;;ACxFA,MAAM,kBAAkB,CAAC;AACzB;AACA,IAAI,WAAW,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE;AAC5C;AACA,QAAQ,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;AACxB;AACA,QAAQ,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;AACnC;AACA,QAAQ,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;AACtC;AACA,QAAQ,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;AAC9B;AACA,QAAQ,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;AAC9B;AACA,QAAQ,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAChC,QAAQ,IAAI,MAAM,CAAC,kBAAkB,EAAE;AACvC;AACA,YAAY,IAAI,CAAC,gBAAgB,GAAG,IAAI,wBAAwB,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;AACvI,YAAY,IAAI,CAAC,gBAAgB,CAAC,cAAc,GAAG,IAAI,CAAC;AACxD,QAAQ,CAAC;AACT,QAAQ,IAAI,MAAM,CAAC,iBAAiB,EAAE;AACtC;AACA,YAAY,IAAI,CAAC,eAAe,GAAG,IAAI,wBAAwB,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;AACtI,YAAY,IAAI,CAAC,eAAe,CAAC,cAAc,GAAG,IAAI,CAAC;AACvD,QAAQ,CAAC;AACT,IAAI,CAAC;AACL;AACA;AACA,IAAI,IAAI,GAAG,GAAG;AACd,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC;AACzB,IAAI,CAAC;AACL;AACA;AACA,IAAI,IAAI,MAAM,GAAG;AACjB,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC;AAC5B,IAAI,CAAC;AACL;AACA;AACA,IAAI,IAAI,KAAK,GAAG;AAChB,QAAQ,IAAI,IAAI,CAAC,iBAAiB,KAAK,IAAI,EAAE;AAC7C,YAAY,IAAI,CAAC,2BAA2B,EAAE,CAAC;AAC/C,QAAQ,CAAC;AACT,QAAQ,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;AAClC,YAAY,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;AACtF,QAAQ,CAAC;AACT,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC;AAC3B,IAAI,CAAC;AACL;AACA;AACA,IAAI,IAAI,WAAW,GAAG;AACtB,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;AACxC,IAAI,CAAC;AACL;AACA;AACA,IAAI,IAAI,aAAa,GAAG;AACxB,QAAQ,IAAI,IAAI,CAAC,iBAAiB,KAAK,IAAI,EAAE;AAC7C,YAAY,IAAI,CAAC,2BAA2B,EAAE,CAAC;AAC/C,QAAQ,CAAC;AACT,QAAQ,IAAI,IAAI,CAAC,WAAW,EAAE;AAC9B,YAAY,OAAO,WAAW,CAAC,2BAA2B,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACvG,QAAQ,CAAC;AACT,QAAQ,OAAO,IAAI,CAAC;AACpB,IAAI,CAAC;AACL;AACA,IAAI,IAAI,KAAK,CAAC,KAAK,EAAE;AACrB,QAAQ,IAAI,IAAI,CAAC,iBAAiB,KAAK,IAAI,EAAE;AAC7C,YAAY,IAAI,CAAC,2BAA2B,EAAE,CAAC;AAC/C,QAAQ,CAAC;AACT,QAAQ,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AAC5B,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AAC9B,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE;AAC5C,YAAY,IAAI,CAAC,gBAAgB,CAAC,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;AAC3D,QAAQ,CAAC;AACT,aAAa,IAAI,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE;AAChD,YAAY,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AAC3C,gBAAgB,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AACrD,gBAAgB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrC,gBAAgB,IAAI,CAAC,eAAe,CAAC,KAAK,GAAG,MAAM,CAAC;AACpD,YAAY,CAAC;AACb,iBAAiB;AACjB,gBAAgB,IAAI,CAAC,eAAe,CAAC,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;AAC9D,YAAY,CAAC;AACb,QAAQ,CAAC;AACT,aAAa;AACb,YAAY,IAAI,WAAW,CAAC;AAC5B,YAAY,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;AACzC,gBAAgB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;AAClD,oBAAoB,MAAM,IAAI,KAAK,CAAC,CAAC,iDAAiD,EAAE,OAAO,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;AACpH,gBAAgB,CAAC;AACjB,qBAAqB,IAAI,CAAC,WAAW,CAAC,8BAA8B,CAAC,KAAK,CAAC,EAAE;AAC7E,oBAAoB,MAAM,IAAI,KAAK,CAAC,CAAC,+HAA+H,CAAC,CAAC,CAAC;AACvK,gBAAgB,CAAC;AACjB,gBAAgB,MAAM,aAAa,GAAG,WAAW,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;AAC1E,gBAAgB,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,aAAa,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;AAC9F,gBAAgB,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,EAAE,GAAG,aAAa,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;AACvG,YAAY,CAAC;AACb,iBAAiB,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;AACvC,gBAAgB,IAAI;AACpB,oBAAoB,IAAI,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;AAChE;AACA;AACA,oBAAoB,MAAM,iBAAiB,GAAG,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAC5F,oBAAoB,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,iBAAiB,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC9G,oBAAoB,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC;AAC/C,gBAAgB,CAAC;AACjB,gBAAgB,OAAO,GAAG,EAAE;AAC5B;AACA,oBAAoB,IAAI,WAAW,CAAC,8BAA8B,CAAC,KAAK,CAAC,EAAE;AAC3E,wBAAwB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AAC5C,wBAAwB,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACtG,oBAAoB,CAAC;AACrB,yBAAyB;AACzB,wBAAwB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AAC3C,wBAAwB,MAAM,GAAG,CAAC;AAClC,oBAAoB,CAAC;AACrB,gBAAgB,CAAC;AACjB,YAAY,CAAC;AACb,iBAAiB;AACjB,gBAAgB,QAAQ,IAAI,CAAC,MAAM,CAAC,IAAI;AACxC,oBAAoB,KAAK,OAAO;AAChC,wBAAwB,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;AACtD,wBAAwB,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC;AAClD,wBAAwB,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACnI,wBAAwB,MAAM;AAC9B,oBAAoB,QAAQ;AAC5B,oBAAoB,KAAK,KAAK;AAC9B,wBAAwB,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;AACtD,wBAAwB,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC;AAClD,wBAAwB,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;AAC1E;AACA,4BAA4B,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAChH,wBAAwB,CAAC;AACzB,6BAA6B;AAC7B,4BAA4B,MAAM,cAAc,GAAG,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAClF,4BAA4B,MAAM,QAAQ,GAAG,WAAW,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;AACjF;AACA,4BAA4B,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,WAAW,GAAG,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC3H,wBAAwB,CAAC;AACzB,wBAAwB,MAAM;AAC9B,oBAAoB,KAAK,MAAM;AAC/B;AACA,wBAAwB,WAAW,IAAI,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC;AACjG,wBAAwB,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC;AAClD,wBAAwB,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC;AACtH,wBAAwB,MAAM;AAC9B,oBAAoB,KAAK,OAAO;AAChC,wBAAwB,WAAW,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;AACxD,wBAAwB,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC;AAClD;AACA;AACA,wBAAwB,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;AAC3F,wBAAwB,MAAM;AAC9B,iBAAiB;AACjB,YAAY,CAAC;AACb,YAAY,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AACjD,QAAQ,CAAC;AACT,IAAI,CAAC;AACL;AACA;AACA,IAAI,IAAI,gBAAgB,GAAG;AAC3B,QAAQ,IAAI,IAAI,CAAC,iBAAiB,KAAK,IAAI,EAAE;AAC7C,YAAY,IAAI,CAAC,2BAA2B,EAAE,CAAC;AAC/C,QAAQ,CAAC;AACT,QAAQ,OAAO,IAAI,CAAC,iBAAiB,CAAC;AACtC,IAAI,CAAC;AACL;AACA;AACA,IAAI,IAAI,gBAAgB,CAAC,gBAAgB,EAAE;AAC3C,QAAQ,IAAI,CAAC,qCAAqC,CAAC,gBAAgB,CAAC,CAAC;AACrE,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AAC3B,QAAQ,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AAC7C,IAAI,CAAC;AACL;AACA;AACA,IAAI,IAAI,SAAS,GAAG;AACpB,QAAQ,OAAO,IAAI,CAAC,UAAU,CAAC;AAC/B,IAAI,CAAC;AACL;AACA;AACA,IAAI,IAAI,SAAS,CAAC,OAAO,EAAE;AAC3B,QAAQ,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;AAClC,IAAI,CAAC;AACL;AACA;AACA,IAAI,UAAU,CAAC,MAAM,EAAE;AACvB,QAAQ,IAAI,IAAI,CAAC,iBAAiB,KAAK,IAAI,EAAE;AAC7C,YAAY,IAAI,CAAC,2BAA2B,EAAE,CAAC;AAC/C,QAAQ,CAAC;AACT,QAAQ,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC;AACrE,IAAI,CAAC;AACL,IAAI,qBAAqB,GAAG;AAC5B,QAAQ,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AAC7C,IAAI,CAAC;AACL;AACA,IAAI,iBAAiB,GAAG;AACxB,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AAC3B,QAAQ,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;AACtC,IAAI,CAAC;AACL;AACA,IAAI,2BAA2B,GAAG;AAClC,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AAC3B,QAAQ,IAAI,CAAC,iBAAiB,GAAG,IAAIV,wBAAO,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;AAChG,QAAQ,IAAI,CAAC,iBAAiB,CAAC,SAAS,GAAG,IAAI,CAAC;AAChD,IAAI,CAAC;AACL;AACA;AACA,IAAI,qCAAqC,CAAC,gBAAgB,EAAE,cAAc,EAAE;AAC5E,QAAQ,IAAI,EAAE,gBAAgB,YAAYA,wBAAO,CAAC,EAAE;AACpD,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,qDAAqD,EAAE,OAAO,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;AAChH,QAAQ,CAAC;AACT,aAAa;AACb,YAAY,IAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;AACtD,YAAY,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AAC/B,QAAQ,CAAC;AACT,IAAI,CAAC;AACL;AACA,IAAI,iBAAiB,CAAC,KAAK,EAAE;AAC7B,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;AACjE,QAAQ,IAAI,QAAQ,EAAE;AACtB,YAAY,OAAO,QAAQ,CAAC;AAC5B,QAAQ,CAAC;AACT,aAAa;AACb,YAAY,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;AAC3E,YAAY,IAAI,aAAa,EAAE;AAC/B,gBAAgB,OAAO,aAAa,CAAC;AACrC,YAAY,CAAC;AACb,iBAAiB;AACjB,gBAAgB,MAAM,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC,CAAC;AAC5F,gBAAgB,IAAI,eAAe,EAAE;AACrC,oBAAoB,OAAO,eAAe,CAAC;AAC3C,gBAAgB,CAAC;AACjB,qBAAqB;AACrB,oBAAoB,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACvD,gBAAgB,CAAC;AACjB,YAAY,CAAC;AACb,QAAQ,CAAC;AACT,IAAI,CAAC;AACL;AACA;AACA,IAAI,gBAAgB,CAAC,WAAW,EAAE,MAAM,EAAE;AAC1C,QAAQ,IAAI,MAAM,CAAC,kBAAkB,EAAE;AACvC,YAAY,OAAO,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;AAC/C,QAAQ,CAAC;AACT,aAAa,IAAI,MAAM,CAAC,iBAAiB,EAAE;AAC3C,YAAY,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;AAC9C,QAAQ,CAAC;AACT,aAAa,IAAI,MAAM,CAAC,IAAI,EAAE;AAC9B,YAAY,MAAM,oBAAoB,GAAG,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACxI,YAAY,IAAI;AAChB,gBAAgB,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,2BAA2B,CAAC,oBAAoB,CAAC,CAAC;AAC9F,gBAAgB,IAAI,OAAO,EAAE;AAC7B,oBAAoB,OAAO,OAAO,CAAC,IAAI,CAAC;AACxC,gBAAgB,CAAC;AACjB,YAAY,CAAC;AACb,YAAY,OAAO,GAAG,EAAE;AACxB;AACA,YAAY,CAAC;AACb,YAAY,OAAO,oBAAoB,CAAC;AACxC,QAAQ,CAAC;AACT,aAAa,IAAI,MAAM,CAAC,WAAW,EAAE;AACrC,YAAY,IAAI;AAChB,gBAAgB,MAAM,aAAa,GAAG,WAAW,CAAC,2BAA2B,CAAC,WAAW,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;AAC1G,gBAAgB,OAAO,WAAW,CAAC,sBAAsB,CAAC,aAAa,CAAC,OAAO,EAAE,aAAa,CAAC,SAAS,CAAC,CAAC;AAC1G,YAAY,CAAC;AACb,YAAY,OAAO,GAAG,EAAE;AACxB,gBAAgB,OAAO,CAAC,IAAI,CAAC,CAAC,cAAc,EAAE,MAAM,CAAC,IAAI,CAAC,uCAAuC,CAAC,CAAC,CAAC;AACpG;AACA,gBAAgB,OAAO,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;AACzE,YAAY,CAAC;AACb,QAAQ,CAAC;AACT,aAAa;AACb,YAAY,QAAQ,MAAM,CAAC,IAAI;AAC/B,gBAAgB,KAAK,OAAO;AAC5B;AACA,oBAAoB,OAAO,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC;AAC/F,gBAAgB,KAAK,KAAK;AAC1B,oBAAoB,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,EAAE;AAC5D,wBAAwB,OAAO,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;AACjF,oBAAoB,CAAC;AACrB,yBAAyB;AACzB;AACA,wBAAwB,MAAM,cAAc,GAAG,iBAAiB,CAAC,MAAM,CAAC,CAAC;AACzE,wBAAwB,MAAM,QAAQ,GAAG,WAAW,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;AAC7E,wBAAwB,MAAM,QAAQ,GAAG,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;AAC3F,wBAAwB,IAAI,QAAQ,KAAK,CAAC,EAAE;AAC5C,4BAA4B,OAAO,CAAC,CAAC;AACrC,wBAAwB,CAAC;AACzB,6BAA6B;AAC7B,4BAA4B,OAAO,QAAQ,GAAG,QAAQ,CAAC;AACvD,wBAAwB,CAAC;AACzB,oBAAoB,CAAC;AACrB,gBAAgB,KAAK,MAAM;AAC3B,oBAAoB,OAAO,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC;AACtG,gBAAgB,KAAK,OAAO;AAC5B;AACA,oBAAoB,OAAO,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;AAChF,gBAAgB;AAChB,oBAAoB,OAAO,WAAW,CAAC;AACvC,aAAa;AACb,QAAQ,CAAC;AACT,IAAI,CAAC;AACL;AACA,CAAC;AAED,SAAS,iBAAiB,CAAC,MAAM,EAAE;AACnC,IAAI,IAAI,QAAQ,GAAG,GAAG,CAAC;AACvB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;AAClD,QAAQ,QAAQ,IAAI,GAAG,CAAC;AACxB,IAAI,CAAC;AACL,IAAI,OAAO,QAAQ,CAAC;AACpB;;ACxTA,MAAM,mBAAmB,CAAC;AAC1B;AACA,IAAI,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE;AAClD;AACA,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAC1B;AACA,QAAQ,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;AACxC;AACA,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AAC3B;AACA,QAAQ,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;AAC/B;AACA,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAChD,QAAQ,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAChC;AACA,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AAC9B,QAAQ,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AAC7B;AACA,QAAQ,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;AAC9B,QAAQ,OAAO,IAAI,KAAK,CAAC,IAAI,EAAE;AAC/B,YAAY,GAAG,EAAE,UAAU,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE;AACnD,gBAAgB,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;AACxI,YAAY,CAAC;AACb,YAAY,GAAG,EAAE,UAAU,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE;AACnD,gBAAgB,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,SAAS,EAAE;AACvD,oBAAoB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,QAAQ,CAAC;AACzD,gBAAgB,CAAC;AACjB,qBAAqB;AACrB,oBAAoB,MAAM,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;AAC5C,gBAAgB,CAAC;AACjB,gBAAgB,OAAO,IAAI,CAAC;AAC5B,YAAY,CAAC;AACb,SAAS,CAAC,CAAC;AACX,IAAI,CAAC;AACL;AACA;AACA,IAAI,IAAI,OAAO,GAAG;AAClB,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC;AAC1B,IAAI,CAAC;AACL;AACA;AACA,IAAI,IAAI,MAAM,GAAG;AACjB,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC;AAC5B,IAAI,CAAC;AACL;AACA;AACA,IAAI,IAAI,WAAW,GAAG;AACtB,QAAQ,OAAO,IAAI,CAAC,YAAY,CAAC;AACjC,IAAI,CAAC;AACL;AACA;AACA,IAAI,IAAI,IAAI,GAAG;AACf,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC;AAC1B,IAAI,CAAC;AACL;AACA;AACA,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE;AACnB,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAC1B,QAAQ,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,KAAK,KAAK;AAC7C,YAAY,MAAM,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAChH,YAAY,KAAK,CAAC,qCAAqC,CAAC,gBAAgB,CAAC,CAAC;AAC1E,QAAQ,CAAC,CAAC,CAAC;AACX,IAAI,CAAC;AACL;AACA,IAAI,IAAI,SAAS,GAAG;AACpB,QAAQ,OAAO,IAAI,CAAC,UAAU,CAAC;AAC/B,IAAI,CAAC;AACL;AACA;AACA,IAAI,IAAI,SAAS,CAAC,OAAO,EAAE;AAC3B,QAAQ,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;AAClC,QAAQ,IAAI,OAAO,KAAK,KAAK,EAAE;AAC/B,YAAY,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,KAAK,KAAK;AAChD,gBAAgB,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC;AACxC,YAAY,CAAC,CAAC,CAAC;AACf,QAAQ,CAAC;AACT,IAAI,CAAC;AACL;AACA,IAAI,aAAa,CAAC,GAAG,EAAE;AACvB,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AACjC,IAAI,CAAC;AACL;AACA;AACA,IAAI,aAAa,CAAC,GAAG,EAAE;AACvB,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;AAC5C,QAAQ,OAAO,KAAK,GAAG,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;AAC1C,IAAI,CAAC;AACL;AACA;AACA,IAAI,qBAAqB,CAAC,GAAG,EAAE;AAC/B,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;AAC5C,QAAQ,OAAO,KAAK,GAAG,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC;AAClD,IAAI,CAAC;AACL;AACA;AACA,IAAI,iBAAiB,GAAG;AACxB,QAAQ,IAAI,MAAM,GAAG,EAAE,CAAC;AACxB,QAAQ,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;AAC/B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC3D,YAAY,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AAChD;AACA;AACA,YAAY,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,kBAAkB,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;AAChG,YAAY,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AACxD,QAAQ,CAAC;AACT,QAAQ,OAAO,MAAM,CAAC;AACtB,IAAI,CAAC;AACL;AACA,IAAI,KAAK,GAAG;AACZ,QAAQ,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AAC5C,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AAC5B,IAAI,CAAC;AACL;AACA;AACA,IAAI,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE;AACzB,QAAQ,IAAI,IAAI,KAAK,QAAQ,EAAE;AAC/B;AACA;AACA;AACA,YAAY,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS,EAAE;AACzE,gBAAgB,MAAM,aAAa,GAAG,KAAK,CAAC,aAAa,CAAC;AAC1D;AACA;AACA,gBAAgB,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,SAAS,EAAE;AAC1D,oBAAoB,IAAI,KAAK,CAAC,WAAW,EAAE;AAC3C,wBAAwB,IAAI,aAAa,CAAC,OAAO,KAAK,CAAC,IAAI,aAAa,CAAC,SAAS,KAAK,CAAC,EAAE;AAC1F,4BAA4B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;AACpE,wBAAwB,CAAC;AACzB,oBAAoB,CAAC;AACrB,gBAAgB,CAAC;AACjB;AACA,qBAAqB,IAAI,KAAK,CAAC,WAAW,EAAE;AAC5C,oBAAoB,IAAI,aAAa,CAAC,OAAO,KAAK,CAAC,IAAI,aAAa,CAAC,SAAS,KAAK,CAAC,EAAE;AACtF,wBAAwB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;AAC5D,oBAAoB,CAAC;AACrB,gBAAgB,CAAC;AACjB,YAAY,CAAC;AACb,YAAY,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AACjD,QAAQ,CAAC;AACT,IAAI,CAAC;AACL;AACA;;AC/IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,qBAAqB,CAAC;AAC5B;AACA,IAAI,WAAW,CAAC,QAAQ,EAAE;AAC1B;AACA,QAAQ,IAAI,CAAC,YAAY,GAAG,QAAQ,IAAI,QAAQ,CAAC,YAAY,GAAG,QAAQ,CAAC,YAAY,GAAG,KAAK,CAAC;AAC9F;AACA,QAAQ,IAAI,CAAC,cAAc,GAAG,QAAQ,IAAI,QAAQ,CAAC,cAAc,GAAG,QAAQ,CAAC,cAAc,GAAG,KAAK,CAAC;AACpG;AACA,QAAQ,IAAI,CAAC,eAAe,GAAG,QAAQ,IAAI,QAAQ,CAAC,eAAe,GAAG,QAAQ,CAAC,eAAe,GAAG,KAAK,CAAC;AACvG;AACA,QAAQ,IAAI,CAAC,sBAAsB,GAAG,QAAQ,EAAE,sBAAsB,IAAI,KAAK,CAAC;AAChF;AACA,QAAQ,IAAI,CAAC,aAAa,GAAG,QAAQ,EAAE,aAAa,IAAI,EAAE,CAAC;AAC3D;AACA,QAAQ,IAAI,CAAC,YAAY,GAAG,QAAQ,EAAE,YAAY,IAAI,SAAS,CAAC;AAChE;AACA,QAAQ,IAAI,CAAC,SAAS,GAAG,QAAQ,KAAK,QAAQ,CAAC,SAAS,KAAK,IAAI,IAAI,QAAQ,CAAC,SAAS,KAAK,SAAS,CAAC,GAAG,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC;AACnI;AACA,QAAQ,IAAI,CAAC,WAAW,GAAG,QAAQ,KAAK,QAAQ,CAAC,WAAW,KAAK,IAAI,IAAI,QAAQ,CAAC,WAAW,KAAK,SAAS,CAAC,GAAG,QAAQ,CAAC,WAAW,GAAG,KAAK,CAAC;AAC5I;AACA,QAAQ,IAAI,CAAC,gBAAgB,GAAG,QAAQ,KAAK,QAAQ,CAAC,gBAAgB,KAAK,IAAI,IAAI,QAAQ,CAAC,gBAAgB,KAAK,SAAS,CAAC,GAAG,QAAQ,CAAC,gBAAgB,GAAG,IAAI,CAAC;AAC/J,IAAI,CAAC;AACL;;ACxBA,MAAMK,cAAY,GAAG,MAAM,CAAC,YAAY,CAAC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,kBAAkB,SAASA,cAAY,CAAC;AAC9C,IAAI,WAAW,CAAC,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE;AAC5D,QAAQ,KAAK,EAAE,CAAC;AAChB,QAAQ,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;AACxB;AACA,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACzB;AACA,QAAQ,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC;AAC5C;AACA,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AAC7B;AACA,QAAQ,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;AACrC;AACA,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;AAChD,QAAQ,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AACjC;AACA,QAAQ,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAClC;AACA,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC3D;AACA,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;AACrC;AACA,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;AAC3C;AACA,QAAQ,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;AAChC,QAAQ,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AAC/B;AACA,QAAQ,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;AAC1B;AACA,QAAQ,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;AAChC;AACA,QAAQ,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;AAChC;AACA,QAAQ,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;AAC7B;AACA,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,GAAG,EAAE,CAAC;AACtC;AACA,QAAQ,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAClC,IAAI,CAAC;AACL;AACA;AACA,IAAI,IAAI,OAAO,GAAG;AAClB,QAAQ,IAAI,CAAC,YAAY,EAAE,CAAC;AAC5B,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC;AACzB,IAAI,CAAC;AACL;AACA;AACA,IAAI,IAAI,MAAM,CAAC,MAAM,EAAE;AACvB,QAAQ,IAAI,MAAM,EAAE,UAAU,EAAE,MAAM,KAAK,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;AACnE,YAAY,OAAO;AACnB,QAAQ,CAAC;AACT;AACA,QAAQ,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;AAC9B,QAAQ,MAAM,wBAAwB,GAAG,IAAI,CAAC,QAAQ,CAAC,+BAA+B,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AACvH,QAAQ,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,wBAAwB,CAAC,UAAU,CAAC;AACrE,QAAQ,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,wBAAwB,CAAC,WAAW,CAAC;AACvE,QAAQ,IAAI,CAAC,MAAM,CAAC,gBAAgB,GAAG,wBAAwB,CAAC,gBAAgB,CAAC;AACjF,QAAQ,IAAI,CAAC,MAAM,CAAC,gBAAgB,GAAG,wBAAwB,CAAC,gBAAgB,CAAC;AACjF,QAAQ,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AACjC,QAAQ,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;AAC9B,QAAQ,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;AAChC,QAAQ,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;AAC1B,QAAQ,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;AAChC,QAAQ,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;AAChC,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,GAAG,EAAE,CAAC;AACtC,IAAI,CAAC;AACL;AACA;AACA,IAAI,IAAI,MAAM,GAAG;AACjB,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC;AAC5B,IAAI,CAAC;AACL;AACA,IAAI,sBAAsB,GAAG;AAC7B,QAAQ,IAAI,UAAU,GAAG,EAAE,CAAC;AAC5B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE;AACzD,YAAY,UAAU,CAAC,IAAI,CAAC;AAC5B,gBAAgB,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;AACpC,gBAAgB,MAAM,EAAE,KAAK;AAC7B,gBAAgB,UAAU,EAAE,CAAC;AAC7B,gBAAgB,UAAU,EAAE,CAAC;AAC7B,aAAa,CAAC,CAAC;AACf,QAAQ,CAAC;AACT,QAAQ,OAAO,EAAE,UAAU,EAAE,CAAC;AAC9B,IAAI,CAAC;AACL;AACA;AACA,IAAI,0BAA0B,CAAC,KAAK,EAAE;AACtC,QAAQ,OAAO,WAAW,CAAC,sBAAsB,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;AAC9E,IAAI,CAAC;AACL;AACA,IAAI,YAAY,GAAG;AACnB;AACA,QAAQ,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC;AAC9H,QAAQ,IAAI,UAAU,GAAG,EAAE,CAAC;AAC5B,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE;AAC1C,YAAY,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC;AAC9H,QAAQ,CAAC;AACT;AACA,QAAQ,IAAI,IAAI,CAAC,WAAW,EAAE;AAC9B,YAAY,IAAI,gBAAgB,GAAG,CAAC,CAAC;AACrC,YAAY,IAAI,gBAAgB,GAAG,CAAC,CAAC;AACrC;AACA,YAAY,UAAU,CAAC,OAAO,CAAC,CAAC,GAAG,KAAK;AACxC,gBAAgB,gBAAgB,IAAI,GAAG,CAAC,MAAM,CAAC;AAC/C,YAAY,CAAC,CAAC,CAAC;AACf,YAAY,UAAU,CAAC,OAAO,CAAC,CAAC,GAAG,KAAK;AACxC,gBAAgB,gBAAgB,IAAI,GAAG,CAAC,MAAM,CAAC;AAC/C,YAAY,CAAC,CAAC,CAAC;AACf,YAAY,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,gBAAgB,CAAC;AACxD,YAAY,IAAI,CAAC,MAAM,CAAC,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;AAC/F,YAAY,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,gBAAgB,CAAC;AACxD,YAAY,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,EAAE,CAAC,CAAC;AAC5F,YAAY,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,EAAE,CAAC,CAAC;AAC5F,YAAY,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,EAAE,CAAC,CAAC;AAChG,QAAQ,CAAC;AACT,QAAQ,MAAM,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK;AAC/D,YAAY,OAAO,MAAM,CAAC,SAAS,CAAC;AACpC,QAAQ,CAAC,CAAC,CAAC;AACX,QAAQ,IAAI,aAAa,GAAG,CAAC,CAAC;AAC9B,QAAQ,IAAI,YAAY,GAAG,EAAE,CAAC;AAC9B;AACA,QAAQ,IAAI,IAAI,CAAC,OAAO,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;AACvD;AACA,YAAY,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;AACtF,YAAY,IAAI,eAAe,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAC;AACjF,YAAY,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,KAAK,KAAK;AAC1D,gBAAgB,eAAe,CAAC,aAAa,CAAC,SAAS,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC;AACtE,YAAY,CAAC,CAAC,CAAC;AACf,YAAY,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;AAC/C,YAAY,aAAa,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,gBAAgB,GAAG,CAAC,CAAC;AACvF,QAAQ,CAAC;AACT,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACxD,YAAY,IAAI,MAAM,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;AAC3C,YAAY,MAAM,CAAC,SAAS,GAAG,KAAK,CAAC;AACrC,YAAY,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,gBAAgB,IAAI,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;AACzG,YAAY,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC,CAAC;AAC5E,YAAY,MAAM,aAAa,GAAG,MAAM,CAAC,OAAO,CAAC;AACjD,YAAY,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AAC7C,YAAY,aAAa,GAAG,YAAY,GAAG,aAAa,CAAC,MAAM,CAAC;AAChE,QAAQ,CAAC;AACT,QAAQ,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC;AACxF,QAAQ,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;AACxF,YAAY,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;AACvE,QAAQ,CAAC;AACT,QAAQ,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;AACvD,QAAQ,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;AACvF,YAAY,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;AACvE,QAAQ,CAAC;AACT,QAAQ,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;AACvD,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;AAChD,IAAI,CAAC;AACL;AACA;AACA,IAAI,kBAAkB,CAAC,KAAK,EAAE,mBAAmB,EAAE;AACnD,QAAQ,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAC;AAC9C;AACA;AACA,QAAQ,IAAI,mBAAmB,IAAI,IAAI,CAAC,WAAW,EAAE;AACrD,YAAY,IAAI,CAAC,YAAY,EAAE,CAAC;AAChC,YAAY,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC1D,QAAQ,CAAC;AACT,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC5B,IAAI,CAAC;AACL;AACA;AACA,IAAI,yBAAyB,CAAC,KAAK,EAAE;AACrC;AACA,QAAQ,IAAI,CAAC,MAAM,CAAC,eAAe,GAAG,KAAK,CAAC;AAC5C;AACA,QAAQ,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;AACpE,IAAI,CAAC;AACL;AACA,IAAI,gCAAgC,GAAG;AACvC;AACA;AACA;AACA;AACA,QAAQ,IAAI,4BAA4B,GAAG,EAAE,CAAC;AAC9C,QAAQ,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,KAAK;AACzC,YAAY,IAAI,gBAAgB,GAAG,KAAK,CAAC;AACzC,YAAY,MAAM,uBAAuB,GAAG,WAAW,CAAC,0BAA0B,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC5G,YAAY,IAAI,uBAAuB,CAAC,OAAO,KAAK,CAAC,IAAI,uBAAuB,CAAC,SAAS,KAAK,CAAC,EAAE;AAClG;AACA;AACA,gBAAgB,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;AACxD,gBAAgB,IAAI,WAAW,CAAC,IAAI,KAAK,QAAQ,EAAE;AACnD,oBAAoB,gBAAgB,GAAG,IAAI,CAAC;AAC5C;AACA,oBAAoB,4BAA4B,CAAC,IAAI,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC;AACzF,gBAAgB,CAAC;AACjB,YAAY,CAAC;AACb,YAAY,MAAM,CAAC,OAAO,GAAG,gBAAgB,CAAC;AAC9C,QAAQ,CAAC,CAAC,CAAC;AACX;AACA;AACA,QAAQ,MAAM,kBAAkB,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK;AACnE,YAAY,OAAO,MAAM,CAAC,OAAO,CAAC;AAClC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK;AAC9B,YAAY,OAAO,4BAA4B,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;AAC7E,QAAQ,CAAC,CAAC,CAAC;AACX;AACA,QAAQ,IAAI,kBAAkB,CAAC,MAAM,GAAG,CAAC,EAAE;AAC3C,YAAY,MAAM,mBAAmB,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK;AAC3E,gBAAgB,OAAO,MAAM,CAAC,KAAK,CAAC;AACpC,YAAY,CAAC,CAAC,CAAC;AACf,YAAY,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,4CAA4C,CAAC;AAC5G,gBAAgB,CAAC,CAAC,EAAE,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,mEAAmE,CAAC;AACvH,gBAAgB,CAAC,yCAAyC,CAAC,CAAC,CAAC;AAC7D,QAAQ,CAAC;AACT,aAAa;AACb,YAAY,IAAI,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC;AAC7D,YAAY,IAAI,kBAAkB,CAAC,MAAM,KAAK,CAAC,EAAE;AACjD,gBAAgB,eAAe,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;AAC9D,YAAY,CAAC;AACb,YAAY,IAAI,CAAC,yBAAyB,CAAC,eAAe,CAAC,CAAC;AAC5D,YAAY,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC1D,YAAY,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAChC,QAAQ,CAAC;AACT,IAAI,CAAC;AACL;AACA;AACA,IAAI,MAAM,cAAc,CAAC,GAAG,EAAE,iBAAiB,EAAE;AACjD,QAAQ,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;AACxB;AACA,QAAQ,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AACjC,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC3D,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;AACrC,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;AAC3C,QAAQ,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;AAChC,QAAQ,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AAC/B,QAAQ,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;AAC1B,QAAQ,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;AAChC,QAAQ,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;AAChC,QAAQ,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;AAC7B,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,GAAG,EAAE,CAAC;AACtC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC5B;AACA,QAAQ,IAAI,iBAAiB,EAAE;AAC/B,YAAY,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC;AACtC,QAAQ,CAAC;AACT,IAAI,CAAC;AACL;AACA;AACA;AACA,IAAI,WAAW,CAAC,aAAa,EAAE;AAC/B,QAAQ,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAK;AAChD,YAAY,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,mBAAmB,CAAC,IAAI,CAAC,aAAa,EAAE,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE;AAC/G,gBAAgB,IAAI,IAAI,CAAC,OAAO,EAAE;AAClC,oBAAoB,MAAM,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,CAAC,CAAC;AACvE,oBAAoB,IAAI,WAAW,GAAG,EAAE,CAAC;AACzC,oBAAoB,IAAI,UAAU,GAAG,EAAE,CAAC;AACxC,oBAAoB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAE,EAAE;AAC7D,wBAAwB,MAAM,MAAM,GAAG;AACvC,4BAA4B,OAAO,EAAE,KAAK;AAC1C,4BAA4B,OAAO,EAAE,CAAC;AACtC,4BAA4B,aAAa,EAAE,CAAC,GAAG,EAAE;AACjD,4BAA4B,UAAU,EAAE,KAAK;AAC7C,4BAA4B,QAAQ,EAAE,EAAE;AACxC,4BAA4B,WAAW,EAAE,IAAI;AAC7C,4BAA4B,UAAU,EAAE,IAAI;AAC5C,4BAA4B,UAAU,EAAE,IAAI;AAC5C,4BAA4B,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACzF,4BAA4B,QAAQ,EAAE,CAAC,GAAG,EAAE;AAC5C,4BAA4B,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AAChF,4BAA4B,oBAAoB,EAAE,KAAK;AACvD,4BAA4B,mBAAmB,EAAE,KAAK;AACtD,yBAAyB,CAAC;AAC1B,wBAAwB,MAAM,CAAC,WAAW,GAAG,CAAC,MAAM,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC;AAC3J,wBAAwB,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACjD,oBAAoB,CAAC;AACrB,oBAAoB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAC,EAAE,EAAE;AAC3E,wBAAwB,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAClG,oBAAoB,CAAC;AACrB,oBAAoB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;AACnD,oBAAoB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AACjD,gBAAgB,CAAC;AACjB,qBAAqB;AACrB,oBAAoB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AACtC,wBAAwB,OAAO,CAAC,IAAI,CAAC,sFAAsF,CAAC,CAAC;AAC7H,wBAAwB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;AACpE,oBAAoB,CAAC;AACrB,oBAAoB,IAAI,CAAC,WAAW,GAAG,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AAC5F,gBAAgB,CAAC;AACjB,gBAAgB,IAAI,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC;AACxD,gBAAgB,MAAM,sBAAsB,GAAG,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACnG,gBAAgB,IAAI,aAAa,EAAE;AACnC;AACA,oBAAoB,gBAAgB,GAAG,gBAAgB,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK;AAC3E,wBAAwB,OAAO,sBAAsB,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC;AAC3E,4BAA4B,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC;AAC/D,4BAA4B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK;AAChE,gCAAgC,OAAO,MAAM,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,CAAC;AACnE,4BAA4B,CAAC,CAAC,CAAC;AAC/B,oBAAoB,CAAC,CAAC,CAAC;AACvB,gBAAgB,CAAC;AACjB,gBAAgB,IAAI,CAAC,aAAa,GAAG,gBAAgB,CAAC;AACtD,gBAAgB,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,gBAAgB,EAAE,IAAI,CAAC,CAAC;AAC3F,gBAAgB,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE;AAChD,oBAAoB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;AAClF,gBAAgB,CAAC;AACjB,gBAAgB,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE;AAC/C,oBAAoB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;AAClF,gBAAgB,CAAC;AACjB,gBAAgB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9D,gBAAgB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,KAAK,KAAK;AACxD,oBAAoB,IAAI,IAAI,CAAC,OAAO,EAAE;AACtC,wBAAwB,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;AAClE,oBAAoB,CAAC;AACrB,oBAAoB,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;AACtD,wBAAwB,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;AAC9C,oBAAoB,CAAC;AACrB,gBAAgB,CAAC,CAAC,CAAC;AACnB,gBAAgB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AACxC,gBAAgB,OAAO,CAAC,IAAI,CAAC,CAAC;AAC9B,YAAY,CAAC;AACb,iBAAiB;AACjB,gBAAgB,OAAO,CAAC,IAAI,CAAC,CAAC;AAC9B,YAAY,CAAC;AACb,QAAQ,CAAC,CAAC,CAAC;AACX,IAAI,CAAC;AACL;AACA;AACA,IAAI,kBAAkB,GAAG;AACzB,QAAQ,IAAI,YAAY,GAAG,IAAI,GAAG,EAAE,CAAC;AACrC,QAAQ,MAAM,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC;AAC7D,QAAQ,IAAI,wBAAwB,GAAG,IAAI,CAAC;AAC5C,QAAQ,IAAI,uBAAuB,GAAG,gBAAgB,CAAC;AACvD,QAAQ,IAAI,gBAAgB,KAAK,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE;AAC7D,YAAY,OAAO,uBAAuB,KAAK,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE;AAC3E;AACA,gBAAgB,IAAI,oBAAoB,GAAG,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AACtG,gBAAgB,YAAY,CAAC,GAAG,CAAC,uBAAuB,EAAE;AAC1D,oBAAoB,QAAQ,EAAE,wBAAwB;AACtD,oBAAoB,IAAI,EAAE,oBAAoB;AAC9C,iBAAiB,CAAC,CAAC;AACnB,gBAAgB,wBAAwB,GAAG,uBAAuB,CAAC;AACnE,gBAAgB,uBAAuB,GAAG,oBAAoB,CAAC;AAC/D,YAAY,CAAC;AACb,QAAQ,CAAC;AACT,QAAQ,OAAO,YAAY,CAAC;AAC5B,IAAI,CAAC;AACL;AACA;AACA,IAAI,cAAc,CAAC,MAAM,EAAE;AAC3B;AACA;AACA,QAAQ,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;AAC7B,YAAY,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;AACpC,YAAY,MAAM,uBAAuB,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,EAAE,CAAC;AAChF;AACA,YAAY,IAAI,uBAAuB,KAAK,IAAI,IAAI,uBAAuB,KAAK,SAAS,EAAE;AAC3F;AACA;AACA,gBAAgB,MAAM,oBAAoB,GAAG,uBAAuB,CAAC,CAAC,CAAC,CAAC;AACxE,gBAAgB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,oBAAoB,EAAE;AAC5D,oBAAoB,QAAQ,EAAE,uBAAuB,CAAC,CAAC,CAAC,CAAC,QAAQ;AACjE,oBAAoB,IAAI,EAAE,MAAM,CAAC,KAAK;AACtC,iBAAiB,CAAC,CAAC;AACnB;AACA,gBAAgB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE;AACpD,oBAAoB,QAAQ,EAAE,oBAAoB;AAClD,oBAAoB,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,cAAc;AACpD,iBAAiB,CAAC,CAAC;AACnB;AACA;AACA;AACA;AACA;AACA,gBAAgB,IAAI,CAAC,oBAAoB,CAAC,oBAAoB,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;AAC9E,gBAAgB,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;AACpF,YAAY,CAAC;AACb,iBAAiB;AACjB;AACA,gBAAgB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE;AACpD,oBAAoB,QAAQ,EAAE,IAAI;AAClC,oBAAoB,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,cAAc;AACpD,iBAAiB,CAAC,CAAC;AACnB;AACA;AACA,gBAAgB,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AACtD,gBAAgB,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;AACpF,YAAY,CAAC;AACb,YAAY,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAChC,QAAQ,CAAC;AACT,IAAI,CAAC;AACL;AACA;AACA,IAAI,kBAAkB,CAAC,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE;AAC9C,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC;AAC1B,QAAQ,MAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;AACpE,QAAQ,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,KAAK;AACpC,YAAY,MAAM,4BAA4B,GAAG,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,KAAK,KAAK;AACtF,gBAAgB,OAAO,KAAK,CAAC,gBAAgB,CAAC;AAC9C,YAAY,CAAC,CAAC,CAAC;AACf,YAAY,4BAA4B,CAAC,OAAO,CAAC,CAAC,KAAK,KAAK;AAC5D,gBAAgB,KAAK,CAAC,gBAAgB,CAAC,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,0BAA0B,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC;AAC3I,gBAAgB,KAAK,CAAC,gBAAgB,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC;AAChF,gBAAgB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;AAChE,gBAAgB,KAAK,CAAC,gBAAgB,CAAC,MAAM,GAAG,IAAI,CAAC;AACrD,YAAY,CAAC,CAAC,CAAC;AACf,QAAQ,CAAC,CAAC,CAAC;AACX,IAAI,CAAC;AACL;AACA;AACA,IAAI,kBAAkB,CAAC,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE;AAC9C,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC;AAC1B,QAAQ,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;AACnE,QAAQ,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,KAAK;AACpC,YAAY,MAAM,2BAA2B,GAAG,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,KAAK,KAAK;AACrF,gBAAgB,OAAO,KAAK,CAAC,eAAe,CAAC;AAC7C,YAAY,CAAC,CAAC,CAAC;AACf,YAAY,2BAA2B,CAAC,OAAO,CAAC,CAAC,KAAK,KAAK;AAC3D,gBAAgB,KAAK,CAAC,eAAe,CAAC,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,0BAA0B,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;AACzI,gBAAgB,KAAK,CAAC,eAAe,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC;AAC/E,gBAAgB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;AAC/D,gBAAgB,KAAK,CAAC,eAAe,CAAC,MAAM,GAAG,IAAI,CAAC;AACpD,YAAY,CAAC,CAAC,CAAC;AACf,QAAQ,CAAC,CAAC,CAAC;AACX,IAAI,CAAC;AACL;AACA;AACA,IAAI,oBAAoB,CAAC,KAAK,EAAE,oBAAoB,EAAE;AACtD,QAAQ,IAAI,CAAC,gCAAgC,CAAC,KAAK,EAAE,oBAAoB,CAAC,CAAC;AAC3E,QAAQ,IAAI,CAAC,wBAAwB,CAAC,KAAK,EAAE,oBAAoB,CAAC,CAAC;AACnE,IAAI,CAAC;AACL;AACA;AACA,IAAI,gCAAgC,CAAC,KAAK,EAAE,oBAAoB,EAAE;AAClE,QAAQ,MAAM,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,gBAAgB,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;AAClG,QAAQ,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,oBAAoB,EAAE,gBAAgB,CAAC,CAAC;AACxE;AACA,IAAI,CAAC;AACL;AACA;AACA,IAAI,wBAAwB,CAAC,KAAK,EAAE,oBAAoB,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,oBAAoB,EAAE,CAAC,CAAC,CAAC;AACzE,IAAI,CAAC;AACL;AACA;AACA,IAAI,OAAO,CAAC,IAAI,EAAE,MAAM,EAAE;AAC1B,QAAQ,IAAI,MAAM,YAAY,mBAAmB,EAAE;AACnD,YAAY,IAAI,IAAI,KAAK,QAAQ,EAAE;AACnC,gBAAgB,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;AACxC,gBAAgB,IAAI,IAAI,CAAC,OAAO,EAAE;AAClC,oBAAoB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC;AACrE,gBAAgB,CAAC;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,IAAI,CAAC,EAAE;AAClD;AACA;AACA,oBAAoB,MAAM,oBAAoB,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AACrF,oBAAoB,MAAM,qBAAqB,GAAG,oBAAoB,KAAK,IAAI,IAAI,oBAAoB,KAAK,SAAS,CAAC;AACtH;AACA,oBAAoB,IAAI,qBAAqB,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,MAAM,0BAA0B,GAAG,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,KAAK,KAAK;AAChG,4BAA4B,OAAO,KAAK,CAAC,SAAS,IAAI,KAAK,CAAC,MAAM,CAAC,WAAW,GAAG,EAAE,CAAC;AACpF,wBAAwB,CAAC,CAAC,CAAC;AAC3B,wBAAwB,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,IAAI,0BAA0B,CAAC,MAAM,KAAK,CAAC,EAAE;AACnG;AACA,4BAA4B,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AACvE;AACA,4BAA4B,MAAM,mBAAmB,GAAG,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,KAAK,KAAK;AAC7F,gCAAgC,OAAO,KAAK,CAAC,MAAM,CAAC,WAAW,GAAG,EAAE,CAAC;AACrE,4BAA4B,CAAC,CAAC,CAAC;AAC/B,4BAA4B,mBAAmB,CAAC,OAAO,CAAC,CAAC,KAAK,KAAK;AACnE,gCAAgC,KAAK,CAAC,iBAAiB,EAAE,CAAC;AAC1D,4BAA4B,CAAC,CAAC,CAAC;AAC/B,wBAAwB,CAAC;AACzB;AACA;AACA,wBAAwB,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,IAAI,0BAA0B,CAAC,MAAM,GAAG,CAAC,EAAE;AACjG;AACA;AACA,4BAA4B,IAAI,CAAC,QAAQ,CAAC,wBAAwB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AACjF,4BAA4B,IAAI,CAAC,QAAQ,CAAC,sBAAsB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AAC/E;AACA,4BAA4B,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AACnE;AACA,4BAA4B,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;AACnD;AACA,4BAA4B,MAAM,sBAAsB,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;AAChH,4BAA4B,IAAI,sBAAsB,EAAE;AACxD;AACA,gCAAgC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,oBAAoB,CAAC,QAAQ,EAAE;AACrF,oCAAoC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,QAAQ;AAC3G,oCAAoC,IAAI,EAAE,oBAAoB,CAAC,IAAI;AACnE,iCAAiC,CAAC,CAAC;AACnC;AACA,gCAAgC,IAAI,CAAC,oBAAoB,CAAC,oBAAoB,CAAC,QAAQ,EAAE,oBAAoB,CAAC,IAAI,CAAC,CAAC;AACpH,4BAA4B,CAAC;AAC7B;AACA;AACA,4BAA4B,MAAM,kBAAkB,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;AACxG,4BAA4B,IAAI,kBAAkB,EAAE;AACpD,gCAAgC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,oBAAoB,CAAC,IAAI,EAAE;AACjF,oCAAoC,QAAQ,EAAE,oBAAoB,CAAC,QAAQ;AAC3E,oCAAoC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,IAAI;AAC/F,iCAAiC,CAAC,CAAC;AACnC,gCAAgC,IAAI,CAAC,sBAAsB,EAAE;AAC7D;AACA;AACA,oCAAoC,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;AACvF,gCAAgC,CAAC;AACjC,4BAA4B,CAAC;AAC7B;AACA;AACA;AACA,4BAA4B,IAAI,CAAC,sBAAsB,IAAI,CAAC,kBAAkB,EAAE;AAChF,gCAAgC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;AACpF,4BAA4B,CAAC;AAC7B,wBAAwB,CAAC;AACzB;AACA,oBAAoB,CAAC;AACrB,gBAAgB,CAAC;AACjB,gBAAgB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACpC,YAAY,CAAC;AACb,iBAAiB,IAAI,IAAI,KAAK,OAAO,EAAE;AACvC,gBAAgB,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;AAC5C,gBAAgB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACpC,YAAY,CAAC;AACb,QAAQ,CAAC;AACT,aAAa,IAAI,MAAM,YAAY,wBAAwB,IAAI,MAAM,YAAY,wBAAwB,EAAE;AAC3G,YAAY,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;AACpC;AACA,YAAY,IAAI,MAAM,CAAC,cAAc,EAAE;AACvC,gBAAgB,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;AACtE,YAAY,CAAC;AACb,iBAAiB;AACjB;AACA;AACA,gBAAgB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACpC,YAAY,CAAC;AACb,QAAQ,CAAC;AACT,IAAI,CAAC;AACL;AACA,CAAC;AAED,SAAS,eAAe,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE;AAC/C,IAAI,IAAI,YAAY,GAAG,MAAM,CAAC,WAAW,CAAC;AAC1C,IAAI,IAAI,WAAW,GAAG,wBAAwB,EAAE,CAAC;AACjD;AACA,IAAI,4BAA4B,EAAE,CAAC;AACnC,IAAI,SAAS,eAAe,CAAC,MAAM,EAAE;AACrC,QAAQ,OAAO,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,IAAI,KAAK,oBAAoB,CAAC;AACtH,IAAI,CAAC;AAEL,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACjD,QAAQ,IAAI,SAAS,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;AACvC,QAAQ,IAAI,UAAU,GAAG,WAAW,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;AAChF,QAAQ,IAAI,UAAU,EAAE;AACxB,YAAY,IAAI,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;AACjC,YAAY,OAAO,UAAU,IAAI,eAAe,CAAC,UAAU,CAAC,EAAE;AAC9D,gBAAgB,UAAU,GAAG,WAAW,CAAC,QAAQ,CAAC,CAAC;AACnD,gBAAgB,QAAQ,IAAI,CAAC,CAAC;AAC9B,YAAY,CAAC;AACb,YAAY,IAAI,UAAU,EAAE;AAC5B,gBAAgB,SAAS,CAAC,MAAM,GAAG,UAAU,CAAC,WAAW,GAAG,SAAS,CAAC,WAAW,CAAC;AAClF,YAAY,CAAC;AACb,iBAAiB;AACjB,gBAAgB,SAAS,CAAC,MAAM,GAAG,CAAC,MAAM,CAAC,WAAW,GAAG,CAAC,IAAI,SAAS,CAAC,WAAW,CAAC;AACpF,YAAY,CAAC;AACb,QAAQ,CAAC;AACT,aAAa;AACb,YAAY,SAAS,CAAC,MAAM,GAAG,CAAC,MAAM,CAAC,WAAW,GAAG,CAAC,IAAI,SAAS,CAAC,WAAW,CAAC;AAChF,QAAQ,CAAC;AACT,QAAQ,IAAI,SAAS,CAAC,MAAM,GAAG,EAAE,EAAE;AACnC,YAAY,SAAS,CAAC,MAAM,GAAG,EAAE,CAAC;AAClC,QAAQ,CAAC;AACT,IAAI,CAAC;AACL,IAAI,IAAI,kBAAkB,GAAG,CAAC,CAAC;AAC/B,IAAI,IAAI,YAAY,GAAG,EAAE,CAAC;AAC1B,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,WAAW,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE;AACzD,QAAQ,IAAI,cAAc,GAAG,EAAE,CAAC;AAChC,QAAQ,IAAI,YAAY,GAAG,CAAC,GAAG,EAAE,CAAC;AAClC,QAAQ,GAAG;AACX,YAAY,MAAM,aAAa,GAAG,WAAW,CAAC,kBAAkB,CAAC,CAAC;AAClE,YAAY,IAAI,aAAa,EAAE;AAC/B,gBAAgB,IAAI,eAAe,CAAC,aAAa,CAAC,EAAE;AACpD,oBAAoB,kBAAkB,IAAI,CAAC,CAAC;AAC5C,oBAAoB,SAAS;AAC7B,gBAAgB,CAAC;AACjB,gBAAgB,YAAY,IAAI,aAAa,CAAC,MAAM,CAAC;AACrD,gBAAgB,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AACnD,gBAAgB,kBAAkB,IAAI,CAAC,CAAC;AACxC,YAAY,CAAC;AACb,iBAAiB;AACjB,gBAAgB,MAAM;AACtB,YAAY,CAAC;AACb,QAAQ,CAAC,QAAQ,CAAC,kBAAkB,GAAG,WAAW,CAAC,MAAM,KAAK,YAAY,GAAG,EAAE,EAAE;AACjF,QAAQ,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAC1C,IAAI,CAAC;AACL,IAAI,YAAY,CAAC,OAAO,CAAC,CAAC,WAAW,KAAK;AAC1C,QAAQ,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;AACpC,YAAY,IAAI,aAAa,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;AAC3D,YAAY,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,aAAa,CAAC;AACvE,YAAY,KAAK,IAAI,CAAC,GAAG,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AAC9D,gBAAgB,IAAI,cAAc,GAAG,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACxD,gBAAgB,IAAI,MAAM,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;AAC5C,gBAAgB,MAAM,CAAC,MAAM,GAAG,cAAc,CAAC,MAAM,GAAG,cAAc,CAAC,MAAM,CAAC;AAC9E,YAAY,CAAC;AACb,QAAQ,CAAC;AACT,IAAI,CAAC,CAAC,CAAC;AACP,IAAI,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK;AACjD,QAAQ,OAAO,EAAE,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC;AAC1C,IAAI,CAAC,CAAC,CAAC;AACP,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK;AAC/B,QAAQ,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;AACnC,IAAI,CAAC,CAAC,CAAC;AACP,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACjD,QAAQ,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC;AAChE,IAAI,CAAC;AACL,IAAI,OAAO,WAAW,CAAC;AACvB,IAAI,SAAS,4BAA4B,GAAG;AAC5C,QAAQ,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK;AACnC,YAAY,OAAO,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,CAAC;AACjD,QAAQ,CAAC,CAAC,CAAC;AACX,IAAI,CAAC;AAEL,IAAI,SAAS,wBAAwB,GAAG;AACxC,QAAQ,IAAI,KAAK,GAAG,EAAE,CAAC;AACvB,QAAQ,IAAI,gBAAgB,GAAG,IAAI,GAAG,EAAE,CAAC;AACzC,QAAQ,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,KAAK,KAAK;AACxD,YAAY,MAAM,QAAQ,GAAG,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;AAC1D,YAAY,MAAM,QAAQ,GAAG,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;AAC1D,YAAY,MAAM,WAAW,GAAG,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,YAAY,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;AAC9G,YAAY,MAAM,qBAAqB,GAAG,gBAAgB,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AAC5E,YAAY,MAAM,KAAK,GAAG;AAC1B,gBAAgB,OAAO,EAAE,KAAK;AAC9B,gBAAgB,eAAe,EAAE,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC;AAC1D,gBAAgB,MAAM,EAAE,SAAS,CAAC,IAAI;AACtC,gBAAgB,MAAM,EAAE,CAAC,QAAQ,GAAG,CAAC,IAAI,QAAQ,GAAG,CAAC,IAAI,IAAI,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI;AAC/F,gBAAgB,aAAa,EAAE,CAAC,SAAS,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,IAAI,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,IAAI,KAAK,QAAQ,CAAC,GAAG,IAAI,GAAG,KAAK;AACvL,gBAAgB,oBAAoB,EAAE,MAAM,CAAC,cAAc,IAAI,SAAS,CAAC,IAAI,KAAK,QAAQ;AAC1F,gBAAgB,mBAAmB,EAAE,MAAM,CAAC,aAAa,IAAI,SAAS,CAAC,IAAI,KAAK,YAAY;AAC5F,gBAAgB,UAAU,EAAE,QAAQ,GAAG,CAAC,IAAI,QAAQ,GAAG,CAAC;AACxD,gBAAgB,UAAU,EAAE,QAAQ;AACpC,gBAAgB,UAAU,EAAE,QAAQ;AACpC,gBAAgB,WAAW,EAAE,SAAS,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,IAAI;AACvF,gBAAgB,OAAO,EAAE,SAAS,CAAC,KAAK,KAAK,MAAM,IAAI,qBAAqB;AAC5E,gBAAgB,aAAa,EAAE,WAAW;AAC1C,gBAAgB,MAAM,EAAE,SAAS,CAAC,IAAI;AACtC,gBAAgB,OAAO,EAAE,SAAS,CAAC,KAAK;AACxC,aAAa,CAAC;AACd,YAAY,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC9B;AACA;AACA,YAAY,MAAM,SAAS,GAAG,eAAe,CAAC,KAAK,CAAC,CAAC;AACrD,YAAY,IAAI,CAAC,SAAS,EAAE;AAC5B,gBAAgB,gBAAgB,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AAClD,YAAY,CAAC;AACb,YAAY,YAAY,IAAI,CAAC,CAAC;AAC9B,QAAQ,CAAC,CAAC,CAAC;AACX,QAAQ,OAAO,KAAK,CAAC;AACrB,IAAI,CAAC;AAEL,CAAC;AAED,SAAS,WAAW,CAAC,IAAI,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE;AACvD;AACA,IAAI,IAAI,OAAO,GAAG,EAAE,CAAC;AACrB,IAAI,IAAI,IAAI,EAAE;AACd,QAAQ,IAAI,KAAK,GAAG,CAAC,CAAC;AACtB,QAAQ,KAAK,IAAI,CAAC,GAAG,MAAM,CAAC,gBAAgB,EAAE,CAAC,GAAG,MAAM,CAAC,gBAAgB,EAAE,CAAC,IAAI,MAAM,CAAC,WAAW,EAAE;AACpG;AACA,YAAY,IAAI,MAAM,GAAG,IAAI,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AACnH,YAAY,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACjC,YAAY,KAAK,IAAI,CAAC,CAAC;AACvB,QAAQ,CAAC;AACT,IAAI,CAAC;AACL,IAAI,OAAO,OAAO,CAAC;AACnB,CAAC;AAED,SAAS,mBAAmB,CAAC,eAAe,EAAE,aAAa,EAAE,WAAW,EAAE;AAC1E,IAAI,MAAM,KAAK,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,qBAAqB,KAAK;AACjE,QAAQ,OAAO,qBAAqB,CAAC,IAAI,CAAC;AAC1C,IAAI,CAAC,CAAC,CAAC;AACP,IAAI,IAAI,aAAa,EAAE;AACvB,QAAQ,IAAI,UAAU,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK;AAC1D,YAAY,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAC3C,QAAQ,CAAC,CAAC,CAAC;AACX,QAAQ,OAAO,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;AACrC,IAAI,CAAC;AACL,SAAS;AACT,QAAQ,OAAO,eAAe,CAAC,MAAM,KAAK,WAAW,CAAC,MAAM,CAAC;AAC7D,IAAI,CAAC;AACL;;ACzwBA,IAAI,gBAAgB,GAAG,EAAE,CAAC;AAC1B,gBAAgB,CAAC,IAAI,GAAG,CAAC,KAAK,EAAE,OAAO,KAAK;AAC5C;AACA,IAAI,MAAM,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK;AAC9C,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC;AAC9B,IAAI,CAAC,CAAC,CAAC;AACP,IAAI,IAAI,CAAC,YAAY,EAAE;AACvB,QAAQ,OAAO,OAAO,CAAC;AACvB,IAAI,CAAC;AACL;AACA,IAAI,IAAI,gBAAgB,GAAG,CAAC,CAAC;AAC7B,IAAI,IAAI,gBAAgB,GAAG,CAAC,CAAC;AAC7B,IAAI,IAAI,YAAY,GAAG,EAAE,CAAC;AAC1B;AACA,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK;AACzB,QAAQ,OAAO,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;AACjC,IAAI,CAAC,CAAC,CAAC;AACP,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK,KAAK;AACnC,QAAQ,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,KAAK,GAAG,CAAC,EAAE;AAC5C;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,QAAQ,CAAC;AACT;AACA;AACA;AACA,QAAQ,IAAI,CAAC,MAAM,IAAI,gBAAgB,CAAC;AACxC,QAAQ,IAAI,IAAI,CAAC,SAAS,EAAE;AAC5B;AACA;AACA;AACA,YAAY,MAAM,mCAAmC,GAAG,OAAO,CAAC,KAAK,CAAC,gBAAgB,EAAE,IAAI,CAAC,MAAM,GAAG,gBAAgB,CAAC,CAAC;AACxH,YAAY,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;AAC5C,YAAY,YAAY,CAAC,IAAI,CAAC,mCAAmC,EAAE,UAAU,CAAC,CAAC;AAC/E;AACA,YAAY,gBAAgB,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,CAAC;AACxF,YAAY,gBAAgB,KAAK,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC;AAC5E;AACA,YAAY,IAAI,CAAC,gBAAgB,GAAG,UAAU,CAAC,MAAM,CAAC;AACtD,YAAY,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AACnC,QAAQ,CAAC;AACT,IAAI,CAAC,CAAC,CAAC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;AACvC,CAAC;;AC3DD,IAAI,kBAAkB,GAAG,EAAE,CAAC;AAC5B,kBAAkB,CAAC,wBAAwB,GAAG,gBAAgB,CAAC,IAAI;;ACDnE,MAAMM,wBAAsB,GAAG,IAAI,CAAC;AACpC,IAAI,qBAAqB,GAAG,EAAE,CAAC;AAC/B,qBAAqB,CAAC,wBAAwB,GAAG,kBAAkB,CAAC,wBAAwB,CAAC;AAC7F,qBAAqB,CAAC,YAAY,GAAG,CAAC,YAAY,EAAE,OAAO,KAAK;AAChE,IAAI,MAAM,MAAM,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,EAAEA,wBAAsB,CAAC,CAAC;AACjE,IAAI,MAAM,SAAS,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;AACpD,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACrD,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACxD,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACxD,IAAI,MAAM,OAAO,GAAG,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,GAAGA,wBAAsB,CAAC,CAAC;AAChF,IAAI,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;AACrD,CAAC;;ACXD;AACA;AACA;AACA,IAAI,eAAe,GAAG,EAAE,CAAC;AACzB,eAAe,CAAC,YAAY,GAAG,qBAAqB,CAAC,YAAY,CAAC;AAClE,eAAe,CAAC,wBAAwB,GAAG,qBAAqB,CAAC,wBAAwB;;ACNzF,IAAI,sBAAsB,GAAG,EAAE,CAAC;AAChC,sBAAsB,CAAC,mBAAmB,GAAG,CAAC,aAAa,EAAE,gBAAgB,KAAK;AAClF,IAAI,IAAI,UAAU,GAAG,EAAE,CAAC;AACxB;AACA,IAAI,MAAM,oBAAoB,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,EAAE,OAAO,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9I,IAAI,IAAI,aAAa,GAAG,CAAC,CAAC;AAC1B,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,oBAAoB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1D,QAAQ,IAAI,MAAM,GAAG,oBAAoB,CAAC,CAAC,CAAC,CAAC;AAC7C,QAAQ,MAAM,CAAC,SAAS,GAAG,KAAK,CAAC;AACjC,QAAQ,MAAM,YAAY,GAAG,MAAM,CAAC,KAAK,CAAC;AAC1C,QAAQ,IAAI,CAAC,GAAG,CAAC,IAAI,YAAY,KAAK,CAAC,EAAE;AACzC;AACA,YAAY,SAAS;AACrB,QAAQ,CAAC;AACT,QAAQ,MAAM,OAAO,GAAG,gBAAgB,CAAC,KAAK,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;AAC5E,QAAQ,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;AAChC,YAAY,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACrC,QAAQ,CAAC;AACT,QAAQ,MAAM,aAAa,GAAG,MAAM,CAAC,OAAO,CAAC;AAC7C,QAAQ,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AACvC,QAAQ,aAAa,GAAG,YAAY,GAAG,aAAa,CAAC,MAAM,CAAC;AAC5D,IAAI,CAAC;AACL,IAAI,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;AAClC,QAAQ,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;AAC/D,IAAI,CAAC;AACL,IAAI,OAAO,UAAU,CAAC;AACtB,CAAC,CAAC;AACF,sBAAsB,CAAC,mBAAmB,GAAG,CAAC,OAAO,KAAK;AAC1D,IAAI,OAAO,EAAE,CAAC;AACd,CAAC,CAAC;AACF,sBAAsB,CAAC,wBAAwB,GAAG,CAAC,KAAK,EAAE,MAAM,KAAK;AACrE;AACA,IAAI,MAAM,mBAAmB,GAAG,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,WAAW,KAAK;AAC1E,QAAQ,OAAO,WAAW,CAAC,IAAI,KAAK,QAAQ,CAAC;AAC7C,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,GAAG,KAAK;AAC9B,QAAQ,OAAO,KAAK,GAAG,GAAG,CAAC,SAAS,CAAC;AACrC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;AACV;AACA,IAAI,IAAI,aAAa,GAAG,CAAC,CAAC;AAC1B,IAAI,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,KAAK,KAAK;AACzC,QAAQ,OAAO,KAAK,CAAC,MAAM,CAAC,IAAI,KAAK,QAAQ,CAAC;AAC9C,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK;AACtB,QAAQ,OAAO,CAAC,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;AAC/C,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,KAAK;AAC1B,QAAQ,IAAI,KAAK,CAAC,gBAAgB,EAAE;AACpC,YAAY,KAAK,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,mBAAmB,IAAI,aAAa,CAAC;AACjG,QAAQ,CAAC;AACT,QAAQ,aAAa,IAAI,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC;AAChD,IAAI,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;AACF,sBAAsB,CAAC,sBAAsB,GAAG,CAAC,KAAK,EAAE,MAAM,KAAK;AACnE;AACA,IAAI,MAAM,mBAAmB,GAAG,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,WAAW,KAAK;AAC1E,QAAQ,OAAO,WAAW,CAAC,IAAI,KAAK,YAAY,CAAC;AACjD,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,GAAG,KAAK;AAC9B,QAAQ,OAAO,KAAK,GAAG,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC;AACzC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;AACV;AACA,IAAI,IAAI,aAAa,GAAG,CAAC,CAAC;AAC1B,IAAI,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,KAAK,KAAK;AACzC,QAAQ,OAAO,KAAK,CAAC,MAAM,CAAC,IAAI,KAAK,YAAY,CAAC;AAClD,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK;AACtB,QAAQ,OAAO,CAAC,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;AAC/C,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,KAAK;AAC1B,QAAQ,IAAI,KAAK,CAAC,eAAe,EAAE;AACnC,YAAY,KAAK,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,mBAAmB,IAAI,aAAa,CAAC;AAChG,QAAQ,CAAC;AACT,QAAQ,aAAa,IAAI,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC;AAChD,IAAI,CAAC,CAAC,CAAC;AACP,CAAC;;ACpED,IAAI,sBAAsB,GAAG,EAAE,CAAC;AAChC,sBAAsB,CAAC,WAAW,GAAG,CAAC,IAAI,KAAK;AAC/C,IAAI,MAAM,WAAW,GAAG,IAAI,CAAC;AAC7B,IAAI,MAAM,SAAS,GAAGC,eAAa,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,MAAM,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjD,IAAI,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;AACnD,IAAI,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;AACzD,IAAI,MAAM,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;AAC7D,IAAI,MAAM,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,EAAE,CAAC,CAAC;AAC9D,IAAI,MAAM,OAAO,GAAGA,eAAa,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,EAAE,EAAE,WAAW,GAAG,EAAE,CAAC,CAAC,CAAC;AAClF,IAAI,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,EAAE,CAAC,CAAC;AAC1D,IAAI,MAAM,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,EAAE,CAAC,CAAC;AAC9D,IAAI,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,CAAC;AAC9C,IAAI,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,CAAC;AAC9C,IAAI,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,CAAC;AAC9C,IAAI,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,CAAC;AAC9C,IAAI,MAAM,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,EAAE,CAAC,CAAC;AACjE,IAAI,IAAI,YAAY,GAAG,WAAW,GAAG,EAAE,CAAC;AACxC,IAAI,IAAI,kBAAkB,GAAG,IAAI,CAAC;AAClC,IAAI,IAAI,cAAc,GAAG,IAAI,CAAC;AAC9B,IAAI,IAAI,gBAAgB,GAAG,CAAC,EAAE;AAC9B,QAAQ,YAAY,IAAI,gBAAgB,CAAC;AACzC,QAAQ,kBAAkB,IAAI,gBAAgB,GAAG,CAAC,CAAC;AACnD,QAAQ,cAAc,GAAGA,eAAa,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,EAAE,EAAE,WAAW,GAAG,EAAE,GAAG,gBAAgB,CAAC,CAAC,CAAC;AAC1G,IAAI,CAAC;AACL,IAAI,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;AACxD,IAAI,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;AAC7D,IAAI,MAAM,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;AACjE,IAAI,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC,CAAC;AAC3D,IAAI,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC,CAAC;AAC9D,IAAI,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC,CAAC;AAC9D,IAAI,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC,CAAC;AAC3D,IAAI,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC,CAAC;AAC3D,IAAI,MAAM,OAAO,GAAGA,eAAa,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,EAAE,EAAE,YAAY,GAAG,EAAE,CAAC,CAAC,CAAC;AACpF,IAAI,MAAM,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC,CAAC;AAC/D,IAAI,MAAM,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC,CAAC;AAClE,IAAI,MAAM,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC,CAAC;AAClE,IAAI,MAAM,mBAAmB,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC,CAAC;AACrE,IAAI,MAAM,iBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC,CAAC;AACnE,IAAqB,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,EAAE;AAC1D,IAAI,MAAM,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC,CAAC;AACjE,IAAI,IAAI,WAAW,GAAG,IAAI,GAAG,gBAAgB,CAAC;AAC9C,IAAI,MAAM,cAAc,GAAG,gBAAgB,GAAG,YAAY,CAAC;AAC3D,IAAI,IAAI,UAAU,GAAG,CAAC,CAAC;AACvB,IAAI,IAAI,YAAY,GAAG,CAAC,CAAC;AACzB,IAAI,IAAI,OAAO,EAAE;AACjB,QAAQ,UAAU,GAAG,IAAI,GAAG,gBAAgB,CAAC;AAC7C;AACA,QAAQ,YAAY,GAAG,gBAAgB,GAAG,CAAC,CAAC;AAC5C,IAAI,CAAC;AACL,IAAI,OAAO;AACX,QAAQ,MAAM,EAAE,SAAS;AACzB,QAAQ,SAAS,EAAE,OAAO;AAC1B,QAAQ,SAAS,EAAE,OAAO;AAC1B,QAAQ,WAAW,EAAE,SAAS;AAC9B,QAAQ,UAAU,EAAE,SAAS;AAC7B,QAAQ,eAAe,EAAE,aAAa;AACtC,QAAQ,eAAe,EAAE,aAAa;AACtC,QAAQ,SAAS,EAAE,OAAO;AAC1B,QAAQ,WAAW,EAAE,SAAS;AAC9B,QAAQ,eAAe,EAAE,aAAa;AACtC,QAAQ,YAAY,EAAE,UAAU;AAChC,QAAQ,YAAY,EAAE,UAAU;AAChC,QAAQ,YAAY,EAAE,UAAU;AAChC,QAAQ,YAAY,EAAE,UAAU;AAChC,QAAQ,kBAAkB,EAAE,gBAAgB;AAC5C,QAAQ,gBAAgB,EAAE,cAAc;AACxC,QAAQ,aAAa,EAAE,WAAW;AAClC,QAAQ,cAAc,EAAE,YAAY;AACpC,QAAQ,kBAAkB,EAAE,gBAAgB;AAC5C,QAAQ,WAAW,EAAE,SAAS;AAC9B,QAAQ,cAAc,EAAE,YAAY;AACpC,QAAQ,cAAc,EAAE,YAAY;AACpC,QAAQ,WAAW,EAAE,SAAS;AAC9B,QAAQ,WAAW,EAAE,SAAS;AAC9B,QAAQ,YAAY,EAAE,UAAU;AAChC,QAAQ,cAAc,EAAE,IAAI;AAC5B,QAAQ,mBAAmB,EAAE,kBAAkB;AAC/C,QAAQ,mBAAmB,EAAE,CAAC;AAC9B,QAAQ,aAAa,EAAE,YAAY;AACnC,QAAQ,aAAa,EAAE,WAAW;AAClC,QAAQ,SAAS,EAAE,OAAO;AAC1B,QAAQ,eAAe,EAAE,aAAa;AACtC,QAAQ,kBAAkB,EAAE,gBAAgB;AAC5C,QAAQ,gBAAgB,EAAE,cAAc;AACxC,QAAQ,kBAAkB,EAAE,gBAAgB,KAAK,CAAC,IAAI,CAAC,OAAO,GAAG,UAAU,GAAG,UAAU,IAAI,gBAAgB,GAAG,CAAC,CAAC;AACjH,QAAQ,kBAAkB,EAAE,gBAAgB,KAAK,CAAC,IAAI,CAAC,OAAO,GAAG,UAAU,IAAI,gBAAgB,GAAG,YAAY,CAAC,GAAG,UAAU,IAAI,gBAAgB,GAAG,CAAC,CAAC,IAAI,gBAAgB,GAAG,YAAY,CAAC;AACzL,QAAQ,aAAa,EAAE,gBAAgB;AACvC,QAAQ,gBAAgB,EAAE,mBAAmB;AAC7C,QAAQ,YAAY,EAAE,iBAAiB;AACvC,QAAQ,iBAAiB,EAAE,eAAe;AAC1C,QAAQ,eAAe,EAAE,KAAK;AAC9B,KAAK,CAAC;AACN,CAAC,CAAC;AACF,sBAAsB,CAAC,+BAA+B,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,KAAK;AACnF,IAAI,IAAI,MAAM,CAAC,OAAO,EAAE;AACxB,QAAQ,OAAO;AACf,YAAY,YAAY,EAAE,MAAM,CAAC,UAAU;AAC3C,YAAY,aAAa,EAAE,MAAM,CAAC,WAAW;AAC7C,YAAY,kBAAkB,EAAE,MAAM,CAAC,gBAAgB;AACvD,YAAY,kBAAkB,EAAE,MAAM,CAAC,gBAAgB;AACvD,SAAS,CAAC;AACV,IAAI,CAAC;AACL,SAAS;AACT,QAAQ,IAAI,UAAU,GAAG,MAAM,CAAC,YAAY,IAAI,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,gBAAgB,CAAC;AACjG,QAAQ,MAAM,UAAU,GAAG,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC;AAC9E,QAAQ,IAAI,YAAY,GAAG,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,iBAAiB,EAAE,MAAM,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC,CAAC,CAAC;AAChJ,QAAQ,OAAO;AACf,YAAY,YAAY,EAAE,UAAU;AACpC,YAAY,aAAa,EAAE,YAAY;AACvC,YAAY,kBAAkB,EAAE,UAAU;AAC1C,YAAY,kBAAkB,EAAE,UAAU,IAAI,MAAM,CAAC,gBAAgB,GAAG,YAAY,CAAC;AACrF,SAAS,CAAC;AACV,IAAI,CAAC;AACL,CAAC,CAAC;AACF,SAASA,eAAa,CAAC,IAAI,EAAE;AAC7B,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC;AAClB,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;AACd,IAAI,GAAG;AACP,QAAQ,IAAI,IAAI,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,QAAQ,CAAC,IAAI,CAAC,CAAC;AACf,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;AAC/C,IAAI,OAAO,IAAI,CAAC;AAChB;;AC1HA;AACA;AACA;AACA,IAAI,gBAAgB,GAAG,EAAE,CAAC;AAC1B,gBAAgB,CAAC,WAAW,GAAG,sBAAsB,CAAC,WAAW,CAAC;AAClE,gBAAgB,CAAC,+BAA+B,GAAG,sBAAsB,CAAC,+BAA+B,CAAC;AAC1G,gBAAgB,CAAC,mBAAmB,GAAG,sBAAsB,CAAC,mBAAmB,CAAC;AAClF,gBAAgB,CAAC,mBAAmB,GAAG,sBAAsB,CAAC,mBAAmB,CAAC;AAClF,gBAAgB,CAAC,mBAAmB,GAAG,sBAAsB,CAAC,mBAAmB,CAAC;AAClF,gBAAgB,CAAC,wBAAwB,GAAG,sBAAsB,CAAC,wBAAwB,CAAC;AAC5F,gBAAgB,CAAC,sBAAsB,GAAG,sBAAsB,CAAC,sBAAsB;;ACZvF,IAAI,4BAA4B,GAAG,EAAE,CAAC;AACtC,4BAA4B,CAAC,0BAA0B,GAAG,CAAC,KAAK,EAAE,IAAI,KAAK;AAC3E,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,gBAAgB,CAAC,KAAK,GAAG,KAAK,CAAC,gBAAgB,CAAC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;AAC7G,CAAC,CAAC;AACF,4BAA4B,CAAC,gCAAgC,GAAG,CAAC,cAAc,EAAE,SAAS,KAAK;AAC/F,IAAI,IAAI,WAAW,GAAG,cAAc,CAAC;AACrC,IAAI,IAAI,WAAW,CAAC,MAAM,GAAG,SAAS,EAAE;AACxC,QAAQ,WAAW,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;AAC1D,IAAI,CAAC;AACL,IAAI,MAAM,2BAA2B,GAAG,SAAS,GAAG,cAAc,CAAC,MAAM,CAAC;AAC1E,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,2BAA2B,EAAE,CAAC,EAAE,EAAE;AAC1D,QAAQ,WAAW,IAAI,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AAC9C,IAAI,CAAC;AACL,IAAI,OAAO,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACpC,CAAC;;ACbD;AACA;AACA;AACA,IAAI,iBAAiB,GAAG,EAAE,CAAC;AAC3B,iBAAiB,CAAC,0BAA0B,GAAG,4BAA4B,CAAC,0BAA0B,CAAC;AACvG,iBAAiB,CAAC,gCAAgC,GAAG,4BAA4B,CAAC,gCAAgC;;ACDlH,MAAMT,YAAU,GAAG,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAClD,MAAMC,WAAS,GAAG,OAAO,CAACD,YAAU,CAAC,CAAC;AACtC;AACA,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAACC,WAAS,EAAE,uCAA0C,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;AAC1H,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAACA,WAAS,EAAE,uCAA0C,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;AAC1H,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAACA,WAAS,EAAE,sCAAyC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;AACxH;AACA;AACA,MAAM,cAAc,GAAG,CAAC,CAAC;AACzB,MAAM,iBAAiB,GAAG,CAAC,CAAC;AAC5B,MAAM,gBAAgB,GAAG,CAAC,CAAC;AAC3B,MAAM,gBAAgB,GAAG,EAAE,CAAC;AAC5B;AACA,IAAI,MAAM,CAAC;AACX,IAAI,MAAM,GAAG,CAAC,CAAC;AACf;AACA,SAAS,SAAS,CAAC,MAAM,EAAE;AAC3B,IAAI,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,GAAG,MAAM,CAAC,CAAC;AAC3D,IAAI,MAAM,IAAI,MAAM,CAAC;AACrB,IAAI,OAAO,KAAK,CAAC;AACjB,CAAC;AACD;AACA,SAAS,QAAQ,GAAG;AACpB,IAAI,OAAO,SAAS,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC;AACD;AACA,SAAS,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE;AACrC,IAAI,MAAM,IAAI,MAAM,CAAC;AACrB,CAAC;AACD;AACA,SAAS,aAAa,CAAC,WAAW;AAClC;AACA,IAAI,IAAI,KAAK,GAAG,EAAE,CAAC;AACnB;AACA,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE;AACvC,IAAI;AACJ,QAAQ,IAAI,YAAY,GAAG,EAAE,CAAC;AAC9B,QAAQ,IAAI,YAAY,GAAG,EAAE,CAAC;AAC9B;AACA,QAAQ;AACR,QAAQ;AACR,YAAY,GAAG,YAAY,KAAK,EAAE;AAClC,YAAY;AACZ,gBAAgB,eAAe,EAAE,CAAC;AAClC,YAAY,CAAC;AACb,YAAY,IAAI,QAAQ,GAAG,wCAAwC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;AAClF,YAAY,IAAI,SAAS,GAAG,mBAAmB,CAAC,QAAQ,CAAC,CAAC;AAC1D;AACA,YAAY,IAAI,SAAS,GAAG,QAAQ,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AACpD;AACA,YAAY,OAAO,SAAS;AAC5B;AACA,gBAAgB,KAAK,cAAc;AACnC,oBAAoB,IAAI,QAAQ,GAAG,4BAA4B,EAAE,CAAC;AAClE;AACA,oBAAoB,GAAG,CAAC,SAAS;AACjC,oBAAoB;AACpB,wBAAwB,MAAM;AAC9B,oBAAoB,CAAC;AACrB;AACA;AACA,oBAAoB,GAAG,SAAS,KAAK,UAAU;AAC/C,oBAAoB;AACpB,wBAAwB,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC,CAAC;AACzD,oBAAoB,CAAC;AACrB,yBAAyB,GAAG,SAAS,KAAK,aAAa,IAAI,SAAS,KAAK,iBAAiB;AAC1F,oBAAoB;AACpB,wBAAwB,QAAQ,GAAG,gBAAgB,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,QAAQ,CAAC,CAAC;AACrF,oBAAoB,CAAC;AACrB;AACA,oBAAoB,YAAY,CAAC,SAAS,CAAC,GAAG,QAAQ,CAAC;AACvD,oBAAoB,MAAM;AAC1B,gBAAgB,KAAK,iBAAiB;AACtC,oBAAoB,IAAI,YAAY,GAAG,4BAA4B,EAAE,CAAC;AACtE,oBAAoB,IAAI,WAAW,GAAG,SAAS,CAAC,YAAY,CAAC,CAAC;AAC9D;AACA,oBAAoB,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAC5E;AACA,oBAAoB,GAAG,CAAC,SAAS;AACjC,oBAAoB;AACpB,wBAAwB,MAAM;AAC9B,oBAAoB,CAAC;AACrB;AACA,oBAAoB,YAAY,CAAC,SAAS,CAAC,GAAG,WAAW,CAAC;AAC1D,oBAAoB,MAAM;AAC1B,gBAAgB,KAAK,gBAAgB;AACrC,oBAAoB,IAAI,UAAU,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;AACjE;AACA,oBAAoB,GAAG,CAAC,SAAS;AACjC,oBAAoB;AACpB,wBAAwB,MAAM;AAC9B,oBAAoB,CAAC;AACrB;AACA,oBAAoB,YAAY,CAAC,SAAS,CAAC,GAAG,UAAU,CAAC;AACzD,oBAAoB,MAAM;AAC1B,gBAAgB,KAAK,gBAAgB;AACrC,oBAAoB,QAAQ,EAAE,CAAC;AAC/B,oBAAoB,IAAI,WAAW,GAAG,4BAA4B,EAAE,CAAC;AACrE;AACA;AACA,oBAAoB,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,IAAI;AAC9C,oBAAoB;AACpB,wBAAwB,YAAY,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;AACrD,wBAAwB,QAAQ,EAAE,CAAC;AACnC,wBAAwB,MAAM;AAC9B,oBAAoB,CAAC;AACrB,oBAAoB,IAAI,WAAW,GAAG,aAAa,CAAC,WAAW,CAAC,CAAC;AACjE;AACA,oBAAoB,GAAG,CAAC,SAAS;AACjC,oBAAoB;AACpB,wBAAwB,MAAM;AAC9B,oBAAoB,CAAC;AACrB;AACA,oBAAoB,YAAY,CAAC,SAAS,CAAC,GAAG,WAAW,CAAC;AAC1D,oBAAoB,MAAM;AAG1B,aAAa;AACb;AACA,YAAY,YAAY,GAAG,QAAQ,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AACnD,QAAQ,CAAC;AACT,cAAc,YAAY,KAAK,IAAI,EAAE;AACrC;AACA,QAAQ,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACjC,IAAI,CAAC;AACL;AACA,IAAI,OAAO,KAAK,CAAC;AACjB,CAAC;AACD;AACA,SAAS,mBAAmB,CAAC,QAAQ;AACrC;AACA,IAAI,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC5C;AACA,IAAI,IAAI,MAAM,KAAK,IAAI,MAAM;AAC7B,IAAI;AACJ,QAAQ,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,QAAQ;AAC9C,QAAQ;AACR,YAAY,OAAO,KAAK,CAAC;AACzB,QAAQ,CAAC;AACT,IAAI,CAAC;AACL,CAAC;AACD;AACA,SAAS,gBAAgB,CAAC,MAAM,EAAE,OAAO;AACzC;AACA,IAAI,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACvC;AACA,IAAI,IAAI,MAAM,KAAK,IAAI,MAAM;AAC7B,IAAI;AACJ,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,OAAO;AACpC,QAAQ;AACR,YAAY,OAAO,KAAK,CAAC;AACzB,QAAQ,CAAC;AACT,IAAI,CAAC;AACL,CAAC;AACD;AACA;AACA;AACO,SAAS,cAAc,CAAC,OAAO;AACtC;AACA,IAAI,MAAM,GAAG,OAAO,CAAC;AACrB,IAAI,MAAM,GAAG,CAAC,CAAC;AACf;AACA,IAAI,IAAI,YAAY,GAAG,EAAE,CAAC;AAC1B;AACA,IAAI,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM;AAChC,IAAI;AACJ,QAAQ,IAAI,UAAU,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AACtC,QAAQ,IAAI,QAAQ,GAAG,wCAAwC,CAAC,UAAU,CAAC,CAAC;AAC5E;AACA,QAAQ,IAAI,SAAS,GAAG,mBAAmB,CAAC,QAAQ,CAAC,CAAC;AACtD,QAAQ,IAAI,SAAS,GAAG,QAAQ,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AAChD;AACA,QAAQ,GAAG,SAAS,KAAK,IAAI;AAC7B,QAAQ;AACR,YAAY,QAAQ,EAAE,CAAC;AACvB,YAAY,SAAS;AACrB,QAAQ,CAAC;AACT,QAAQ,OAAO,SAAS;AACxB;AACA,YAAY,KAAK,cAAc;AAC/B,gBAAgB,IAAI,QAAQ,GAAG,4BAA4B,EAAE,CAAC;AAC9D;AACA,gBAAgB,GAAG,CAAC,SAAS;AAC7B,gBAAgB;AAChB,oBAAoB,MAAM;AAC1B,gBAAgB,CAAC;AACjB;AACA;AACA,gBAAgB,GAAG,SAAS,KAAK,UAAU;AAC3C,gBAAgB;AAChB,oBAAoB,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC,CAAC;AACrD,gBAAgB,CAAC;AACjB,qBAAqB,GAAG,SAAS,KAAK,aAAa,IAAI,SAAS,KAAK,iBAAiB;AACtF,gBAAgB;AAChB,oBAAoB,QAAQ,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,CAAC;AAC/D,gBAAgB,CAAC;AACjB;AACA,gBAAgB,YAAY,CAAC,SAAS,CAAC,GAAG,QAAQ,CAAC;AACnD,gBAAgB,MAAM;AACtB,YAAY,KAAK,iBAAiB;AAClC,gBAAgB,IAAI,YAAY,GAAG,4BAA4B,EAAE,CAAC;AAClE,gBAAgB,IAAI,WAAW,GAAG,SAAS,CAAC,YAAY,CAAC,CAAC;AAC1D;AACA,gBAAgB,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AACxE;AACA,gBAAgB,GAAG,CAAC,SAAS;AAC7B,gBAAgB;AAChB,oBAAoB,MAAM;AAC1B,gBAAgB,CAAC;AACjB;AACA,gBAAgB,YAAY,CAAC,SAAS,CAAC,GAAG,WAAW,CAAC;AACtD,gBAAgB,MAAM;AACtB,YAAY,KAAK,gBAAgB;AACjC,gBAAgB,IAAI,UAAU,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;AAC7D;AACA,gBAAgB,GAAG,CAAC,SAAS;AAC7B,gBAAgB;AAChB,oBAAoB,MAAM;AAC1B,gBAAgB,CAAC;AACjB;AACA,gBAAgB,YAAY,CAAC,SAAS,CAAC,GAAG,UAAU,CAAC;AACrD,gBAAgB,MAAM;AACtB,YAAY,KAAK,gBAAgB;AACjC,gBAAgB,QAAQ,EAAE,CAAC;AAC3B,gBAAgB,IAAI,WAAW,GAAG,4BAA4B,EAAE,CAAC;AACjE,gBAAgB,IAAI,WAAW,GAAG,aAAa,CAAC,WAAW,CAAC,CAAC;AAC7D;AACA,gBAAgB,GAAG,CAAC,SAAS;AAC7B,gBAAgB;AAChB,oBAAoB,MAAM;AAC1B,gBAAgB,CAAC;AACjB;AACA,gBAAgB,GAAG,QAAQ,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,IAAI;AACnD,gBAAgB;AAChB,oBAAoB,eAAe,EAAE,CAAC;AACtC,gBAAgB,CAAC;AACjB;AACA,gBAAgB,YAAY,CAAC,SAAS,CAAC,GAAG,WAAW,CAAC;AAGtD;AACA,SAAS;AACT,IAAI,CAAC;AACL;AACA,IAAI,OAAO,YAAY,CAAC;AACxB,CAAC;AACD;AACA,SAAS,wCAAwC,CAAC,IAAI;AACtD;AACA,IAAI,MAAM,EAAE,GAAG,IAAIJ,wBAAO,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AAClD,IAAI,EAAE,CAAC,SAAS,GAAG,IAAI,CAAC;AACxB,IAAI,MAAM,aAAa,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC;AAChD;AACA,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC;AAClB;AACA,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,EAAE,CAAC,EAAE;AAC1C,IAAI;AACJ,QAAQ,IAAI,IAAI,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACxD,IAAI,CAAC;AACL;AACA,IAAI,OAAO,IAAI,CAAC;AAChB;AACA,IAAI,SAAS,WAAW,CAAC,MAAM;AAC/B,IAAI;AACJ,QAAQ,OAAO,EAAE,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;AAC1C,IAAI,CAAC;AACL,CAAC;AACD;AACA,SAAS,4BAA4B;AACrC;AACA,IAAI,IAAI,SAAS,GAAG,EAAE,CAAC;AACvB,IAAI,IAAI,WAAW,CAAC;AACpB;AACA,IAAI;AACJ,IAAI;AACJ,QAAQ,WAAW,GAAG,QAAQ,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AAC9C,QAAQ,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACpC,IAAI,CAAC;AACL,WAAW,WAAW,GAAG,IAAI,GAAG;AAChC;AACA,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC;AAClB,IAAI,IAAI,UAAU,GAAG,KAAK,CAAC;AAC3B;AACA,IAAI,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACvC;AACA,IAAI,KAAK,IAAI,CAAC,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AAChD,QAAQ,IAAI,WAAW,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AAC3C;AACA,QAAQ,IAAI,CAAC,MAAM,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;AACpC,QAAQ,WAAW,GAAG,WAAW,GAAG,IAAI,CAAC;AACzC,QAAQ,CAAC;AACT;AACA,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,MAAM,IAAI,EAAE;AACtD,QAAQ,WAAW,GAAG,WAAW,GAAG,IAAI,CAAC;AACzC,QAAQ,UAAU,GAAG,IAAI,CAAC;AAC1B,QAAQ,CAAC;AACT;AACA,QAAQ,IAAI,oBAAoB,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AAChD;AACA,QAAQ,IAAI,CAAC,GAAG,CAAC,EAAE;AACnB,QAAQ,oBAAoB,GAAG,oBAAoB,IAAI,CAAC,CAAC;AACzD,QAAQ,CAAC;AACT;AACA,QAAQ,KAAK,IAAI,WAAW,GAAG,oBAAoB,CAAC;AACpD;AACA,QAAQ,IAAI,UAAU,EAAE;AACxB,QAAQ,KAAK,IAAI,EAAE,CAAC;AACpB,QAAQ,CAAC;AACT,IAAI,CAAC;AACL;AACA,IAAI,OAAO,KAAK,CAAC;AACjB;;ACzTA,IAAIa,8BAA4B,GAAG,EAAE,CAAC;AACtCA,8BAA4B,CAAC,qBAAqB,GAAG,CAAC,gBAAgB,KAAK;AAC3E,IAAI,OAAO,gBAAgB,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/D,CAAC,CAAC;AACFA,8BAA4B,CAAC,0BAA0B,GAAG,CAAC,KAAK,EAAE,IAAI,KAAK;AAC3E,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC,KAAK,GAAG,KAAK,CAAC,eAAe,CAAC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC,EAAE,CAAC;AAC/G;AACA,CAAC,CAAC;AACFA,8BAA4B,CAAC,gCAAgC,GAAG,CAAC,gBAAgB,KAAK;AACtF,IAAI,MAAM,kBAAkB,GAAGA,8BAA4B,CAAC,qBAAqB,CAAC,gBAAgB,CAAC,CAAC;AACpG;AACA,IAAI,MAAM,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,CAAC;AAC5F;AACA,IAAI,IAAI,gBAAgB,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AACrC,QAAQ,MAAM,QAAQ,GAAG,cAAc,CAAC,gBAAgB,CAAC,CAAC;AAC1D,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;AACxC,IAAI,CAAC;AACL;AACA,IAAI,OAAO,gBAAgB,CAAC,QAAQ,EAAE,CAAC;AACvC,CAAC,CAAC;AACFA,8BAA4B,CAAC,gCAAgC,GAAG,CAAC,cAAc,EAAE,mBAAmB,EAAE,SAAS,KAAK;AACpH,IAAI,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;AACnD,IAAI,IAAI,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,SAAS,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;AAC9D,IAAI,IAAI,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAClC,IAAI,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAC7C,IAAI,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,CAAC;AACzD,CAAC;;AC5BD;AACA;AACA;AACA,IAAI,iBAAiB,GAAG,EAAE,CAAC;AAC3B,iBAAiB,CAAC,0BAA0B,GAAGA,8BAA4B,CAAC,0BAA0B,CAAC;AACvG,iBAAiB,CAAC,gCAAgC,GAAGA,8BAA4B,CAAC,gCAAgC,CAAC;AACnH,iBAAiB,CAAC,gCAAgC,GAAGA,8BAA4B,CAAC,gCAAgC;;ACH3G,MAAMC,MAAI,GAAG,aAAa,CAAC;AAKlC,kBAAe;AACf,UAAIA,MAAI;AACR,IAAI,IAAI,EAAE,eAAe;AACzB,IAAI,KAAK,EAAE,gBAAgB;AAC3B,IAAI,WAAW,EAAEC,iBAAsB;AACvC,IAAI,WAAW,EAAE,iBAAiB;AAClC,CAAC;;ACdD;AACA;AACA;AACA,IAAI,eAAe,GAAG,EAAE,CAAC;AACzB,eAAe,CAAC,YAAY,GAAG,qBAAqB,CAAC,YAAY,CAAC;AAClE,eAAe,CAAC,wBAAwB,GAAG,qBAAqB,CAAC,wBAAwB;;ACNzF,IAAI,sBAAsB,GAAG,EAAE,CAAC;AAChC,sBAAsB,CAAC,WAAW,GAAG,CAAC,IAAI,KAAK;AAC/C,IAAI,MAAM,WAAW,GAAG,IAAI,CAAC;AAC7B,IAAI,MAAM,SAAS,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,MAAM,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjD,IAAI,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;AACnD,IAAI,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;AACzD,IAAI,MAAM,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;AAC7D,IAAI,MAAM,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,EAAE,CAAC,CAAC;AAC9D,IAA0B,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,EAAE,EAAE;AAC9D,IAAI,MAAM,OAAO,GAAG,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,EAAE,EAAE,WAAW,GAAG,EAAE,CAAC,CAAC,CAAC;AAClF,IAAI,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,EAAE,CAAC,CAAC;AAC1D,IAAI,MAAM,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,EAAE,CAAC,CAAC;AAC9D,IAAI,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,CAAC;AAC9C,IAAI,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,CAAC;AAC9C,IAAI,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,CAAC;AAC9C,IAAI,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,CAAC;AAC9C,IAAI,MAAM,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,EAAE,CAAC,CAAC;AACjE,IAAI,IAAI,YAAY,GAAG,WAAW,GAAG,EAAE,CAAC;AACxC,IAAI,IAAI,kBAAkB,GAAG,IAAI,CAAC;AAClC,IAAI,IAAI,cAAc,GAAG,IAAI,CAAC;AAC9B,IAAI,IAAI,gBAAgB,GAAG,CAAC,EAAE;AAC9B,QAAQ,YAAY,IAAI,gBAAgB,CAAC;AACzC,QAAQ,kBAAkB,IAAI,gBAAgB,GAAG,CAAC,CAAC;AACnD,QAAQ,cAAc,GAAG,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,EAAE,EAAE,WAAW,GAAG,EAAE,GAAG,gBAAgB,CAAC,CAAC,CAAC;AAC1G,IAAI,CAAC;AACL,IAAI,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;AACxD,IAAI,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;AAC7D,IAAI,MAAM,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;AACjE,IAAI,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC,CAAC;AAC3D,IAAI,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC,CAAC;AAC9D,IAAI,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC,CAAC;AAC9D,IAAI,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC,CAAC;AAC3D,IAAI,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC,CAAC;AAC3D,IAAI,MAAM,OAAO,GAAG,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,EAAE,EAAE,YAAY,GAAG,EAAE,CAAC,CAAC,CAAC;AACpF,IAAI,MAAM,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC,CAAC;AAC/D,IAAI,MAAM,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC,CAAC;AAClE,IAAI,MAAM,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC,CAAC;AAClE,IAAI,MAAM,mBAAmB,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC,CAAC;AACrE,IAAI,MAAM,iBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC,CAAC;AACnE,IAAqB,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,EAAE;AAC1D,IAAI,MAAM,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC,CAAC;AACjE,IAAI,IAAI,WAAW,GAAG,IAAI,GAAG,gBAAgB,CAAC;AAC9C,IAAI,MAAM,cAAc,GAAG,gBAAgB,GAAG,YAAY,CAAC;AAC3D,IAAI,IAAI,UAAU,GAAG,WAAW,CAAC;AACjC,IAAI,IAAI,YAAY,GAAG,gBAAgB,GAAG,CAAC,CAAC;AAC5C,IAAI,IAAI,gBAAgB,EAAE,gBAAgB,CAAC;AAG3C,IAAI,IAAI,CAAC,OAAO,EAAE;AAClB,QAAQ,UAAU,GAAG,UAAU,IAAI,iBAAiB,GAAG,CAAC,CAAC,CAAC;AAC1D,QAAQ,gBAAgB,GAAG,UAAU,CAAC;AACtC,QAAQ,gBAAgB,GAAG,UAAU,IAAI,gBAAgB,GAAG,YAAY,CAAC,CAAC;AAC1E,IAAI,CAAC;AACL,SAAS;AACT,QAAQ,gBAAgB,GAAG,UAAU,IAAI,gBAAgB,GAAG,CAAC,CAAC,CAAC;AAC/D,QAAQ,gBAAgB,GAAG,gBAAgB,IAAI,gBAAgB,GAAG,YAAY,CAAC,CAAC;AAChF,IAAI,CAAC;AACL,IAAI,OAAO;AACX,QAAQ,MAAM,EAAE,SAAS;AACzB,QAAQ,SAAS,EAAE,OAAO;AAC1B,QAAQ,SAAS,EAAE,OAAO;AAC1B,QAAQ,WAAW,EAAE,SAAS;AAC9B,QAAQ,UAAU,EAAE,SAAS;AAC7B,QAAQ,eAAe,EAAE,aAAa;AACtC,QAAQ,eAAe,EAAE,aAAa;AACtC,QAAQ,SAAS,EAAE,OAAO;AAC1B,QAAQ,WAAW,EAAE,SAAS;AAC9B,QAAQ,eAAe,EAAE,aAAa;AACtC,QAAQ,YAAY,EAAE,UAAU;AAChC,QAAQ,YAAY,EAAE,UAAU;AAChC,QAAQ,YAAY,EAAE,UAAU;AAChC,QAAQ,YAAY,EAAE,UAAU;AAChC,QAAQ,kBAAkB,EAAE,gBAAgB;AAC5C,QAAQ,gBAAgB,EAAE,cAAc;AACxC,QAAQ,aAAa,EAAE,WAAW;AAClC,QAAQ,cAAc,EAAE,YAAY;AACpC,QAAQ,kBAAkB,EAAE,gBAAgB;AAC5C,QAAQ,WAAW,EAAE,SAAS;AAC9B,QAAQ,cAAc,EAAE,YAAY;AACpC,QAAQ,cAAc,EAAE,YAAY;AACpC,QAAQ,WAAW,EAAE,SAAS;AAC9B,QAAQ,WAAW,EAAE,SAAS;AAC9B,QAAQ,YAAY,EAAE,UAAU;AAChC,QAAQ,cAAc,EAAE,IAAI;AAC5B,QAAQ,mBAAmB,EAAE,kBAAkB;AAC/C,QAAQ,mBAAmB,EAAE,EAAE;AAC/B,QAAQ,aAAa,EAAE,YAAY;AACnC,QAAQ,aAAa,EAAE,WAAW;AAClC,QAAQ,SAAS,EAAE,OAAO;AAC1B,QAAQ,eAAe,EAAE,aAAa;AACtC,QAAQ,kBAAkB,EAAE,gBAAgB;AAC5C,QAAQ,gBAAgB,EAAE,cAAc;AACxC,QAAQ,kBAAkB,EAAE,gBAAgB;AAC5C,QAAQ,kBAAkB,EAAE,gBAAgB;AAC5C,QAAQ,aAAa,EAAE,gBAAgB;AACvC,QAAQ,gBAAgB,EAAE,mBAAmB;AAC7C,QAAQ,YAAY,EAAE,iBAAiB;AACvC,QAAQ,iBAAiB,EAAE,eAAe;AAC1C,QAAQ,eAAe,EAAE,KAAK;AAC9B,KAAK,CAAC;AACN,CAAC,CAAC;AACF,sBAAsB,CAAC,+BAA+B,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,KAAK;AACnF;AACA;AACA;AACA,IAAI,OAAO;AACX,QAAQ,YAAY,EAAE,MAAM,CAAC,UAAU;AACvC,QAAQ,aAAa,EAAE,MAAM,CAAC,WAAW;AACzC,QAAQ,kBAAkB,EAAE,MAAM,CAAC,gBAAgB;AACnD,QAAQ,kBAAkB,EAAE,MAAM,CAAC,gBAAgB;AACnD,KAAK,CAAC;AACN,CAAC,CAAC;AACF,SAAS,aAAa,CAAC,IAAI,EAAE;AAC7B,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC;AAClB,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;AACd,IAAI,GAAG;AACP,QAAQ,IAAI,IAAI,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,QAAQ,CAAC,IAAI,CAAC,CAAC;AACf,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;AAC/C,IAAI,OAAO,IAAI,CAAC;AAChB;;ACvHA;AACA;AACA;AACA,IAAI,gBAAgB,GAAG,EAAE,CAAC;AAC1B,gBAAgB,CAAC,WAAW,GAAG,sBAAsB,CAAC,WAAW,CAAC;AAClE,gBAAgB,CAAC,+BAA+B,GAAG,sBAAsB,CAAC,+BAA+B,CAAC;AAC1G,gBAAgB,CAAC,mBAAmB,GAAG,sBAAsB,CAAC,mBAAmB,CAAC;AAClF,gBAAgB,CAAC,mBAAmB,GAAG,sBAAsB,CAAC,mBAAmB,CAAC;AAClF,gBAAgB,CAAC,mBAAmB,GAAG,sBAAsB,CAAC,mBAAmB,CAAC;AAClF,gBAAgB,CAAC,wBAAwB,GAAG,sBAAsB,CAAC,wBAAwB,CAAC;AAC5F,gBAAgB,CAAC,sBAAsB,GAAG,sBAAsB,CAAC,sBAAsB;;ACXvF;AACA;AACA;AACA,IAAI,iBAAiB,GAAG,EAAE,CAAC;AAC3B,iBAAiB,CAAC,0BAA0B,GAAG,4BAA4B,CAAC,0BAA0B,CAAC;AACvG,iBAAiB,CAAC,gCAAgC,GAAG,4BAA4B,CAAC,gCAAgC;;ACF3G,MAAMD,MAAI,GAAG,aAAa,CAAC;AAKlC,kBAAe;AACf,UAAIA,MAAI;AACR,IAAI,IAAI,EAAE,eAAe;AACzB,IAAI,KAAK,EAAE,gBAAgB;AAC3B,IAAI,WAAW,EAAEE,iBAAsB;AACvC,IAAI,WAAW,EAAEC,iBAAsB;AACvC,CAAC;;ACdD,IAAI,sBAAsB,GAAG,EAAE,CAAC;AAChC,sBAAsB,CAAC,WAAW,GAAG,CAAC,IAAI,KAAK;AAC/C,IAAI,IAAI,MAAM,GAAG,sBAAsB,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;AAC1D,IAAI,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,SAAS,CAAC;AAC3C,IAAI,MAAM,CAAC,aAAa,GAAG,MAAM,CAAC,YAAY,GAAG,CAAC,CAAC;AACnD,IAAI,MAAM,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,GAAG,MAAM,CAAC,YAAY,CAAC;AAC5E,IAAI,OAAO,MAAM,CAAC;AAClB,CAAC;;ACLD;AACA;AACA;AACA,IAAI,gBAAgB,GAAG,EAAE,CAAC;AAC1B,gBAAgB,CAAC,WAAW,GAAG,sBAAsB,CAAC,WAAW,CAAC;AAClE,gBAAgB,CAAC,+BAA+B,GAAG,sBAAsB,CAAC,+BAA+B,CAAC;AAC1G,gBAAgB,CAAC,mBAAmB,GAAG,sBAAsB,CAAC,mBAAmB,CAAC;AAClF,gBAAgB,CAAC,mBAAmB,GAAG,sBAAsB,CAAC,mBAAmB,CAAC;AAClF,gBAAgB,CAAC,mBAAmB,GAAG,sBAAsB,CAAC,mBAAmB,CAAC;AAClF,gBAAgB,CAAC,wBAAwB,GAAG,sBAAsB,CAAC,wBAAwB,CAAC;AAC5F,gBAAgB,CAAC,sBAAsB,GAAG,sBAAsB,CAAC,sBAAsB;;ACThF,MAAMH,MAAI,GAAG,aAAa,CAAC;AAKlC,kBAAe;AACf,UAAIA,MAAI;AACR,IAAI,IAAI,EAAE,eAAe;AACzB,IAAI,KAAK,EAAE,gBAAgB;AAC3B,IAAI,WAAW,EAAEE,iBAAsB;AACvC,IAAI,WAAW,EAAEC,iBAAsB;AACvC,CAAC;;ACfD;AAKA;AACA,MAAMd,YAAU,GAAG,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAClD,MAAMC,WAAS,GAAG,OAAO,CAACD,YAAU,CAAC,CAAC;AACtC;AACA;AACA;AACA;AACO,MAAM,aAAa,CAAC;AAC3B;AACA,EAAE,OAAO,WAAW,GAAG,IAAI,CAAC;AAC5B,EAAE,OAAO,iBAAiB,GAAG,IAAI,CAAC;AAClC,EAAE,OAAO,eAAe,GAAG,IAAI,CAAC;AAChC,EAAE,OAAO,gBAAgB,GAAG,IAAI,CAAC;AACjC,EAAE,OAAO,cAAc,GAAG,IAAI,CAAC;AAC/B,EAAE,OAAO,oBAAoB,GAAG,IAAI,CAAC;AACrC,EAAE,OAAO,WAAW,GAAG,IAAI,CAAC;AAC5B,EAAE,OAAO,iBAAiB,GAAG,IAAI,CAAC;AAClC,EAAE,OAAO,WAAW,GAAG,IAAI,CAAC;AAC5B,EAAE,OAAO,SAAS,GAAG,IAAI,CAAC;AAC1B,EAAE,OAAO,QAAQ,GAAG,IAAI,CAAC;AACzB;AACA,EAAE,WAAW,CAAC,QAAQ,GAAG,EAAE,EAAE;AAC7B,IAAI,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC7B,IAAI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;AAC7B,IAAI,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;AAClC,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACzB,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;AACxB;AACA;AACA,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE;AACxC,MAAM,aAAa,CAAC,eAAe,GAAG,EAAE,CAAC;AACzC,IAAI,CAAC;AACL;AACA;AACA,IAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAC5B,EAAE,CAAC;AACH;AACA;AACA;AACA;AACA,EAAE,gBAAgB,GAAG;AACrB;AACA,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;AACvD,MAAM,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAACC,WAAS,EAAE,CAAC,yBAA4B,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC;AACzH,MAAM,IAAI,EAAE,CAAC,UAAU,CAAC,cAAc,CAAC,EAAE;AACzC,QAAQ,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC,CAAC;AAC3G,MAAM,CAAC,MAAM;AACb;AACA,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,EAAE,EAAE;AAClC,UAAU,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,sBAAsB,CAAC,EAAE,CAAC,CAAC;AACzF,QAAQ,CAAC,MAAM;AACf,UAAU,MAAM,IAAI,KAAK,CAAC,CAAC,oDAAoD,EAAE,IAAI,CAAC,QAAQ,CAAC,0BAA0B,CAAC,CAAC,CAAC;AAC5H,QAAQ,CAAC;AACT,MAAM,CAAC;AACP,IAAI,CAAC;AACL;AACA,IAAI,IAAI,CAAC,YAAY,GAAG,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACrE,IAAI,IAAI,CAAC,2BAA2B,EAAE,CAAC;AACvC,EAAE,CAAC;AACH;AACA;AACA;AACA;AACA,EAAE,sBAAsB,CAAC,QAAQ,EAAE;AACnC,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,QAAQ,CAAC,EAAE;AAClD,MAAM,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAACA,WAAS,EAAE,CAAC,yBAA4B,EAAE,QAAQ,CAAC,QAAQ,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC;AACpH,MAAM,IAAI,EAAE,CAAC,UAAU,CAAC,cAAc,CAAC,EAAE;AACzC,QAAQ,aAAa,CAAC,eAAe,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC,CAAC;AACtG,MAAM,CAAC,MAAM;AACb,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,oDAAoD,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC3F,MAAM,CAAC;AACP,IAAI,CAAC;AACL,IAAI,OAAO,aAAa,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;AACnD,EAAE,CAAC;AACH;AACA;AACA;AACA;AACA,EAAE,2BAA2B,GAAG;AAChC,IAAI,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;AAClC,IAAI,IAAI,IAAI,CAAC,YAAY,EAAE;AAC3B,MAAM,KAAK,IAAI,GAAG,IAAI,IAAI,CAAC,YAAY,EAAE;AACzC,QAAQ,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;AACvF,MAAM,CAAC;AACP,IAAI,CAAC;AACL,EAAE,CAAC;AACH;AACA;AACA;AACA;AACA,EAAE,iBAAiB,CAAC,OAAO,EAAE;AAC7B,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;AACxB,IAAI,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;AAC5B;AACA,IAAI,IAAI,GAAG,GAAG,EAAE,CAAC;AACjB;AACA;AACA,IAAI,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AACrD;AACA;AACA,IAAI,IAAI,SAAS,KAAK,aAAa,CAAC,WAAW,EAAE;AACjD;AACA,MAAM,OAAO,IAAI,CAAC;AAClB,IAAI,CAAC;AACL;AACA;AACA,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;AAC3B;AACA,IAAqB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE;AACpD;AACA,IAAI,OAAO,GAAG,CAAC;AACf,EAAE,CAAC;AACH;AACA;AACA;AACA;AACA,EAAE,iBAAiB,CAAC,OAAO,EAAE;AAC7B,IAAI,MAAM,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;AACvD;AACA;AACA;AACA,IAAI,OAAO,IAAI,CAAC,QAAQ,IAAI,EAAE,GAAG,UAAU,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;AACnF,EAAE,CAAC;AACH;AACA;AACA;AACA;AACA,EAAE,mBAAmB,CAAC,UAAU,EAAE;AAClC,IAAI,MAAM,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;AACrD,IAAI,OAAO,cAAc,CAAC;AAC1B,EAAE,CAAC;AACH;AACA;AACA,EAAE,iBAAiB,CAAC,OAAO,EAAE;AAC7B;AACA,IAAI,IAAI,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;AAC3C,IAAI,IAAI,MAAM,GAAG,CAAC,CAAC;AACnB;AACA;AACA,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,aAAa,CAAC,WAAW,CAAC,CAAC;AACvE;AACA;AACA,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;AACtD;AACA;AACA,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,aAAa,CAAC,QAAQ,CAAC,CAAC;AACpE;AACA,IAAI,OAAO,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;AACtC,EAAE,CAAC;AACH;AACA;AACA,EAAE,UAAU,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE;AACnC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAC9B,IAAI,OAAO,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAChC,EAAE,CAAC;AACH;AACA;AACA,EAAE,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE;AAClC,IAAI,IAAI,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE;AAChC,MAAM,IAAI,GAAG,CAAC,CAAC;AACf,IAAI,CAAC;AACL;AACA,IAAI,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AACpC,IAAI,OAAO,MAAM,GAAG,CAAC,CAAC;AACtB,EAAE,CAAC;AACH;AACA;AACA,EAAE,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE;AACrC,IAAI,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AACxC,IAAI,OAAO,MAAM,GAAG,CAAC,CAAC;AACtB,EAAE,CAAC;AACH;AACA;AACA,EAAE,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE;AACrC,IAAI,IAAI,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EAAE;AACtE,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,aAAa,CAAC,oBAAoB,CAAC,CAAC;AAClF,MAAM,MAAM,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;AACtE,MAAM,MAAM,CAAC,aAAa,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;AAC9C,MAAM,MAAM,IAAI,CAAC,CAAC;AAClB,MAAM,OAAO,MAAM,CAAC;AACpB,IAAI,CAAC;AACL;AACA,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,aAAa,CAAC,WAAW,CAAC,CAAC;AACvE,IAAI,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AACjD,IAAI,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AACnD,IAAI,MAAM,IAAI,CAAC,CAAC;AAChB,IAAI,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;AACtD,EAAE,CAAC;AACH;AACA;AACA,EAAE,UAAU,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,GAAG,CAAC,EAAE;AACvC,IAAI,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AAC1D,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,aAAa,CAAC,iBAAiB,CAAC,CAAC;AAC/E,MAAM,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;AAC9B,QAAQ,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,aAAa,CAAC,iBAAiB,CAAC,CAAC;AACjF,QAAQ,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC;AACvD,QAAQ,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;AAC5D,MAAM,CAAC;AACP,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,aAAa,CAAC,eAAe,CAAC,CAAC;AAC7E,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AACpC,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,aAAa,CAAC,gBAAgB,CAAC,CAAC;AAC9E,MAAM,KAAK,MAAM,IAAI,IAAI,IAAI,EAAE;AAC/B,QAAQ,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;AACvD,MAAM,CAAC;AACP,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,aAAa,CAAC,cAAc,CAAC,CAAC;AAC5E,IAAI,CAAC,MAAM,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AACzC,MAAM,IAAI,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE;AACvE,QAAQ,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,aAAa,CAAC,oBAAoB,CAAC,CAAC;AACpF,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;AACvE,QAAQ,MAAM,CAAC,aAAa,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;AAChD,QAAQ,MAAM,IAAI,CAAC,CAAC;AACpB,MAAM,CAAC,MAAM;AACb,QAAQ,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;AACxD,MAAM,CAAC;AACP,IAAI,CAAC,MAAM,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;AACpE,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,aAAa,CAAC,WAAW,CAAC,CAAC;AACzE,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;AACtD,IAAI,CAAC,MAAM,IAAI,OAAO,IAAI,KAAK,SAAS,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AACtE,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,aAAa,CAAC,SAAS,CAAC,CAAC;AACvE,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;AACpD,IAAI,CAAC;AACL,IAAI,OAAO,MAAM,CAAC;AAClB,EAAE,CAAC;AACH;AACA;AACA,EAAE,SAAS,CAAC,MAAM,EAAE;AACpB,IAAI,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,CAAC;AACpF,IAAI,IAAI,CAAC,UAAU,IAAI,MAAM,CAAC;AAC9B,IAAI,OAAO,KAAK,CAAC;AACjB,EAAE,CAAC;AACH;AACA;AACA,EAAE,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE;AAC9B,IAAI,IAAI,CAAC,UAAU,IAAI,MAAM,CAAC;AAC9B,EAAE,CAAC;AACH;AACA;AACA,EAAE,SAAS,GAAG;AACd,IAAI,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AACrD;AACA,IAAI,IAAI,SAAS,KAAK,aAAa,CAAC,oBAAoB,EAAE;AAC1D,MAAM,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AAC1D;AACA,MAAM,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE;AACxD,QAAQ,OAAO,WAAW,CAAC;AAC3B,MAAM,CAAC;AACP,MAAM,OAAO,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;AAC1C,IAAI,CAAC,MAAM,IAAI,SAAS,KAAK,aAAa,CAAC,WAAW,EAAE;AACxD,MAAM,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AAC7D,MAAM,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAC3D,IAAI,CAAC,MAAM,IAAI,SAAS,KAAK,aAAa,CAAC,WAAW,EAAE;AACxD,MAAM,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AAC/C,IAAI,CAAC,MAAM,IAAI,SAAS,KAAK,aAAa,CAAC,SAAS,EAAE;AACtD,MAAM,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AAC5C,IAAI,CAAC,MAAM,IAAI,SAAS,KAAK,aAAa,CAAC,iBAAiB,EAAE;AAC9D,MAAM,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC;AAC/B,IAAI,CAAC,MAAM,IAAI,SAAS,KAAK,aAAa,CAAC,gBAAgB,EAAE;AAC7D,MAAM,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC;AAC9B,IAAI,CAAC;AACL;AACA,IAAI,OAAO,IAAI,CAAC;AAChB,EAAE,CAAC;AACH;AACA;AACA,EAAE,SAAS,GAAG;AACd,IAAI,IAAI,GAAG,GAAG,EAAE,CAAC;AACjB,IAAI,IAAI,IAAI,CAAC;AACb;AACA,IAAI,GAAG;AACP,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AAC5C,MAAM,IAAI,IAAI,KAAK,aAAa,CAAC,cAAc,EAAE;AACjD,QAAQ,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;AAChC,QAAQ,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;AACnC,MAAM,CAAC;AACP,IAAI,CAAC,QAAQ,IAAI,KAAK,aAAa,CAAC,cAAc,EAAE;AACpD;AACA,IAAI,OAAO,GAAG,CAAC;AACf,EAAE,CAAC;AACH;AACA;AACA,EAAE,UAAU,GAAG;AACf,IAAI,IAAI,GAAG,GAAG,EAAE,CAAC;AACjB,IAAI,IAAI,IAAI,CAAC;AACb;AACA,IAAI,GAAG;AACP,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AAC5C,MAAM,IAAI,IAAI,KAAK,aAAa,CAAC,iBAAiB,EAAE;AACpD,QAAQ,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;AACrC,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;AACvC,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACzB,MAAM,CAAC,MAAM,IAAI,IAAI,KAAK,aAAa,CAAC,eAAe,EAAE;AACzD;AACA,QAAQ,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;AAChC,QAAQ,IAAI,CAAC,SAAS,EAAE,CAAC;AACzB,MAAM,CAAC;AACP,IAAI,CAAC,QAAQ,IAAI,KAAK,aAAa,CAAC,eAAe,EAAE;AACrD;AACA,IAAI,OAAO,GAAG,CAAC;AACf,EAAE,CAAC;AACH;;AC7SA,IAAI,4BAA4B,GAAG,EAAE,CAAC;AACtC;AACA,MAAMc,eAAa,GAAG,IAAI,aAAa,CAAC,EAAE,CAAC,CAAC;AAC5C;AACA,4BAA4B,CAAC,qBAAqB,GAAG,CAAC,gBAAgB,KAAK;AAC3E,IAAI,OAAO,gBAAgB,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/D,CAAC,CAAC;AACF;AACA,4BAA4B,CAAC,0BAA0B,GAAG,CAAC,KAAK,EAAE,IAAI,KAAK;AAC3E,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC,KAAK,GAAG,KAAK,CAAC,eAAe,CAAC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC,EAAE,CAAC;AAC/G;AACA,CAAC,CAAC;AACF;AACA,4BAA4B,CAAC,gCAAgC,GAAG,CAAC,gBAAgB,KAAK;AACtF;AACA,IAAI,MAAM,kBAAkB,GAAG,4BAA4B,CAAC,qBAAqB,CAAC,gBAAgB,CAAC,CAAC;AACpG,IAAI,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,CAAC;AACnF;AACA,IAAI,MAAM,OAAO,GAAGA,eAAa,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;AAC7D,IAAI,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AACnC,CAAC,CAAC;AACF;AACA,4BAA4B,CAAC,gCAAgC,GAAG,CAAC,cAAc,EAAE,mBAAmB,EAAE,SAAS,KAAK;AACpH;AACA,IAAI,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;AAC7C;AACA,IAAI,IAAI,OAAO,GAAGA,eAAa,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;AAC3D,IAAI,IAAI,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,SAAS,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3D,IAAI,IAAI,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAClC,IAAI,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AAC1C,IAAI,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;AACtD,CAAC;;ACjCD;AACA;AACA;AACA,IAAI,iBAAiB,GAAG,EAAE,CAAC;AAC3B,iBAAiB,CAAC,0BAA0B,GAAG,4BAA4B,CAAC,0BAA0B,CAAC;AACvG,iBAAiB,CAAC,gCAAgC,GAAG,4BAA4B,CAAC,gCAAgC,CAAC;AACnH,iBAAiB,CAAC,gCAAgC,GAAG,4BAA4B,CAAC,gCAAgC;;ACH3G,MAAMJ,MAAI,GAAG,aAAa,CAAC;AAKlC,kBAAe;AACf,UAAIA,MAAI;AACR,IAAI,IAAI,EAAE,eAAe;AACzB,IAAI,KAAK,EAAE,gBAAgB;AAC3B,IAAI,WAAW,EAAEE,iBAAsB;AACvC,IAAI,WAAW,EAAEG,iBAAsB;AACvC,CAAC;;ACRD,MAAMhB,YAAU,GAAG,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAClD,MAAMC,WAAS,GAAG,OAAO,CAACD,YAAU,CAAC,CAAC;AACtC;AACA,IAAI,gCAAgC,GAAG,EAAE,CAAC;AAC1C,IAAI,UAAU,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAACC,WAAS,EAAE,gCAAyC,CAAC,CAAC,CAAC;AAClG,MAAM,WAAW,GAAG,IAAI,OAAO,CAAC,UAAU,CAAC,CAAC;AAC5C;AACA,MAAM,aAAa,GAAG,IAAI,aAAa,CAAC,EAAE,CAAC,CAAC;AAC5C;AACA,gCAAgC,CAAC,qBAAqB,GAAG,CAAC,gBAAgB,KAAK;AAC/E,IAAI,OAAO,gBAAgB,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AAC3E,CAAC,CAAC;AACF;AACA,gCAAgC,CAAC,0BAA0B,GAAG,CAAC,KAAK,EAAE,IAAI,KAAK;AAC/E,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC,KAAK,GAAG,KAAK,CAAC,eAAe,CAAC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC,EAAE,CAAC;AAC/G;AACA,CAAC,CAAC;AACF;AACA,gCAAgC,CAAC,gCAAgC,GAAG,CAAC,gBAAgB,KAAK;AAC1F;AACA,IAAI,MAAM,kBAAkB,GAAG,gCAAgC,CAAC,qBAAqB,CAAC,gBAAgB,CAAC,CAAC;AACxG;AACA,IAAI,MAAM,MAAM,GAAG,gBAAgB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AACpD,IAAI,MAAM,OAAO,GAAG,WAAW,CAAC,UAAU,CAAC,gBAAgB,CAAC,QAAQ,CAAC,kBAAkB,EAAE,kBAAkB,GAAG,MAAM,CAAC,CAAC,CAAC;AACvH;AACA,IAAI,MAAM,OAAO,GAAG,aAAa,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;AAC7D,IAAI,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AACnC,CAAC,CAAC;AACF;AACA,gCAAgC,CAAC,gCAAgC,GAAG,CAAC,cAAc,EAAE,mBAAmB,EAAE,SAAS,KAAK;AACxH;AACA,IAAI,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;AAC7C;AACA,IAAI,IAAI,OAAO,GAAG,aAAa,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;AAC3D;AACA,IAAI,MAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;AACzD,IAAI,IAAI,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,SAAS,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC;AACjE,IAAI,IAAI,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAClC,IAAI,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AAChD,IAAI,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,aAAa,EAAE,OAAO,CAAC,CAAC,CAAC;AAC5D,CAAC;;AC9CD;AACA;AACA;AACA,IAAI,iBAAiB,GAAG,EAAE,CAAC;AAC3B,iBAAiB,CAAC,0BAA0B,GAAGS,gCAA4B,CAAC,0BAA0B,CAAC;AACvG,iBAAiB,CAAC,gCAAgC,GAAGA,gCAA4B,CAAC,gCAAgC,CAAC;AACnH,iBAAiB,CAAC,gCAAgC,GAAGA,gCAA4B,CAAC,gCAAgC;;ACH3G,MAAMC,MAAI,GAAG,aAAa,CAAC;AAKlC,kBAAe;AACf,UAAIA,MAAI;AACR,IAAI,IAAI,EAAE,eAAe;AACzB,IAAI,KAAK,EAAE,gBAAgB;AAC3B,IAAI,WAAW,EAAEE,iBAAsB;AACvC,IAAI,WAAW,EAAEI,iBAAsB;AACvC,CAAC;;ACdD,IAAI,eAAe,GAAG,EAAE,CAAC;AACzB,eAAe,CAAC,wBAAwB,GAAG,kBAAkB,CAAC,wBAAwB,CAAC;AACvF,eAAe,CAAC,YAAY,GAAG,CAAC,YAAY,EAAE,OAAO,KAAK;AAC1D,IAAI,OAAO,OAAO,CAAC;AACnB,CAAC;;ACJD;AACA;AACA;AACA,IAAI,kBAAkB,GAAG,EAAE,CAAC;AAC5B,kBAAkB,CAAC,YAAY,GAAG,eAAe,CAAC,YAAY,CAAC;AAC/D,kBAAkB,CAAC,wBAAwB,GAAG,eAAe,CAAC,wBAAwB;;ACLtF,IAAI,gBAAgB,GAAG,EAAE,CAAC;AAC1B,gBAAgB,CAAC,mBAAmB,GAAG,CAAC,aAAa,EAAE,gBAAgB,KAAK;AAC5E,IAAI,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,EAAE,gBAAgB,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC;AACF,gBAAgB,CAAC,mBAAmB,GAAG,CAAC,OAAO,KAAK;AACpD,IAAI,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK;AACtC,QAAQ,OAAO,MAAM,CAAC,kBAAkB,CAAC;AACzC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK;AACvB,QAAQ,OAAO,MAAM,CAAC,IAAI,CAAC;AAC3B,IAAI,CAAC,CAAC,CAAC;AACP,CAAC;;ACTD;AACA;AACA;AACA,IAAI,mBAAmB,GAAG,EAAE,CAAC;AAC7B,mBAAmB,CAAC,WAAW,GAAG,sBAAsB,CAAC,WAAW,CAAC;AACrE,mBAAmB,CAAC,+BAA+B,GAAG,sBAAsB,CAAC,+BAA+B,CAAC;AAC7G,mBAAmB,CAAC,mBAAmB,GAAG,gBAAgB,CAAC,mBAAmB,CAAC;AAC/E,mBAAmB,CAAC,mBAAmB,GAAG,gBAAgB,CAAC,mBAAmB,CAAC;AAC/E,mBAAmB,CAAC,mBAAmB,GAAG,gBAAgB,CAAC,mBAAmB,CAAC;AAC/E,mBAAmB,CAAC,wBAAwB,GAAG,MAAM,EAAE,CAAC;;ACXxD,IAAI,sBAAsB,GAAG,EAAE,CAAC;AAChC,sBAAsB,CAAC,0BAA0B,GAAG,CAAC,KAAK,EAAE,IAAI,KAAK;AACrE,IAAI,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,gBAAgB,CAAC,KAAK,GAAG,KAAK,CAAC,gBAAgB,CAAC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;AACtH,IAAI,MAAM,eAAe,GAAG,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACpD,IAAI,IAAI,eAAe,IAAI,CAAC,EAAE;AAC9B;AACA;AACA,QAAQ,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,eAAe,GAAG,CAAC,CAAC,CAAC;AAC5D,IAAI,CAAC;AACL,IAAI,OAAO,SAAS,CAAC;AACrB,CAAC,CAAC;AACF,sBAAsB,CAAC,gCAAgC,GAAG,CAAC,cAAc,EAAE,SAAS,KAAK;AACzF,IAAI,IAAI,cAAc,CAAC,MAAM,IAAI,SAAS,EAAE;AAC5C;AACA,QAAQ,cAAc,GAAG,cAAc,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,GAAG,CAAC,CAAC,CAAC;AACpE,IAAI,CAAC;AACL,IAAI,OAAO,MAAM,CAAC,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,CAAC;AAClD,CAAC;;AChBD;AACA;AACA;AACA,IAAI,yBAAyB,GAAG,EAAE,CAAC;AACnC,yBAAyB,CAAC,0BAA0B,GAAG,sBAAsB,CAAC,0BAA0B,CAAC;AACzG,yBAAyB,CAAC,gCAAgC,GAAG,sBAAsB,CAAC,gCAAgC;;ACF7G,MAAMN,MAAI,GAAG,gBAAgB,CAAC;AAKrC,qBAAe;AACf,UAAIA,MAAI;AACR,IAAI,IAAI,EAAE,kBAAkB;AAC5B,IAAI,KAAK,EAAE,mBAAmB;AAC9B,IAAI,WAAW,EAAE,yBAAyB;AAC1C,IAAI,WAAW,EAAE,iBAAiB;AAClC,CAAC;;ACdD;AACA;AACA;AACA,IAAI,kBAAkB,GAAG,EAAE,CAAC;AAC5B,kBAAkB,CAAC,YAAY,GAAG,eAAe,CAAC,YAAY,CAAC;AAC/D,kBAAkB,CAAC,wBAAwB,GAAG,eAAe,CAAC,wBAAwB;;ACHtF;AACA;AACA;AACA,IAAI,mBAAmB,GAAG,EAAE,CAAC;AAC7B,mBAAmB,CAAC,WAAW,GAAG,sBAAsB,CAAC,WAAW,CAAC;AACrE,mBAAmB,CAAC,+BAA+B,GAAG,sBAAsB,CAAC,+BAA+B,CAAC;AAC7G,mBAAmB,CAAC,mBAAmB,GAAG,gBAAgB,CAAC,mBAAmB,CAAC;AAC/E,mBAAmB,CAAC,mBAAmB,GAAG,gBAAgB,CAAC,mBAAmB,CAAC;AAC/E,mBAAmB,CAAC,mBAAmB,GAAG,gBAAgB,CAAC,mBAAmB,CAAC;AAC/E,mBAAmB,CAAC,wBAAwB,GAAG,MAAM,EAAE,CAAC;;ACXxD;AACA;AACA;AACA,IAAI,yBAAyB,GAAG,EAAE,CAAC;AACnC,yBAAyB,CAAC,0BAA0B,GAAG,sBAAsB,CAAC,0BAA0B,CAAC;AACzG,yBAAyB,CAAC,gCAAgC,GAAG,sBAAsB,CAAC,gCAAgC;;ACF7G,MAAM,IAAI,GAAG,gBAAgB,CAAC;AAKrC,qBAAe;AACf,IAAI,IAAI;AACR,IAAI,IAAI,EAAE,kBAAkB;AAC5B,IAAI,KAAK,EAAE,mBAAmB;AAC9B,IAAI,WAAW,EAAE,yBAAyB;AAC1C,IAAI,WAAW,EAAE,iBAAiB;AAClC,CAAC;;ACPD,IAAI,cAAc,GAAG,EAAE,CAAC;AACxB;AACA;AACA;AACA,cAAc,CAAC,IAAI,GAAG,CAAC,IAAI,KAAK;AAChC,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,CAAC,MAAM,CAAC,SAAS,EAAE;AACpD,QAAQ,QAAQ,IAAI,CAAC,IAAI;AACzB,YAAY,KAAK,EAAE;AACnB,gBAAgB,OAAO,WAAW,CAAC;AACnC,YAAY,KAAK,EAAE,CAAC;AACpB,YAAY,KAAK,EAAE,CAAC;AACpB,YAAY,KAAK,EAAE,CAAC;AACpB,YAAY,KAAK,EAAE,CAAC;AACpB,YAAY;AACZ,gBAAgB,OAAO,WAAW,CAAC;AACnC,YAAY,KAAK,EAAE;AACnB,gBAAgB,OAAO,WAAW,CAAC;AACnC,YAAY,KAAK,EAAE;AACnB,gBAAgB,OAAO,WAAW,CAAC;AACnC,YAAY,KAAK,EAAE;AACnB,gBAAgB,OAAO,WAAW,CAAC;AACnC,SAAS;AACT,IAAI,CAAC;AACL,SAAS;AACT,QAAQ,QAAQ,IAAI,CAAC,IAAI;AACzB,YAAY,KAAK,EAAE;AACnB,gBAAgB,OAAO,cAAc,CAAC;AACtC,YAAY,KAAK,EAAE,CAAC;AACpB,YAAY,KAAK,EAAE,CAAC;AACpB,YAAY;AACZ,gBAAgB,OAAO,cAAc,CAAC;AACtC,SAAS;AACT,IAAI,CAAC;AACL,CAAC;;ACrCD,MAAM,UAAU,GAAG,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAClD,MAAM,SAAS,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACtC;AACA,MAAM,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,iBAAoB,CAAC,CAAC;AACjE,IAAC,YAAY,GAAG,GAAG;AACtB;AACA,YAAY,CAAC,IAAI,GAAG,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,KAAK;AAC1D,IAAI,IAAI,iBAAiB,GAAG,CAAC,gBAAgB,CAAC,CAAC;AAC/C,IAAI,IAAI,QAAQ,IAAI,QAAQ,CAAC,eAAe,EAAE;AAC9C,QAAQ,iBAAiB,CAAC,OAAO,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;AAC5D,IAAI,CAAC;AACL,IAAI,MAAM,WAAW,GAAG,qBAAqB,CAAC,iBAAiB,CAAC,CAAC;AACjE,IAAI,OAAO,oBAAoB,CAAC,WAAW,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AACrE,CAAC,CAAC;AACF;AACA,YAAY,CAAC,eAAe,GAAG,CAAC,eAAe,KAAK;AACpD,IAAI,IAAI,UAAU,GAAG,CAAC,gBAAgB,CAAC,CAAC;AACxC,IAAI,IAAI,eAAe,EAAE;AACzB,QAAQ,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;AACzC,IAAI,CAAC;AACL,IAAI,OAAO,qBAAqB,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,EAAE,OAAO,MAAM,CAAC,KAAK,KAAK,IAAI,IAAI,MAAM,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5H,CAAC,CAAC;AAEF,SAAS,qBAAqB,CAAC,QAAQ,EAAE;AACzC,IAAI,IAAI,UAAU,GAAG,EAAE,CAAC;AACxB,IAAI,QAAQ,CAAC,OAAO,CAAC,UAAU,OAAO,EAAE;AACxC,QAAQ,MAAM,IAAI,GAAG,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;AAC3G,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK;AAC5C,YAAY,OAAO,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;AAC/D,QAAQ,CAAC,CAAC,CAAC;AACX,QAAQ,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACnC,QAAQ,UAAU,CAAC,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,CAAC;AACrD,IAAI,CAAC,CAAC,CAAC;AACP,IAAI,OAAO,OAAO,CAAC,UAAU,CAAC,CAAC;AAC/B,IAAI,SAAS,OAAO,CAAC,GAAG,EAAE;AAC1B,QAAQ,OAAO,GAAG,CAAC,MAAM,CAAC,UAAU,IAAI,EAAE,SAAS,EAAE;AACrD,YAAY,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,OAAO,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC,CAAC;AAC1F,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC;AACf,IAAI,CAAC;AACL,CAAC;AAED,SAAS,kBAAkB,CAAC,GAAG,EAAE;AACjC,IAAI,MAAM,KAAK,GAAG,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;AACtC,IAAI,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK;AAC/B,QAAQ,IAAI,KAAK,GAAG,8CAA8C,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC9E,QAAQ,OAAO;AACf,YAAY,UAAU,EAAE,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;AACrE,YAAY,OAAO,EAAE,KAAK,KAAK,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;AAC5F,YAAY,OAAO,EAAE,KAAK,KAAK,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;AAC5F,YAAY,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC;AACxC,SAAS,CAAC;AACV,IAAI,CAAC,CAAC,CAAC;AACP,CAAC;AACD,SAAS,oBAAoB,CAAC,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE;AAClE;AACA,IAAI,IAAI,UAAU,EAAE;AACpB,QAAQ,MAAM,eAAe,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK;AAC9D,YAAY,IAAI,QAAQ,EAAE;AAC1B,gBAAgB,OAAO,MAAM,CAAC,QAAQ,IAAI,QAAQ,IAAI,MAAM,CAAC,QAAQ,KAAK,IAAI,IAAI,MAAM,CAAC,KAAK,KAAK,IAAI,IAAI,MAAM,CAAC,KAAK,KAAK,IAAI,CAAC;AACjI,YAAY,CAAC;AACb,iBAAiB;AACjB,gBAAgB,OAAO,MAAM,CAAC,KAAK,KAAK,IAAI,IAAI,MAAM,CAAC,KAAK,KAAK,IAAI,CAAC;AACtE,YAAY,CAAC;AACb,QAAQ,CAAC,CAAC,CAAC;AACX;AACA,QAAQ,MAAM,UAAU,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,EAAE,OAAO,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACjG,QAAQ,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;AACnC,YAAY,OAAO,eAAe,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;AACtD,QAAQ,CAAC;AACT,aAAa;AACb,YAAY,MAAM,MAAM,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK;AAC3D,gBAAgB,OAAO,MAAM,CAAC,KAAK,CAAC;AACpC,YAAY,CAAC,CAAC,CAAC;AACf,YAAY,MAAM,OAAO,GAAG,eAAe,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC3D,YAAY,MAAM,YAAY,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,EAAE,OAAO,MAAM,CAAC,KAAK,KAAK,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1G,YAAY,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;AACzC,gBAAgB,OAAO,eAAe,CAAC,YAAY,CAAC,CAAC;AACrD,YAAY,CAAC;AACb,QAAQ,CAAC;AACT,QAAQ,OAAO,IAAI,CAAC;AACpB,IAAI,CAAC;AACL,IAAI,SAAS,eAAe,CAAC,GAAG,EAAE,IAAI,EAAE;AACxC,QAAQ,MAAM,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK;AAC3C,YAAY,OAAO,MAAM,CAAC,KAAK,CAAC;AAChC,QAAQ,CAAC,CAAC,CAAC;AACX,QAAQ,MAAM,OAAO,GAAG,eAAe,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AACtD,QAAQ,OAAO,GAAG,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,EAAE,OAAO,MAAM,CAAC,KAAK,KAAK,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1E,IAAI,CAAC;AAEL,IAAI,SAAS,eAAe,CAAC,GAAG,EAAE,IAAI,EAAE;AACxC,QAAQ,OAAO,GAAG,CAAC,MAAM,CAAC,UAAU,IAAI,EAAE,IAAI,EAAE;AAChD,YAAY,QAAQ,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,EAAE;AACjF,QAAQ,CAAC,CAAC,CAAC;AACX,IAAI,CAAC;AAEL;;ACxFA,MAAM,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;AACzC,MAAM,sBAAsB,GAAG,IAAI,CAAC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,aAAa,SAAS,YAAY,CAAC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,MAAM,CAAC,QAAQ,EAAE,QAAQ,EAAE;AACtC,QAAQ,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAK;AAChD,YAAY,MAAM,IAAI,GAAG,IAAI,aAAa,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;AAC/D,YAAY,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;AACzC,gBAAgB,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,MAAM,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;AACtD,gBAAgB,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,GAAG,KAAK,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;AACvD,YAAY,CAAC;AACb,iBAAiB;AACjB,gBAAgB,OAAO,CAAC,IAAI,CAAC,CAAC;AAC9B,YAAY,CAAC;AACb,QAAQ,CAAC,CAAC,CAAC;AACX,IAAI,CAAC;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,QAAQ,EAAE,QAAQ,EAAE;AACpC,QAAQ,KAAK,EAAE,CAAC;AAChB;AACA,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,qBAAqB,CAAC,QAAQ,CAAC,CAAC;AAC7D,QAAQ,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC9B,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;AACrC;AACA,YAAY,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AACzC,QAAQ,CAAC;AACT,aAAa;AACb,YAAY,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AACtC,QAAQ,CAAC;AACT;AACA,QAAQ,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;AACtD;AACA,QAAQ,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AACpE;AACA,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;AACzC;AACA,QAAQ,IAAI,CAAC,sBAAsB,GAAG,iBAAiB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AACtF,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE;AACnC;AACA,YAAY,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,YAAY,CAAC;AACxD;AACA,YAAY,IAAI,CAAC,oBAAoB,GAAG,UAAU,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AAClF,YAAY,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,SAAS,CAAC,MAAM,CAAC,gBAAgB,EAAE;AACzE,gBAAgB,MAAM,OAAO,GAAG,WAAW,CAAC,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AACvF,gBAAgB,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;AAC/C,gBAAgB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;AACjD,gBAAgB,IAAI,CAAC,sBAAsB,GAAG,iBAAiB,CAAC,IAAI,CAAC,oBAAoB,EAAE,OAAO,CAAC,CAAC;AACpG,YAAY,CAAC;AACb,QAAQ,CAAC;AACT,aAAa;AACb,YAAY,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,YAAY,CAAC;AAC1D,QAAQ,CAAC;AACT,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;AACtC,YAAY,IAAI,CAAC,KAAK,EAAE,CAAC;AACzB,QAAQ,CAAC;AACT,IAAI,CAAC;AACL;AACA;AACA;AACA,IAAI,KAAK,GAAG;AACZ,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC;AAC1B,QAAQ,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACvD,QAAQ,IAAI,aAAa,GAAG,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAK;AAC7D,YAAY,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc;AAC3D,kBAAkB,IAAI,CAAC,QAAQ,CAAC,cAAc;AAC9C,kBAAkB,IAAI,CAAC,qBAAqB,CAAC;AAC7C,YAAY,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,IAAI,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI;AAChG,kBAAkB,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI;AACnD,kBAAkBO,YAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,CAAC,KAAK,EAAE,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC;AACnH,YAAY,IAAI;AAChB,gBAAgB,IAAI,CAAC,UAAU,GAAG,IAAI,eAAe,CAAC,UAAU,EAAE;AAClE,oBAAoB,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY;AAC5D,oBAAoB,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,aAAa;AACxD,oBAAoB,sBAAsB,EAAE,IAAI,CAAC,QAAQ,CAAC,sBAAsB;AAChF,iBAAiB,CAAC,CAAC;AACnB,gBAAgB,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,cAAc,EAAE,MAAM;AACzD,oBAAoB,OAAO,EAAE,CAAC;AAC9B,gBAAgB,CAAC,CAAC,CAAC;AACnB,gBAAgB,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;AAC3C,YAAY,CAAC;AACb,YAAY,OAAO,GAAG,EAAE;AACxB,gBAAgB,MAAM,CAAC,GAAG,CAAC,CAAC;AAC5B,YAAY,CAAC;AACb,QAAQ,CAAC,CAAC,CAAC;AACX,QAAQ,IAAI,YAAY,GAAG,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAK;AAC5D,YAAY,MAAM,UAAU,GAAG,IAAI,CAAC;AACpC,YAAY,MAAM,WAAW,GAAG,IAAI,CAAC;AACrC,YAAY,MAAM,UAAU,GAAG,IAAI,CAAC;AACpC,YAAY,MAAM,WAAW,GAAG,IAAI,CAAC;AACrC,YAAY,MAAM,aAAa,GAAG,IAAI,CAAC;AACvC,YAAY,MAAM,cAAc,GAAG,IAAI,CAAC;AACxC,YAAY,MAAM,aAAa,GAAG,IAAI,CAAC;AACvC,YAAY,MAAM,cAAc,GAAG,IAAI,CAAC;AACxC,YAAY,MAAM,cAAc,GAAG,IAAI,CAAC;AACxC,YAAY,MAAM,eAAe,GAAG,IAAI,CAAC;AACzC,YAAY,MAAM,cAAc,GAAG,IAAI,CAAC;AACxC,YAAY,MAAM,eAAe,GAAG,IAAI,CAAC;AACzC,YAAY,MAAM,aAAa,GAAG,EAAE,CAAC;AACrC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,oBAAoB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;AAC/E,gBAAgB,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,KAAK,UAAU;AAChE,oBAAoB,IAAI,CAAC,oBAAoB,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,WAAW;AACpE,oBAAoB,IAAI,CAAC,oBAAoB,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,UAAU;AACnE,oBAAoB,IAAI,CAAC,oBAAoB,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,WAAW;AACpE,qBAAqB,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,KAAK,aAAa;AACnE,wBAAwB,IAAI,CAAC,oBAAoB,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,cAAc;AAC3E,wBAAwB,IAAI,CAAC,oBAAoB,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,aAAa;AAC1E,wBAAwB,IAAI,CAAC,oBAAoB,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,cAAc,CAAC;AAC5E,qBAAqB,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,KAAK,cAAc;AACpE,wBAAwB,IAAI,CAAC,oBAAoB,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,eAAe;AAC5E,wBAAwB,IAAI,CAAC,oBAAoB,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,cAAc;AAC3E,wBAAwB,IAAI,CAAC,oBAAoB,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,eAAe,CAAC,EAAE;AAC/E,oBAAoB,MAAM,UAAU,GAAG,CAAC,GAAG,6BAA6B,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACzF,oBAAoB,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACnD,gBAAgB,CAAC;AACjB,YAAY,CAAC;AACb;AACA,YAAY,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;AAC7B,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC3D,gBAAgB,MAAM,YAAY,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;AACtD,gBAAgB,MAAM,SAAS,GAAG,aAAa,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC;AAC9D,sBAAsB,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC;AAC1C,sBAAsB,IAAI,CAAC,oBAAoB,CAAC,MAAM,GAAG,CAAC,CAAC;AAC3D,gBAAgB,MAAM,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;AAC3F,gBAAgB,MAAM,iBAAiB,GAAG,IAAI,kBAAkB,CAAC,SAAS,EAAE,YAAY,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AACxI,gBAAgB,iBAAiB,CAAC,KAAK,GAAG,CAAC,CAAC;AAC5C,gBAAgB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;AACpD,gBAAgB,iBAAiB,CAAC,EAAE,CAAC,QAAQ,EAAE,YAAY;AAC3D,oBAAoB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AAC1C,oBAAoB,IAAI,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE;AACpD,wBAAwB,IAAI,CAAC,QAAQ,EAAE,CAAC;AACxC,oBAAoB,CAAC;AACrB,oBAAoB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,iBAAiB,CAAC,CAAC;AAC3D,gBAAgB,CAAC,CAAC,CAAC;AACnB,YAAY,CAAC;AACb,YAAY,OAAO,EAAE,CAAC;AACtB,QAAQ,CAAC,CAAC,CAAC;AACX,QAAQ,IAAI,iBAAiB,GAAG,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAK;AACjE;AACA,YAAY,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;AACjC,YAAY,MAAM,gBAAgB,GAAG,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AAC/E,YAAY,MAAM,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;AACjF,YAAY,IAAI,aAAa,GAAG,gBAAgB,CAAC;AACjD,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,iBAAiB,EAAE,CAAC,EAAE,EAAE;AACxD,gBAAgB,MAAM,OAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;AACtF,gBAAgB,MAAM,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;AAC5F,gBAAgB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;AACrC,oBAAoB,OAAO,EAAE,OAAO;AACpC,oBAAoB,SAAS,EAAE,SAAS;AACxC,iBAAiB,CAAC,CAAC;AACnB,gBAAgB,aAAa,IAAI,CAAC,CAAC;AACnC,YAAY,CAAC;AACb,YAAY,OAAO,EAAE,CAAC;AACtB,QAAQ,CAAC,CAAC,CAAC;AACX,QAAQ,OAAO,CAAC,GAAG,CAAC,CAAC,aAAa,EAAE,YAAY,EAAE,iBAAiB,CAAC,CAAC;AACrE,aAAa,IAAI,CAAC,MAAM;AACxB,YAAY,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,KAAK,KAAK;AAClD,gBAAgB,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACrE,gBAAgB,IAAI,MAAM,EAAE;AAC5B,oBAAoB,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;AAC1C,gBAAgB,CAAC;AACjB,YAAY,CAAC,CAAC,CAAC;AACf,YAAY,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACjC,YAAY,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC/B,QAAQ,CAAC,CAAC;AACV,aAAa,KAAK,CAAC,CAAC,GAAG,KAAK;AAC5B,YAAY,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC7B,YAAY,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;AACpC,QAAQ,CAAC,CAAC,CAAC;AACX,IAAI,CAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,cAAc,EAAE,OAAO,EAAE;AAClC,QAAQ,OAAO,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;AACtD,IAAI,CAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,QAAQ,CAAC,cAAc,EAAE,OAAO,EAAE;AACtC,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC;AAC1B,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC5B,QAAQ,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAK;AAChD,YAAY,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;AAC5H,YAAY,IAAI,WAAW,GAAG,cAAc,GAAG,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC;AAC9E,YAAY,SAAS,CAAC,IAAI,CAAC,oBAAoB,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK;AACzE,gBAAgB,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;AAClG,gBAAgB,IAAI,OAAO,IAAI,OAAO,CAAC,IAAI,EAAE;AAC7C,oBAAoB,SAAS,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;AACvD,oBAAoB,eAAe,EAAE,CAAC;AACtC,gBAAgB,CAAC;AACjB,qBAAqB;AACrB,oBAAoB,KAAK,CAAC,WAAW,EAAE,UAAU,EAAE,CAAC,GAAG,KAAK;AAC5D,wBAAwB,eAAe,CAAC,GAAG,CAAC,CAAC;AAC7C,oBAAoB,CAAC,CAAC,CAAC;AACvB,gBAAgB,CAAC;AACjB,gBAAgB,SAAS,eAAe,CAAC,GAAG,EAAE;AAC9C,oBAAoB,IAAI,GAAG,EAAE;AAC7B,wBAAwB,MAAM,CAAC,GAAG,CAAC,CAAC;AACpC,wBAAwB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AAChD,oBAAoB,CAAC;AACrB,oBAAoB,OAAO,CAAC,OAAO,CAAC,CAAC;AACrC,oBAAoB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACvC,gBAAgB,CAAC;AACjB,YAAY,CAAC,CAAC,CAAC;AACf,QAAQ,CAAC,CAAC,CAAC;AACX,IAAI,CAAC;AACL;AACA;AACA;AACA,IAAI,IAAI,WAAW,GAAG;AACtB,QAAQ,OAAO,IAAI,CAAC,YAAY,CAAC;AACjC,IAAI,CAAC;AACL,IAAI,IAAI,mBAAmB,GAAG;AAC9B,QAAQ,OAAO,IAAI,CAAC,oBAAoB,CAAC;AACzC,IAAI,CAAC;AACL;AACA;AACA;AACA,IAAI,IAAI,QAAQ,GAAG;AACnB,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC;AAC9B,IAAI,CAAC;AACL;AACA;AACA;AACA,IAAI,IAAI,MAAM,GAAG;AACjB,QAAQ,OAAO,IAAI,CAAC,UAAU,CAAC;AAC/B,IAAI,CAAC;AACL;AACA;AACA;AACA,IAAI,IAAI,qBAAqB,GAAG;AAChC,QAAQ,OAAO,IAAI,CAAC,sBAAsB,CAAC;AAC3C,IAAI,CAAC;AACL;AACA;AACA;AACA,IAAI,IAAI,QAAQ,GAAG;AACnB,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC;AAC9B,IAAI,CAAC;AACL;AACA;AACA;AACA,IAAI,IAAI,QAAQ,GAAG;AACnB,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC;AAC9B,IAAI,CAAC;AACL;AACA;AACA;AACA,IAAI,IAAI,IAAI,GAAG;AACf,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC;AAC1B,IAAI,CAAC;AACL,IAAI,IAAI,QAAQ,CAAC,IAAI,EAAE;AACvB,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AAC9B,IAAI,CAAC;AACL,IAAI,IAAI,QAAQ,CAAC,QAAQ,EAAE;AAC3B,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,qBAAqB,CAAC,QAAQ,CAAC,CAAC;AAC7D,IAAI,CAAC;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,cAAc,CAAC,IAAI,EAAE;AACzB,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK;AAC3C,YAAY,OAAO,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC;AACvC,QAAQ,CAAC,CAAC,CAAC;AACX,IAAI,CAAC;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,kBAAkB,CAAC,IAAI,EAAE;AAC7B,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,KAAK,KAAK;AAC7C,YAAY,OAAO,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC;AACvC,QAAQ,CAAC,CAAC,CAAC;AACX,IAAI,CAAC;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,CAAC,EAAE,EAAE;AACrB,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK;AAC3C,YAAY,OAAO,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,KAAK,EAAE,CAAC;AAC/D,QAAQ,CAAC,CAAC,CAAC;AACX,IAAI,CAAC;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,eAAe,CAAC,KAAK,EAAE;AAC3B,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAClC,IAAI,CAAC;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,kBAAkB,CAAC,EAAE,EAAE;AAC3B,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK;AAC3C,YAAY,OAAO,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,QAAQ,KAAK,EAAE,CAAC;AAChE,QAAQ,CAAC,CAAC,CAAC;AACX,IAAI,CAAC;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,mBAAmB,CAAC,cAAc,EAAE;AACxC,QAAQ,MAAM,SAAS,GAAG,WAAW,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;AACvE,QAAQ,OAAO,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;AAClF,IAAI,CAAC;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,uBAAuB,CAAC,OAAO,EAAE;AACrC,QAAQ,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,UAAU,KAAK;AAChE,YAAY,OAAO,UAAU,CAAC,OAAO,KAAK,OAAO,CAAC;AAClD,QAAQ,CAAC,CAAC,CAAC;AACX,QAAQ,IAAI,UAAU,EAAE;AACxB,YAAY,MAAM,qBAAqB,GAAG,UAAU,CAAC,SAAS;AAC9D,iBAAiB,QAAQ,CAAC,CAAC,CAAC;AAC5B,iBAAiB,QAAQ,CAAC,EAAE,CAAC,CAAC;AAC9B,YAAY,OAAO,WAAW,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,CAAC;AACvE,QAAQ,CAAC;AACT,aAAa;AACb,YAAY,OAAO,IAAI,CAAC;AACxB,QAAQ,CAAC;AACT,IAAI,CAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,qBAAqB,CAAC,OAAO,EAAE,WAAW,EAAE;AAChD,QAAQ,MAAM,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;AAC3D,QAAQ,IAAI,eAAe,EAAE;AAC7B,YAAY,MAAM,UAAU,GAAG,WAAW,CAAC,sBAAsB,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;AACxF,YAAY,MAAM,GAAG,GAAG,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AACzE,YAAY,OAAO,IAAI,CAAC,MAAM;AAC9B,iBAAiB,MAAM,CAAC,CAAC,KAAK,KAAK;AACnC,gBAAgB,IAAI,KAAK,CAAC,MAAM,EAAE;AAClC,oBAAoB,QAAQ,KAAK,CAAC,MAAM;AACxC,wBAAwB,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,SAAS,KAAK;AACpE;AACA,4BAA4B,OAAO,SAAS,CAAC,IAAI,KAAK,eAAe,CAAC,IAAI;AAC1E,mCAAmC,SAAS,CAAC,IAAI,KAAK,QAAQ,CAAC;AAC/D,wBAAwB,CAAC,CAAC,EAAE;AAC5B,gBAAgB,CAAC;AACjB,qBAAqB,IAAI,KAAK,CAAC,OAAO,IAAI,eAAe,CAAC,MAAM,EAAE;AAClE;AACA;AACA,oBAAoB,QAAQ,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AACtE,wBAAwB,eAAe,CAAC,IAAI;AAC5C,wBAAwB,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AAClE,4BAA4B,eAAe,CAAC,MAAM,CAAC,IAAI,EAAE;AACzD,gBAAgB,CAAC;AACjB,qBAAqB,IAAI,KAAK,CAAC,OAAO,EAAE;AACxC,oBAAoB,QAAQ,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AACtE,wBAAwB,eAAe,CAAC,IAAI,EAAE;AAC9C,gBAAgB,CAAC;AACjB,YAAY,CAAC,CAAC;AACd,iBAAiB,MAAM,CAAC,CAAC,KAAK,KAAK;AACnC,gBAAgB,OAAO,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,EAAE,KAAK,CAAC,KAAK,EAAE,CAAC;AAChE,YAAY,CAAC,CAAC;AACd,iBAAiB,GAAG,CAAC,CAAC,KAAK,KAAK;AAChC,gBAAgB,OAAO;AACvB,oBAAoB,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO;AACjD,oBAAoB,IAAI,EAAE,KAAK,CAAC,IAAI;AACpC,oBAAoB,KAAK,EAAE,KAAK;AAChC,iBAAiB,CAAC;AAClB,YAAY,CAAC,CAAC,CAAC;AACf,QAAQ,CAAC;AACT,IAAI,CAAC;AACL,CAAC;AACD,SAAS,6BAA6B,CAAC,QAAQ,EAAE;AACjD,IAAI,QAAQ,QAAQ;AACpB,QAAQ,KAAK,EAAE;AACf,YAAY,OAAO,IAAI,CAAC;AACxB,QAAQ,KAAK,EAAE,CAAC;AAChB,QAAQ,KAAK,EAAE,CAAC;AAChB,QAAQ;AACR,YAAY,OAAO,IAAI,CAAC;AACxB,KAAK;AACL,CAAC;AACD,SAAS,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE;AAChC,IAAI,IAAI,MAAM,GAAG,CAAC,CAAC;AACnB,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,CAAC,MAAM,CAAC,SAAS,EAAE;AACpD,QAAQ,MAAM,GAAG,sBAAsB,CAAC;AACxC,IAAI,CAAC;AACL,IAAI,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;AAChD,CAAC;AACD,SAAS,SAAS,CAAC,IAAI,EAAE,OAAO,EAAE;AAClC,IAAI,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAK;AAC5C,QAAQ,IAAI,OAAO,IAAI,OAAO,CAAC,IAAI,EAAE;AACrC,YAAY,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE;AACnD,gBAAgB,UAAU,EAAE,EAAE;AAC9B,aAAa,CAAC,CAAC;AACf,YAAY,OAAO,CAAC,OAAO,CAAC,CAAC;AAC7B,QAAQ,CAAC;AACT,aAAa;AACb,YAAY,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;AAC/B,gBAAgB,UAAU,EAAE,EAAE;AAC9B,aAAa,EAAE,UAAU,GAAG,EAAE,OAAO,EAAE;AACvC,gBAAgB,IAAI,GAAG;AACvB,oBAAoB,MAAM,CAAC,GAAG,CAAC,CAAC;AAChC,gBAAgB,OAAO,CAAC,OAAO,CAAC,CAAC;AACjC,YAAY,CAAC,CAAC,CAAC;AACf,QAAQ,CAAC;AACT,IAAI,CAAC,CAAC,CAAC;AACP,CAAC;AACD,SAAS,KAAK,CAAC,WAAW,EAAE,cAAc,EAAE,QAAQ,EAAE;AACtD,IAAI,EAAE,CAAC,SAAS,CAAC,WAAW,EAAE,cAAc,EAAE,QAAQ,CAAC,CAAC;AACxD,CAAC;AACD,SAAS,SAAS,CAAC,WAAW,EAAE,cAAc,EAAE;AAChD,IAAI,EAAE,CAAC,aAAa,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC;AAClD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW,CAAC,IAAI,EAAE,QAAQ,EAAE;AACrC,IAAI,MAAM,gBAAgB,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;AAChD,IAAI,MAAM,MAAM,GAAG,SAAS,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC;AACrD,IAAI,MAAM,IAAI,GAAG,QAAQ,EAAE,gBAAgB,IAAI,WAAW,CAAC,IAAI,EAAE,gBAAgB,EAAE,MAAM,CAAC,CAAC;AAC3F,IAAI,OAAO;AACX,QAAQ,MAAM,EAAE,MAAM;AACtB,QAAQ,UAAU,EAAE,gBAAgB;AACpC,QAAQ,IAAI,EAAE,IAAI;AAClB,KAAK,CAAC;AACN,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,SAAS,YAAY,CAAC,IAAI,EAAE;AAC5B,IAAI,MAAM,mBAAmB,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;AACtE,IAAI,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,mBAAmB,CAAC,KAAK,CAAC,EAAE;AACrE,QAAQ,OAAO,KAAK,CAAC;AACrB,IAAI,CAAC;AACL,IAAI,OAAO,IAAI,CAAC;AAChB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,SAAS,CAAC,IAAI,EAAE,YAAY,EAAE;AACvC,IAAI,IAAI,YAAY,EAAE;AACtB,QAAQ,MAAM,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;AACtD,QAAQ,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,WAAW,CAAC,KAAK,CAAC,EAAE;AACjE,YAAY,OAAO,kBAAkB,CAAC;AACtC,QAAQ,CAAC;AACT,aAAa;AACb,YAAY,OAAO,WAAW,CAAC;AAC/B,QAAQ,CAAC;AACT,IAAI,CAAC;AACL,SAAS;AACT;AACA;AACA,QAAQ,IAAI,IAAI,CAAC,MAAM,GAAG,QAAQ,EAAE;AACpC,YAAY,OAAO,WAAW,CAAC;AAC/B,QAAQ,CAAC;AACT,aAAa;AACb,YAAY,OAAO,kBAAkB,CAAC;AACtC,QAAQ,CAAC;AACT,IAAI,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW,CAAC,IAAI,EAAE,YAAY,EAAE,MAAM,EAAE;AACjD,IAAI,MAAM,SAAS,GAAG;AACtB,QAAQ;AACR,YAAY,IAAI,EAAE,EAAE;AACpB,YAAY,GAAG,EAAE,EAAE;AACnB,SAAS;AACT,QAAQ;AACR,YAAY,IAAI,EAAE,EAAE;AACpB,YAAY,GAAG,EAAE,GAAG;AACpB,SAAS;AACT,KAAK,CAAC;AACN,IAAI,IAAI,YAAY,EAAE;AACtB;AACA;AACA;AACA,QAAQ,IAAI,MAAM,KAAK,SAAS,CAAC,MAAM,CAAC,gBAAgB,EAAE;AAC1D,YAAY,OAAO,IAAI,CAAC;AACxB,QAAQ,CAAC;AACT;AACA;AACA;AACA,QAAQ,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACtD,QAAQ,IAAI,cAAc,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;AACxC,YAAY,OAAO,EAAE,CAAC;AACtB,QAAQ,CAAC;AACT,aAAa,IAAI,cAAc,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;AAC7C,YAAY,OAAO,EAAE,CAAC;AACtB,QAAQ,CAAC;AACT,aAAa,IAAI,cAAc,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;AAC7C,YAAY,OAAO,EAAE,CAAC;AACtB,QAAQ,CAAC;AACT,aAAa,IAAI,cAAc,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;AAC7C,YAAY,OAAO,EAAE,CAAC;AACtB,QAAQ,CAAC;AACT,aAAa,IAAI,cAAc,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;AAC7C,YAAY,OAAO,EAAE,CAAC;AACtB,QAAQ,CAAC;AACT,aAAa,IAAI,cAAc,CAAC,CAAC,CAAC,KAAK,IAAI,IAAI,cAAc,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE;AACjG,YAAY,OAAO,EAAE,CAAC;AACtB,QAAQ,CAAC;AACT,aAAa,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE;AACtC;AACA,YAAY,OAAO,EAAE,CAAC;AACtB,QAAQ,CAAC;AACT,aAAa,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE;AACtC,YAAY,OAAO,EAAE,CAAC;AACtB,QAAQ,CAAC;AACT,aAAa;AACb,YAAY,MAAM,WAAW,GAAG,mBAAmB,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;AAChE,YAAY,MAAM,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK;AACpD,gBAAgB,OAAO,MAAM,CAAC,GAAG,IAAI,WAAW,CAAC;AACjD,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC;AACpB,YAAY,OAAO,IAAI,CAAC;AACxB,QAAQ,CAAC;AACT,IAAI,CAAC;AACL,SAAS;AACT,QAAQ,MAAM,WAAW,GAAG,wBAAwB,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;AACjE,QAAQ,IAAI,WAAW,KAAK,CAAC,EAAE;AAC/B;AACA,YAAY,OAAO,EAAE,CAAC;AACtB,QAAQ,CAAC;AACT,aAAa;AACb;AACA,YAAY,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE;AAC1C,gBAAgB,OAAO,EAAE,CAAC;AAC1B,YAAY,CAAC;AACb,iBAAiB;AACjB,gBAAgB,OAAO,IAAI,CAAC;AAC5B,YAAY,CAAC;AACb,QAAQ,CAAC;AACT,IAAI,CAAC;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iBAAiB,CAAC,IAAI,EAAE,IAAI,EAAE;AACvC,IAAI,IAAI,UAAU,GAAG;AACrB,QAAQ,QAAQ,EAAE,IAAI,CAAC,IAAI;AAC3B,KAAK,CAAC;AACN,IAAI,IAAI,IAAI,CAAC,UAAU,EAAE;AACzB,QAAQ,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,CAAC,MAAM,CAAC,gBAAgB,EAAE;AAC/D;AACA;AACA,YAAY,OAAO;AACnB,QAAQ,CAAC;AACT,QAAQ,MAAM,UAAU,GAAG,mBAAmB,CAAC,IAAI,CAAC,CAAC;AACrD,QAAQ,UAAU,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;AAC5C,QAAQ,UAAU,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;AAC5C,IAAI,CAAC;AACL,SAAS;AACT,QAAQ,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,EAAE;AAC9B;AACA,YAAY,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC;AACjC,YAAY,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC;AACjC,QAAQ,CAAC;AACT,aAAa;AACb,YAAY,MAAM,UAAU,GAAG,wBAAwB,CAAC,IAAI,CAAC,CAAC;AAC9D,YAAY,UAAU,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;AAChD,YAAY,UAAU,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;AAChD,QAAQ,CAAC;AACT,IAAI,CAAC;AACL,IAAI,OAAO,UAAU,CAAC;AACtB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mBAAmB,CAAC,IAAI,EAAE;AACnC,IAAI,OAAO;AACX,QAAQ,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;AACtC,QAAQ,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;AACtC,KAAK,CAAC;AACN,CAAC;AACD,SAAS,wBAAwB,CAAC,IAAI,EAAE;AACxC,IAAI,OAAO;AACX,QAAQ,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;AACtC,QAAQ,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;AACtC,KAAK,CAAC;AACN;;ACzoBK,MAAC,MAAM,GAAG,aAAa,CAAC;;;;","x_google_ignoreList":[1,5,6,8,9,10,11,12,13,14,15,16,17]}